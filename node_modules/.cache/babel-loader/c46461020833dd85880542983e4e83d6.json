{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leezh\\\\Documents\\\\Coding\\\\Orbital Test\\\\Orbital-Duty-Planner\\\\src\\\\components\\\\time_slots.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst time = ['Day Shift', 'Night Shift'];\n\nfunction Time_slots(props) {\n  _s();\n\n  const [event, setEvent] = useState(null);\n  const [info, setInfo] = useState(false);\n\n  function displayInfo(e) {\n    setInfo(true);\n    setEvent(e.target.innerText);\n  }\n  /* function List(props) {\r\n    const values = props.values;\r\n    const listItems = values.map((value) =>\r\n      <li key={value.toString()}>\r\n        {value}\r\n      </li>\r\n    );\r\n    return (\r\n      <u1>{listItems}</u1>\r\n    );\r\n  } */\n\n  /* function App() {\r\n    const [newEvent, setNewEvent] = useState({ date: \"\", shift: \"\"});\r\n    const [allEvents, setAllEvents] = useState(events);\r\n  \r\n    function handleAddEvent(){\r\n      setAllEvents([...allEvents, newEvent]);\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Calendar_test</h1>\r\n      </div>\r\n    )\r\n  } */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"times\",\n    children: [time.map(times => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => displayInfo(e),\n          children: [\" \", times, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => List(e.target.value),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You have selected \", event, \" \", props.date.toDateString(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Current List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), List]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Time_slots, \"AoGjvsPeU3L8sgr2XVWN+BL1aNU=\");\n\n_c = Time_slots;\nexport default Time_slots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Time_slots\");","map":{"version":3,"names":["React","useState","Calendar","time","Time_slots","props","event","setEvent","info","setInfo","displayInfo","e","target","innerText","map","times","List","value","date","toDateString"],"sources":["C:/Users/leezh/Documents/Coding/Orbital Test/Orbital-Duty-Planner/src/components/time_slots.js"],"sourcesContent":["import React from 'react'\r\nimport {useState} from 'react';\r\nimport Calendar from 'react-calendar';\r\n\r\nconst time = ['Day Shift','Night Shift']\r\n\r\nfunction Time_slots(props) {\r\n\r\n const [event, setEvent] = useState(null)\r\n const [info, setInfo] = useState(false)\r\n\r\n function displayInfo(e) {\r\n   setInfo(true);\r\n   setEvent(e.target.innerText);\r\n}\r\n\r\n/* function List(props) {\r\n  const values = props.values;\r\n  const listItems = values.map((value) =>\r\n    <li key={value.toString()}>\r\n      {value}\r\n    </li>\r\n  );\r\n  return (\r\n    <u1>{listItems}</u1>\r\n  );\r\n} */\r\n\r\n/* function App() {\r\n  const [newEvent, setNewEvent] = useState({ date: \"\", shift: \"\"});\r\n  const [allEvents, setAllEvents] = useState(events);\r\n\r\n  function handleAddEvent(){\r\n    setAllEvents([...allEvents, newEvent]);\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Calendar_test</h1>\r\n    </div>\r\n  )\r\n} */\r\n\r\nreturn (\r\n    <div className=\"times\">\r\n      {time.map(times => {\r\n        return (\r\n        <div>\r\n          <button onClick={(e)=> displayInfo(e)}> {times} </button>\r\n           <button onClick={(e) => List(e.target.value)}>Add</button>\r\n         </div>\r\n            )\r\n      })}\r\n      <div>\r\n        <p>You have selected {event} {props.date.toDateString()} </p>\r\n      </div>\r\n      <div>\r\n        <p>Current List:</p>\r\n          {List}\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Time_slots;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC,WAAD,EAAa,aAAb,CAAb;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAAA;;EAE1B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;;EAEA,SAASS,WAAT,CAAqBC,CAArB,EAAwB;IACtBF,OAAO,CAAC,IAAD,CAAP;IACAF,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,SAAV,CAAR;EACF;EAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAEA,oBACI;IAAK,SAAS,EAAC,OAAf;IAAA,WACGV,IAAI,CAACW,GAAL,CAASC,KAAK,IAAI;MACjB,oBACA;QAAA,wBACE;UAAQ,OAAO,EAAGJ,CAAD,IAAMD,WAAW,CAACC,CAAD,CAAlC;UAAA,gBAAyCI,KAAzC;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEG;UAAQ,OAAO,EAAGJ,CAAD,IAAOK,IAAI,CAACL,CAAC,CAACC,MAAF,CAASK,KAAV,CAA5B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFH;MAAA;QAAA;QAAA;QAAA;MAAA,QADA;IAMD,CAPA,CADH,eASE;MAAA,uBACE;QAAA,iCAAsBX,KAAtB,OAA8BD,KAAK,CAACa,IAAN,CAAWC,YAAX,EAA9B;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QATF,eAYE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEKH,IAFL;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBC;;GAvDQZ,U;;KAAAA,U;AAyDT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}