{"ast":null,"code":"/**\n * Parser\n */\nvar defaultNumberingSystem = {\n  'latn': {\n    '_digits': '0123456789',\n    '_type': 'numeric'\n  }\n};\nimport { isUndefined, getValue, isBlazor } from '../util';\nvar defaultNumberSymbols = {\n  'decimal': '.',\n  'group': ',',\n  'percentSign': '%',\n  'plusSign': '+',\n  'minusSign': '-',\n  'infinity': '∞',\n  'nan': 'NaN',\n  'exponential': 'E'\n};\nvar latnNumberSystem = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n/**\n * Interface for parser base\n *\n * @private\n */\n\nvar ParserBase =\n/** @class */\nfunction () {\n  function ParserBase() {}\n  /**\n   * Returns the cldr object for the culture specifies\n   *\n   * @param {Object} obj - Specifies the object from which culture object to be acquired.\n   * @param {string} cName - Specifies the culture name.\n   * @returns {Object} ?\n   */\n\n\n  ParserBase.getMainObject = function (obj, cName) {\n    var value = isBlazor() ? cName : 'main.' + cName;\n    return getValue(value, obj);\n  };\n  /**\n   * Returns the numbering system object from given cldr data.\n   *\n   * @param {Object} obj - Specifies the object from which number system is acquired.\n   * @returns {Object} ?\n   */\n\n\n  ParserBase.getNumberingSystem = function (obj) {\n    return getValue('supplemental.numberingSystems', obj) || this.numberingSystems;\n  };\n  /**\n   * Returns the reverse of given object keys or keys specified.\n   *\n   * @param {Object} prop - Specifies the object to be reversed.\n   * @param {number[]} keys - Optional parameter specifies the custom keyList for reversal.\n   * @returns {Object} ?\n   */\n\n\n  ParserBase.reverseObject = function (prop, keys) {\n    var propKeys = keys || Object.keys(prop);\n    var res = {};\n\n    for (var _i = 0, propKeys_1 = propKeys; _i < propKeys_1.length; _i++) {\n      var key = propKeys_1[_i]; // eslint-disable-next-line\n\n      if (!res.hasOwnProperty(prop[key])) {\n        // eslint-disable-next-line\n        res[prop[key]] = key;\n      }\n    }\n\n    return res;\n  };\n  /**\n   * Returns the symbol regex by skipping the escape sequence.\n   *\n   * @param {string[]} props - Specifies the array values to be skipped.\n   * @returns {RegExp} ?\n   */\n\n\n  ParserBase.getSymbolRegex = function (props) {\n    var regexStr = props.map(function (str) {\n      return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n    }).join('|');\n    return new RegExp(regexStr, 'g');\n  };\n  /**\n   *\n   * @param {Object} prop ?\n   * @returns {Object} ?\n   */\n\n\n  ParserBase.getSymbolMatch = function (prop) {\n    var matchKeys = Object.keys(defaultNumberSymbols);\n    var ret = {};\n\n    for (var _i = 0, matchKeys_1 = matchKeys; _i < matchKeys_1.length; _i++) {\n      var key = matchKeys_1[_i]; // eslint-disable-next-line\n\n      ret[prop[key]] = defaultNumberSymbols[key];\n    }\n\n    return ret;\n  };\n  /**\n   * Returns regex string for provided value\n   *\n   * @param {string} val ?\n   * @returns {string} ?\n   */\n\n\n  ParserBase.constructRegex = function (val) {\n    var len = val.length;\n    var ret = '';\n\n    for (var i = 0; i < len; i++) {\n      if (i !== len - 1) {\n        ret += val[i] + '|';\n      } else {\n        ret += val[i];\n      }\n    }\n\n    return ret;\n  };\n  /**\n   * Returns the replaced value of matching regex and obj mapper.\n   *\n   * @param {string} value - Specifies the  values to be replaced.\n   * @param {RegExp} regex - Specifies the  regex to search.\n   * @param {Object} obj - Specifies the  object matcher to be replace value parts.\n   * @returns {string} ?\n   */\n\n\n  ParserBase.convertValueParts = function (value, regex, obj) {\n    return value.replace(regex, function (str) {\n      // eslint-disable-next-line\n      return obj[str];\n    });\n  };\n  /**\n   * Returns default numbering system object for formatting from cldr data\n   *\n   * @param {Object} obj ?\n   * @returns {NumericObject} ?\n   */\n\n\n  ParserBase.getDefaultNumberingSystem = function (obj) {\n    var ret = {};\n    ret.obj = getValue('numbers', obj);\n    ret.nSystem = getValue('defaultNumberingSystem', ret.obj);\n    return ret;\n  };\n  /**\n   * Returns the replaced value of matching regex and obj mapper.\n   *\n   * @param {Object} curObj ?\n   * @param {Object} numberSystem ?\n   * @param {boolean} needSymbols ?\n   * @param {boolean} blazorMode ?\n   * @returns {Object} ?\n   */\n\n\n  ParserBase.getCurrentNumericOptions = function (curObj, numberSystem, needSymbols, blazorMode) {\n    var ret = {};\n    var cur = this.getDefaultNumberingSystem(curObj);\n\n    if (!isUndefined(cur.nSystem) || blazorMode) {\n      var digits = blazorMode ? getValue('obj.mapperDigits', cur) : getValue(cur.nSystem + '._digits', numberSystem);\n\n      if (!isUndefined(digits)) {\n        ret.numericPair = this.reverseObject(digits, latnNumberSystem);\n        ret.numberParseRegex = new RegExp(this.constructRegex(digits), 'g');\n        ret.numericRegex = '[' + digits[0] + '-' + digits[9] + ']';\n\n        if (needSymbols) {\n          ret.numericRegex = digits[0] + '-' + digits[9];\n          ret.symbolNumberSystem = getValue(blazorMode ? 'numberSymbols' : 'symbols-numberSystem-' + cur.nSystem, cur.obj);\n          ret.symbolMatch = this.getSymbolMatch(ret.symbolNumberSystem);\n          ret.numberSystem = cur.nSystem;\n        }\n      }\n    }\n\n    return ret;\n  };\n  /**\n   * Returns number mapper object for the provided cldr data\n   *\n   * @param {Object} curObj ?\n   * @param {Object} numberSystem ?\n   * @param {boolean} isNumber ?\n   * @returns {NumberMapper} ?\n   */\n  // eslint-disable-next-line\n\n\n  ParserBase.getNumberMapper = function (curObj, numberSystem, isNumber) {\n    var ret = {\n      mapper: {}\n    };\n    var cur = this.getDefaultNumberingSystem(curObj);\n\n    if (!isUndefined(cur.nSystem)) {\n      ret.numberSystem = cur.nSystem;\n      ret.numberSymbols = getValue('symbols-numberSystem-' + cur.nSystem, cur.obj);\n      ret.timeSeparator = getValue('timeSeparator', ret.numberSymbols);\n      var digits = getValue(cur.nSystem + '._digits', numberSystem);\n\n      if (!isUndefined(digits)) {\n        for (var _i = 0, latnNumberSystem_1 = latnNumberSystem; _i < latnNumberSystem_1.length; _i++) {\n          var i = latnNumberSystem_1[_i]; // eslint-disable-next-line\n\n          ret.mapper[i] = digits[i];\n        }\n      }\n    }\n\n    return ret;\n  };\n\n  ParserBase.nPair = 'numericPair';\n  ParserBase.nRegex = 'numericRegex';\n  ParserBase.numberingSystems = defaultNumberingSystem;\n  return ParserBase;\n}();\n\nexport { ParserBase };\n/**\n * @private\n */\n\nvar blazorCurrencyData = {\n  'DJF': 'Fdj',\n  'ERN': 'Nfk',\n  'ETB': 'Br',\n  'NAD': '$',\n  'ZAR': 'R',\n  'XAF': 'FCFA',\n  'GHS': 'GH₵',\n  'XDR': 'XDR',\n  'AED': 'د.إ.‏',\n  'BHD': 'د.ب.‏',\n  'DZD': 'د.ج.‏',\n  'EGP': 'ج.م.‏',\n  'ILS': '₪',\n  'IQD': 'د.ع.‏',\n  'JOD': 'د.ا.‏',\n  'KMF': 'CF',\n  'KWD': 'د.ك.‏',\n  'LBP': 'ل.ل.‏',\n  'LYD': 'د.ل.‏',\n  'MAD': 'د.م.‏',\n  'MRU': 'أ.م.',\n  'OMR': 'ر.ع.‏',\n  'QAR': 'ر.ق.‏',\n  'SAR': 'ر.س.‏',\n  'SDG': 'ج.س.',\n  'SOS': 'S',\n  'SSP': '£',\n  'SYP': 'ل.س.‏',\n  'TND': 'د.ت.‏',\n  'YER': 'ر.ي.‏',\n  'CLP': '$',\n  'INR': '₹',\n  'TZS': 'TSh',\n  'EUR': '€',\n  'AZN': '₼',\n  'RUB': '₽',\n  'BYN': 'Br',\n  'ZMW': 'K',\n  'BGN': 'лв.',\n  'NGN': '₦',\n  'XOF': 'CFA',\n  'BDT': '৳',\n  'CNY': '¥',\n  'BAM': 'КМ',\n  'UGX': 'USh',\n  'USD': '$',\n  'CZK': 'Kč',\n  'GBP': '£',\n  'DKK': 'kr.',\n  'KES': 'Ksh',\n  'CHF': 'CHF',\n  'MVR': 'ރ.',\n  'BTN': 'Nu.',\n  'XCD': 'EC$',\n  'AUD': '$',\n  'BBD': '$',\n  'BIF': 'FBu',\n  'BMD': '$',\n  'BSD': '$',\n  'BWP': 'P',\n  'BZD': '$',\n  'CAD': '$',\n  'NZD': '$',\n  'FJD': '$',\n  'FKP': '£',\n  'GIP': '£',\n  'GMD': 'D',\n  'GYD': '$',\n  'HKD': '$',\n  'IDR': 'Rp',\n  'JMD': '$',\n  'KYD': '$',\n  'LRD': '$',\n  'MGA': 'Ar',\n  'MOP': 'MOP$',\n  'MUR': 'Rs',\n  'MWK': 'MK',\n  'MYR': 'RM',\n  'PGK': 'K',\n  'PHP': '₱',\n  'PKR': 'Rs',\n  'RWF': 'RF',\n  'SBD': '$',\n  'SCR': 'SR',\n  'SEK': 'kr',\n  'SGD': '$',\n  'SHP': '£',\n  'SLL': 'Le',\n  'ANG': 'NAf.',\n  'SZL': 'E',\n  'TOP': 'T$',\n  'TTD': '$',\n  'VUV': 'VT',\n  'WST': 'WS$',\n  'ARS': '$',\n  'BOB': 'Bs',\n  'BRL': 'R$',\n  'COP': '$',\n  'CRC': '₡',\n  'CUP': '$',\n  'DOP': '$',\n  'GTQ': 'Q',\n  'HNL': 'L',\n  'MXN': '$',\n  'NIO': 'C$',\n  'PAB': 'B/.',\n  'PEN': 'S/',\n  'PYG': '₲',\n  'UYU': '$',\n  'VES': 'Bs.S',\n  'IRR': 'ريال',\n  'GNF': 'FG',\n  'CDF': 'FC',\n  'HTG': 'G',\n  'XPF': 'FCFP',\n  'HRK': 'kn',\n  'HUF': 'Ft',\n  'AMD': '֏',\n  'ISK': 'kr',\n  'JPY': '¥',\n  'GEL': '₾',\n  'CVE': '​',\n  'KZT': '₸',\n  'KHR': '៛',\n  'KPW': '₩',\n  'KRW': '₩',\n  'KGS': 'сом',\n  'AOA': 'Kz',\n  'LAK': '₭',\n  'MZN': 'MTn',\n  'MKD': 'ден',\n  'MNT': '₮',\n  'BND': '$',\n  'MMK': 'K',\n  'NOK': 'kr',\n  'NPR': 'रु',\n  'AWG': 'Afl.',\n  'SRD': '$',\n  'PLN': 'zł',\n  'AFN': '؋',\n  'STN': 'Db',\n  'MDL': 'L',\n  'RON': 'lei',\n  'UAH': '₴',\n  'LKR': 'රු.',\n  'ALL': 'Lekë',\n  'RSD': 'дин.',\n  'TJS': 'смн',\n  'THB': '฿',\n  'TMT': 'm.',\n  'TRY': '₺',\n  'UZS': 'сўм',\n  'VND': '₫',\n  'TWD': 'NT$'\n};\n/**\n *\n * @param {string} currencyCode ?\n * @returns {string} ?\n */\n\nexport function getBlazorCurrencySymbol(currencyCode) {\n  return getValue(currencyCode || '', blazorCurrencyData);\n}","map":{"version":3,"names":["defaultNumberingSystem","isUndefined","getValue","isBlazor","defaultNumberSymbols","latnNumberSystem","ParserBase","getMainObject","obj","cName","value","getNumberingSystem","numberingSystems","reverseObject","prop","keys","propKeys","Object","res","_i","propKeys_1","length","key","hasOwnProperty","getSymbolRegex","props","regexStr","map","str","replace","join","RegExp","getSymbolMatch","matchKeys","ret","matchKeys_1","constructRegex","val","len","i","convertValueParts","regex","getDefaultNumberingSystem","nSystem","getCurrentNumericOptions","curObj","numberSystem","needSymbols","blazorMode","cur","digits","numericPair","numberParseRegex","numericRegex","symbolNumberSystem","symbolMatch","getNumberMapper","isNumber","mapper","numberSymbols","timeSeparator","latnNumberSystem_1","nPair","nRegex","blazorCurrencyData","getBlazorCurrencySymbol","currencyCode"],"sources":["C:/Users/leezh/Documents/Coding/Orbital Test/Orbital-Duty-Planner/node_modules/@syncfusion/ej2-base/src/intl/parser-base.js"],"sourcesContent":["/**\n * Parser\n */\nvar defaultNumberingSystem = {\n    'latn': {\n        '_digits': '0123456789',\n        '_type': 'numeric'\n    }\n};\nimport { isUndefined, getValue, isBlazor } from '../util';\nvar defaultNumberSymbols = {\n    'decimal': '.',\n    'group': ',',\n    'percentSign': '%',\n    'plusSign': '+',\n    'minusSign': '-',\n    'infinity': '∞',\n    'nan': 'NaN',\n    'exponential': 'E'\n};\nvar latnNumberSystem = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n/**\n * Interface for parser base\n *\n * @private\n */\nvar ParserBase = /** @class */ (function () {\n    function ParserBase() {\n    }\n    /**\n     * Returns the cldr object for the culture specifies\n     *\n     * @param {Object} obj - Specifies the object from which culture object to be acquired.\n     * @param {string} cName - Specifies the culture name.\n     * @returns {Object} ?\n     */\n    ParserBase.getMainObject = function (obj, cName) {\n        var value = isBlazor() ? cName : 'main.' + cName;\n        return getValue(value, obj);\n    };\n    /**\n     * Returns the numbering system object from given cldr data.\n     *\n     * @param {Object} obj - Specifies the object from which number system is acquired.\n     * @returns {Object} ?\n     */\n    ParserBase.getNumberingSystem = function (obj) {\n        return getValue('supplemental.numberingSystems', obj) || this.numberingSystems;\n    };\n    /**\n     * Returns the reverse of given object keys or keys specified.\n     *\n     * @param {Object} prop - Specifies the object to be reversed.\n     * @param {number[]} keys - Optional parameter specifies the custom keyList for reversal.\n     * @returns {Object} ?\n     */\n    ParserBase.reverseObject = function (prop, keys) {\n        var propKeys = keys || Object.keys(prop);\n        var res = {};\n        for (var _i = 0, propKeys_1 = propKeys; _i < propKeys_1.length; _i++) {\n            var key = propKeys_1[_i];\n            // eslint-disable-next-line\n            if (!res.hasOwnProperty(prop[key])) {\n                // eslint-disable-next-line\n                res[prop[key]] = key;\n            }\n        }\n        return res;\n    };\n    /**\n     * Returns the symbol regex by skipping the escape sequence.\n     *\n     * @param {string[]} props - Specifies the array values to be skipped.\n     * @returns {RegExp} ?\n     */\n    ParserBase.getSymbolRegex = function (props) {\n        var regexStr = props.map(function (str) {\n            return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n        }).join('|');\n        return new RegExp(regexStr, 'g');\n    };\n    /**\n     *\n     * @param {Object} prop ?\n     * @returns {Object} ?\n     */\n    ParserBase.getSymbolMatch = function (prop) {\n        var matchKeys = Object.keys(defaultNumberSymbols);\n        var ret = {};\n        for (var _i = 0, matchKeys_1 = matchKeys; _i < matchKeys_1.length; _i++) {\n            var key = matchKeys_1[_i];\n            // eslint-disable-next-line\n            ret[prop[key]] = defaultNumberSymbols[key];\n        }\n        return ret;\n    };\n    /**\n     * Returns regex string for provided value\n     *\n     * @param {string} val ?\n     * @returns {string} ?\n     */\n    ParserBase.constructRegex = function (val) {\n        var len = val.length;\n        var ret = '';\n        for (var i = 0; i < len; i++) {\n            if (i !== len - 1) {\n                ret += val[i] + '|';\n            }\n            else {\n                ret += val[i];\n            }\n        }\n        return ret;\n    };\n    /**\n     * Returns the replaced value of matching regex and obj mapper.\n     *\n     * @param {string} value - Specifies the  values to be replaced.\n     * @param {RegExp} regex - Specifies the  regex to search.\n     * @param {Object} obj - Specifies the  object matcher to be replace value parts.\n     * @returns {string} ?\n     */\n    ParserBase.convertValueParts = function (value, regex, obj) {\n        return value.replace(regex, function (str) {\n            // eslint-disable-next-line\n            return obj[str];\n        });\n    };\n    /**\n     * Returns default numbering system object for formatting from cldr data\n     *\n     * @param {Object} obj ?\n     * @returns {NumericObject} ?\n     */\n    ParserBase.getDefaultNumberingSystem = function (obj) {\n        var ret = {};\n        ret.obj = getValue('numbers', obj);\n        ret.nSystem = getValue('defaultNumberingSystem', ret.obj);\n        return ret;\n    };\n    /**\n     * Returns the replaced value of matching regex and obj mapper.\n     *\n     * @param {Object} curObj ?\n     * @param {Object} numberSystem ?\n     * @param {boolean} needSymbols ?\n     * @param {boolean} blazorMode ?\n     * @returns {Object} ?\n     */\n    ParserBase.getCurrentNumericOptions = function (curObj, numberSystem, needSymbols, blazorMode) {\n        var ret = {};\n        var cur = this.getDefaultNumberingSystem(curObj);\n        if (!isUndefined(cur.nSystem) || blazorMode) {\n            var digits = blazorMode ? getValue('obj.mapperDigits', cur) : getValue(cur.nSystem + '._digits', numberSystem);\n            if (!isUndefined(digits)) {\n                ret.numericPair = this.reverseObject(digits, latnNumberSystem);\n                ret.numberParseRegex = new RegExp(this.constructRegex(digits), 'g');\n                ret.numericRegex = '[' + digits[0] + '-' + digits[9] + ']';\n                if (needSymbols) {\n                    ret.numericRegex = digits[0] + '-' + digits[9];\n                    ret.symbolNumberSystem = getValue(blazorMode ? 'numberSymbols' : 'symbols-numberSystem-' + cur.nSystem, cur.obj);\n                    ret.symbolMatch = this.getSymbolMatch(ret.symbolNumberSystem);\n                    ret.numberSystem = cur.nSystem;\n                }\n            }\n        }\n        return ret;\n    };\n    /**\n     * Returns number mapper object for the provided cldr data\n     *\n     * @param {Object} curObj ?\n     * @param {Object} numberSystem ?\n     * @param {boolean} isNumber ?\n     * @returns {NumberMapper} ?\n     */\n    // eslint-disable-next-line\n    ParserBase.getNumberMapper = function (curObj, numberSystem, isNumber) {\n        var ret = { mapper: {} };\n        var cur = this.getDefaultNumberingSystem(curObj);\n        if (!isUndefined(cur.nSystem)) {\n            ret.numberSystem = cur.nSystem;\n            ret.numberSymbols = getValue('symbols-numberSystem-' + cur.nSystem, cur.obj);\n            ret.timeSeparator = getValue('timeSeparator', ret.numberSymbols);\n            var digits = getValue(cur.nSystem + '._digits', numberSystem);\n            if (!isUndefined(digits)) {\n                for (var _i = 0, latnNumberSystem_1 = latnNumberSystem; _i < latnNumberSystem_1.length; _i++) {\n                    var i = latnNumberSystem_1[_i];\n                    // eslint-disable-next-line\n                    ret.mapper[i] = digits[i];\n                }\n            }\n        }\n        return ret;\n    };\n    ParserBase.nPair = 'numericPair';\n    ParserBase.nRegex = 'numericRegex';\n    ParserBase.numberingSystems = defaultNumberingSystem;\n    return ParserBase;\n}());\nexport { ParserBase };\n/**\n * @private\n */\nvar blazorCurrencyData = {\n    'DJF': 'Fdj',\n    'ERN': 'Nfk',\n    'ETB': 'Br',\n    'NAD': '$',\n    'ZAR': 'R',\n    'XAF': 'FCFA',\n    'GHS': 'GH₵',\n    'XDR': 'XDR',\n    'AED': 'د.إ.‏',\n    'BHD': 'د.ب.‏',\n    'DZD': 'د.ج.‏',\n    'EGP': 'ج.م.‏',\n    'ILS': '₪',\n    'IQD': 'د.ع.‏',\n    'JOD': 'د.ا.‏',\n    'KMF': 'CF',\n    'KWD': 'د.ك.‏',\n    'LBP': 'ل.ل.‏',\n    'LYD': 'د.ل.‏',\n    'MAD': 'د.م.‏',\n    'MRU': 'أ.م.',\n    'OMR': 'ر.ع.‏',\n    'QAR': 'ر.ق.‏',\n    'SAR': 'ر.س.‏',\n    'SDG': 'ج.س.',\n    'SOS': 'S',\n    'SSP': '£',\n    'SYP': 'ل.س.‏',\n    'TND': 'د.ت.‏',\n    'YER': 'ر.ي.‏',\n    'CLP': '$',\n    'INR': '₹',\n    'TZS': 'TSh',\n    'EUR': '€',\n    'AZN': '₼',\n    'RUB': '₽',\n    'BYN': 'Br',\n    'ZMW': 'K',\n    'BGN': 'лв.',\n    'NGN': '₦',\n    'XOF': 'CFA',\n    'BDT': '৳',\n    'CNY': '¥',\n    'BAM': 'КМ',\n    'UGX': 'USh',\n    'USD': '$',\n    'CZK': 'Kč',\n    'GBP': '£',\n    'DKK': 'kr.',\n    'KES': 'Ksh',\n    'CHF': 'CHF',\n    'MVR': 'ރ.',\n    'BTN': 'Nu.',\n    'XCD': 'EC$',\n    'AUD': '$',\n    'BBD': '$',\n    'BIF': 'FBu',\n    'BMD': '$',\n    'BSD': '$',\n    'BWP': 'P',\n    'BZD': '$',\n    'CAD': '$',\n    'NZD': '$',\n    'FJD': '$',\n    'FKP': '£',\n    'GIP': '£',\n    'GMD': 'D',\n    'GYD': '$',\n    'HKD': '$',\n    'IDR': 'Rp',\n    'JMD': '$',\n    'KYD': '$',\n    'LRD': '$',\n    'MGA': 'Ar',\n    'MOP': 'MOP$',\n    'MUR': 'Rs',\n    'MWK': 'MK',\n    'MYR': 'RM',\n    'PGK': 'K',\n    'PHP': '₱',\n    'PKR': 'Rs',\n    'RWF': 'RF',\n    'SBD': '$',\n    'SCR': 'SR',\n    'SEK': 'kr',\n    'SGD': '$',\n    'SHP': '£',\n    'SLL': 'Le',\n    'ANG': 'NAf.',\n    'SZL': 'E',\n    'TOP': 'T$',\n    'TTD': '$',\n    'VUV': 'VT',\n    'WST': 'WS$',\n    'ARS': '$',\n    'BOB': 'Bs',\n    'BRL': 'R$',\n    'COP': '$',\n    'CRC': '₡',\n    'CUP': '$',\n    'DOP': '$',\n    'GTQ': 'Q',\n    'HNL': 'L',\n    'MXN': '$',\n    'NIO': 'C$',\n    'PAB': 'B/.',\n    'PEN': 'S/',\n    'PYG': '₲',\n    'UYU': '$',\n    'VES': 'Bs.S',\n    'IRR': 'ريال',\n    'GNF': 'FG',\n    'CDF': 'FC',\n    'HTG': 'G',\n    'XPF': 'FCFP',\n    'HRK': 'kn',\n    'HUF': 'Ft',\n    'AMD': '֏',\n    'ISK': 'kr',\n    'JPY': '¥',\n    'GEL': '₾',\n    'CVE': '​',\n    'KZT': '₸',\n    'KHR': '៛',\n    'KPW': '₩',\n    'KRW': '₩',\n    'KGS': 'сом',\n    'AOA': 'Kz',\n    'LAK': '₭',\n    'MZN': 'MTn',\n    'MKD': 'ден',\n    'MNT': '₮',\n    'BND': '$',\n    'MMK': 'K',\n    'NOK': 'kr',\n    'NPR': 'रु',\n    'AWG': 'Afl.',\n    'SRD': '$',\n    'PLN': 'zł',\n    'AFN': '؋',\n    'STN': 'Db',\n    'MDL': 'L',\n    'RON': 'lei',\n    'UAH': '₴',\n    'LKR': 'රු.',\n    'ALL': 'Lekë',\n    'RSD': 'дин.',\n    'TJS': 'смн',\n    'THB': '฿',\n    'TMT': 'm.',\n    'TRY': '₺',\n    'UZS': 'сўм',\n    'VND': '₫',\n    'TWD': 'NT$'\n};\n/**\n *\n * @param {string} currencyCode ?\n * @returns {string} ?\n */\nexport function getBlazorCurrencySymbol(currencyCode) {\n    return getValue(currencyCode || '', blazorCurrencyData);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}