{"ast":null,"code":"/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(function () {\n  'use strict';\n  /**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n\n  var MaterialButton = function MaterialButton(element) {\n    this.element_ = element; // Initialize instance.\n\n    this.init();\n  };\n\n  window['MaterialButton'] = MaterialButton;\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n\n  MaterialButton.prototype.Constant_ = {// None for now.\n  };\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n\n  MaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n  };\n  /**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n\n  MaterialButton.prototype.blurHandler_ = function (event) {\n    if (event) {\n      this.element_.blur();\n    }\n  }; // Public methods.\n\n  /**\n   * Disable button.\n   *\n   * @public\n   */\n\n\n  MaterialButton.prototype.disable = function () {\n    this.element_.disabled = true;\n  };\n\n  MaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n  /**\n   * Enable button.\n   *\n   * @public\n   */\n\n  MaterialButton.prototype.enable = function () {\n    this.element_.disabled = false;\n  };\n\n  MaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n  /**\n   * Initialize element.\n   */\n\n  MaterialButton.prototype.init = function () {\n    if (this.element_) {\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleElement_ = document.createElement('span');\n        this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(this.rippleElement_);\n        this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n        this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n        this.element_.appendChild(rippleContainer);\n      }\n\n      this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n      this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n      this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n  }; // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n\n\n  componentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n  });\n})();","map":{"version":3,"names":["MaterialButton","element","element_","init","window","prototype","Constant_","CssClasses_","RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","blurHandler_","event","blur","disable","disabled","enable","classList","contains","rippleContainer","document","createElement","add","rippleElement_","appendChild","boundRippleBlurHandler","bind","addEventListener","boundButtonBlurHandler","componentHandler","register","constructor","classAsString","cssClass","widget"],"sources":["C:/Users/jweey/node_modules/material-design-lite/src/button/button.js"],"sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialButton'] = MaterialButton;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialButton.prototype.Constant_ = {\n    // None for now.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n  };\n\n  /**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialButton.prototype.blurHandler_ = function(event) {\n    if (event) {\n      this.element_.blur();\n    }\n  };\n\n  // Public methods.\n\n  /**\n   * Disable button.\n   *\n   * @public\n   */\n  MaterialButton.prototype.disable = function() {\n    this.element_.disabled = true;\n  };\n  MaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n\n  /**\n   * Enable button.\n   *\n   * @public\n   */\n  MaterialButton.prototype.enable = function() {\n    this.element_.disabled = false;\n  };\n  MaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n\n  /**\n   * Initialize element.\n   */\n  MaterialButton.prototype.init = function() {\n    if (this.element_) {\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleElement_ = document.createElement('span');\n        this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(this.rippleElement_);\n        this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n        this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n        this.element_.appendChild(rippleContainer);\n      }\n      this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n      this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n      this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n  });\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}