{"ast":null,"code":"import { Ajax } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query } from './query';\nimport { ODataAdaptor, JsonAdaptor, CacheAdaptor, RemoteSaveAdaptor, CustomDataAdaptor } from './adaptors';\n/**\n * DataManager is used to manage and manipulate relational data.\n */\n\nvar DataManager =\n/** @class */\nfunction () {\n  /**\n   * Constructor for DataManager class\n   * @param  {DataOptions|JSON[]} dataSource?\n   * @param  {Query} query?\n   * @param  {AdaptorOptions|string} adaptor?\n   * @hidden\n   */\n  function DataManager(dataSource, query, adaptor) {\n    var _this = this;\n    /** @hidden */\n\n\n    this.dateParse = true;\n    /** @hidden */\n\n    this.timeZoneHandling = true;\n    this.requests = [];\n\n    if (!dataSource && !this.dataSource) {\n      dataSource = [];\n    }\n\n    adaptor = adaptor || dataSource.adaptor;\n\n    if (dataSource && dataSource.timeZoneHandling === false) {\n      this.timeZoneHandling = dataSource.timeZoneHandling;\n    }\n\n    var data;\n\n    if (dataSource instanceof Array) {\n      data = {\n        json: dataSource,\n        offline: true\n      };\n    } else if (typeof dataSource === 'object') {\n      if (!dataSource.json) {\n        dataSource.json = [];\n      }\n\n      data = {\n        url: dataSource.url,\n        insertUrl: dataSource.insertUrl,\n        removeUrl: dataSource.removeUrl,\n        updateUrl: dataSource.updateUrl,\n        crudUrl: dataSource.crudUrl,\n        batchUrl: dataSource.batchUrl,\n        json: dataSource.json,\n        headers: dataSource.headers,\n        accept: dataSource.accept,\n        data: dataSource.data,\n        timeTillExpiration: dataSource.timeTillExpiration,\n        cachingPageSize: dataSource.cachingPageSize,\n        enableCaching: dataSource.enableCaching,\n        requestType: dataSource.requestType,\n        key: dataSource.key,\n        crossDomain: dataSource.crossDomain,\n        jsonp: dataSource.jsonp,\n        dataType: dataSource.dataType,\n        offline: dataSource.offline !== undefined ? dataSource.offline : dataSource.adaptor instanceof RemoteSaveAdaptor || dataSource.adaptor instanceof CustomDataAdaptor ? false : dataSource.url ? false : true,\n        requiresFormat: dataSource.requiresFormat\n      };\n    } else {\n      DataUtil.throwError('DataManager: Invalid arguments');\n    }\n\n    if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n      data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n    }\n\n    if (data.dataType === undefined) {\n      data.dataType = 'json';\n    }\n\n    this.dataSource = data;\n    this.defaultQuery = query;\n\n    if (data.url && data.offline && !data.json.length) {\n      this.isDataAvailable = false;\n      this.adaptor = adaptor || new ODataAdaptor();\n      this.dataSource.offline = false;\n      this.ready = this.executeQuery(query || new Query());\n      this.ready.then(function (e) {\n        _this.dataSource.offline = true;\n        _this.isDataAvailable = true;\n        data.json = e.result;\n        _this.adaptor = new JsonAdaptor();\n      });\n    } else {\n      this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n    }\n\n    if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n      data.jsonp = 'callback';\n    }\n\n    this.adaptor = adaptor || this.adaptor;\n\n    if (data.enableCaching) {\n      this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n    }\n\n    return this;\n  }\n  /**\n   * Overrides DataManager's default query with given query.\n   * @param  {Query} query - Defines the new default query.\n   */\n\n\n  DataManager.prototype.setDefaultQuery = function (query) {\n    this.defaultQuery = query;\n    return this;\n  };\n  /**\n   * Executes the given query with local data source.\n   * @param  {Query} query - Defines the query to retrieve data.\n   */\n\n\n  DataManager.prototype.executeLocal = function (query) {\n    if (!this.defaultQuery && !(query instanceof Query)) {\n      DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n    }\n\n    if (!this.dataSource.json) {\n      DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n    }\n\n    query = query || this.defaultQuery;\n    var result = this.adaptor.processQuery(this, query);\n\n    if (query.subQuery) {\n      var from = query.subQuery.fromTable;\n      var lookup = query.subQuery.lookups;\n      var res = query.isCountRequired ? result.result : result;\n\n      if (lookup && lookup instanceof Array) {\n        DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n      }\n\n      for (var j = 0; j < res.length; j++) {\n        if (res[j][from] instanceof Array) {\n          res[j] = extend({}, {}, res[j]);\n          res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n        }\n      }\n    }\n\n    return this.adaptor.processResponse(result, this, query);\n  };\n  /**\n   * Executes the given query with either local or remote data source.\n   * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n   * @param  {Query|Function} query - Defines the query to retrieve data.\n   * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n   * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n   * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n   */\n\n\n  DataManager.prototype.executeQuery = function (query, done, fail, always) {\n    var _this = this;\n\n    var makeRequest = 'makeRequest';\n\n    if (typeof query === 'function') {\n      always = fail;\n      fail = done;\n      done = query;\n      query = null;\n    }\n\n    if (!query) {\n      query = this.defaultQuery;\n    }\n\n    if (!(query instanceof Query)) {\n      DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n    }\n\n    var deffered = new Deferred();\n    var args = {\n      query: query\n    };\n\n    if (!this.dataSource.offline && this.dataSource.url !== undefined && this.dataSource.url !== '' || !isNullOrUndefined(this.adaptor[makeRequest]) || this.isCustomDataAdaptor(this.adaptor)) {\n      var result = this.adaptor.processQuery(this, query);\n\n      if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n        this.adaptor[makeRequest](result, deffered, args, query);\n      } else if (!isNullOrUndefined(result.url) || this.isCustomDataAdaptor(this.adaptor)) {\n        this.makeRequest(result, deffered, args, query);\n      } else {\n        args = DataManager.getDeferedArgs(query, result, args);\n        deffered.resolve(args);\n      }\n    } else {\n      DataManager.nextTick(function () {\n        var res = _this.executeLocal(query);\n\n        args = DataManager.getDeferedArgs(query, res, args);\n        deffered.resolve(args);\n      });\n    }\n\n    if (done || fail) {\n      deffered.promise.then(done, fail);\n    }\n\n    if (always) {\n      deffered.promise.then(always, always);\n    }\n\n    return deffered.promise;\n  };\n\n  DataManager.getDeferedArgs = function (query, result, args) {\n    if (query.isCountRequired) {\n      args.result = result.result;\n      args.count = result.count;\n      args.aggregates = result.aggregates;\n    } else {\n      args.result = result;\n    }\n\n    return args;\n  };\n\n  DataManager.nextTick = function (fn) {\n    (window.setImmediate || window.setTimeout)(fn, 0);\n  };\n\n  DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n    return extend({}, {\n      type: 'GET',\n      dataType: this.dataSource.dataType,\n      crossDomain: this.dataSource.crossDomain,\n      jsonp: this.dataSource.jsonp,\n      cache: true,\n      processData: false,\n      onSuccess: fnSuccess,\n      onFailure: fnFail\n    }, url);\n  }; // tslint:disable-next-line:max-func-body-length\n\n\n  DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n    var _this = this;\n\n    var isSelector = !!query.subQuerySelector;\n\n    var fnFail = function (e) {\n      args.error = e;\n      deffered.reject(args);\n    };\n\n    var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n      args.xhr = xhr;\n      args.count = count ? parseInt(count.toString(), 10) : 0;\n      args.result = data;\n      args.request = request;\n      args.aggregates = aggregates;\n      args.actual = actual;\n      args.virtualSelectRecords = virtualSelectRecords;\n      deffered.resolve(args);\n    };\n\n    var fnQueryChild = function (data, selector) {\n      var subDeffer = new Deferred();\n      var childArgs = {\n        parent: args\n      };\n      query.subQuery.isChild = true;\n\n      var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n\n      var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n\n      if (!isSelector) {\n        subDeffer.then(function (subData) {\n          if (data) {\n            DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n            process(data, subData.count, subData.xhr);\n          }\n        }, fnFail);\n      }\n\n      return childReq;\n    };\n\n    var fnSuccess = function (data, request) {\n      if (_this.isGraphQLAdaptor(_this.adaptor)) {\n        if (!isNullOrUndefined(data['errors'])) {\n          return fnFail(data['errors'], request);\n        }\n      }\n\n      if (_this.isCustomDataAdaptor(_this.adaptor)) {\n        request = extend({}, _this.ajaxReqOption, request);\n      }\n\n      if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n        data = DataUtil.parse.parseJson(data);\n      }\n\n      var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n\n      var count = 0;\n      var aggregates = null;\n      var virtualSelectRecords = 'virtualSelectRecords';\n      var virtualRecords = data[virtualSelectRecords];\n\n      if (query.isCountRequired) {\n        count = result.count;\n        aggregates = result.aggregates;\n        result = result.result;\n      }\n\n      if (!query.subQuery) {\n        process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n        return;\n      }\n\n      if (!isSelector) {\n        fnQueryChild(result, request);\n      }\n    };\n\n    var req = this.extendRequest(url, fnSuccess, fnFail);\n\n    if (!this.isCustomDataAdaptor(this.adaptor)) {\n      var ajax_1 = new Ajax(req);\n\n      ajax_1.beforeSend = function () {\n        _this.beforeSend(ajax_1.httpRequest, ajax_1);\n      };\n\n      req = ajax_1.send();\n      req.catch(function (e) {\n        return true;\n      }); // to handle failure remote requests.        \n\n      this.requests.push(ajax_1);\n    } else {\n      this.ajaxReqOption = req;\n      var request = req;\n      this.adaptor.options.getData({\n        data: request.data,\n        onSuccess: request.onSuccess,\n        onFailure: request.onFailure\n      });\n    }\n\n    if (isSelector) {\n      var promise = void 0;\n      var res = query.subQuerySelector.call(this, {\n        query: query.subQuery,\n        parent: query\n      });\n\n      if (res && res.length) {\n        promise = Promise.all([req, fnQueryChild(null, res)]);\n        promise.then(function () {\n          var args = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n\n          var result = args[0];\n\n          var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n\n          var count = 0;\n\n          if (query.isCountRequired) {\n            count = pResult.count;\n            pResult = pResult.result;\n          }\n\n          var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n\n          count = 0;\n\n          if (query.subQuery.isCountRequired) {\n            count = cResult.count;\n            cResult = cResult.result;\n          }\n\n          DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n          isSelector = false;\n          process(pResult, count, _this.requests[0].httpRequest);\n        });\n      } else {\n        isSelector = false;\n      }\n    }\n\n    return req;\n  };\n\n  DataManager.prototype.beforeSend = function (request, settings) {\n    this.adaptor.beforeSend(this, request, settings);\n    var headers = this.dataSource.headers;\n    var props;\n\n    for (var i = 0; headers && i < headers.length; i++) {\n      props = [];\n      var keys = Object.keys(headers[i]);\n\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var prop = keys_1[_i];\n        props.push(prop);\n        request.setRequestHeader(prop, headers[i][prop]);\n      }\n    }\n  };\n  /**\n   * Save bulk changes to the given table name.\n   * User can add a new record, edit an existing record, and delete a record at the same time.\n   * If the datasource from remote, then updated in a single post.\n   * @param  {Object} changes - Defines the CrudOptions.\n   * @param  {string} key - Defines the column field.\n   * @param  {string|Query} tableName - Defines the table name.\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n\n\n  DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n    var _this = this;\n\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n\n    var args = {\n      url: tableName,\n      key: key || this.dataSource.key\n    };\n    var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n    var doAjaxRequest = 'doAjaxRequest';\n\n    if (this.dataSource.offline) {\n      return req;\n    }\n\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](req);\n    } else if (!this.isCustomDataAdaptor(this.adaptor)) {\n      var deff_1 = new Deferred();\n      var ajax_2 = new Ajax(req);\n\n      ajax_2.beforeSend = function () {\n        _this.beforeSend(ajax_2.httpRequest, ajax_2);\n      };\n\n      ajax_2.onSuccess = function (data, request) {\n        if (_this.isGraphQLAdaptor(_this.adaptor)) {\n          if (!isNullOrUndefined(data['errors'])) {\n            ajax_2.onFailure(JSON.stringify(data['errors']));\n          }\n        }\n\n        deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes, args));\n      };\n\n      ajax_2.onFailure = function (e) {\n        deff_1.reject([{\n          error: e\n        }]);\n      };\n\n      ajax_2.send().catch(function (e) {\n        return true;\n      }); // to handle the failure requests.        \n\n      return deff_1.promise;\n    } else {\n      return this.doAjaxRequest(req, this.adaptor.options.batchUpdate);\n    }\n  };\n  /**\n   * Inserts new record in the given table.\n   * @param  {Object} data - Defines the data to insert.\n   * @param  {string|Query} tableName - Defines the table name.\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n\n\n  DataManager.prototype.insert = function (data, tableName, query, position) {\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n\n    var req = this.adaptor.insert(this, data, tableName, query, position);\n    var doAjaxRequest = 'doAjaxRequest';\n\n    if (this.dataSource.offline) {\n      return req;\n    }\n\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](req);\n    } else {\n      return this.doAjaxRequest(req, this.adaptor.options.addRecord);\n    }\n  };\n  /**\n   * Removes data from the table with the given key.\n   * @param  {string} keyField - Defines the column field.\n   * @param  {Object} value - Defines the value to find the data in the specified column.\n   * @param  {string|Query} tableName - Defines the table name\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n\n\n  DataManager.prototype.remove = function (keyField, value, tableName, query) {\n    if (typeof value === 'object') {\n      value = DataUtil.getObject(keyField, value);\n    }\n\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n\n    var res = this.adaptor.remove(this, keyField, value, tableName, query);\n    var doAjaxRequest = 'doAjaxRequest';\n\n    if (this.dataSource.offline) {\n      return res;\n    }\n\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](res);\n    } else {\n      var remove = this.adaptor.options.deleteRecord;\n      return this.doAjaxRequest(res, remove);\n    }\n  };\n  /**\n   * Updates existing record in the given table.\n   * @param  {string} keyField - Defines the column field.\n   * @param  {Object} value - Defines the value to find the data in the specified column.\n   * @param  {string|Query} tableName - Defines the table name\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n\n\n  DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n\n    var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n    var doAjaxRequest = 'doAjaxRequest';\n\n    if (this.dataSource.offline) {\n      return res;\n    }\n\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](res);\n    } else {\n      var update = this.adaptor.options.updateRecord;\n      return this.doAjaxRequest(res, update);\n    }\n  };\n\n  DataManager.prototype.isCustomDataAdaptor = function (dataSource) {\n    return this.adaptor.getModuleName && this.adaptor.getModuleName() === 'CustomDataAdaptor';\n  };\n\n  DataManager.prototype.isGraphQLAdaptor = function (dataSource) {\n    return this.adaptor.getModuleName && this.adaptor.getModuleName() === 'GraphQLAdaptor';\n  };\n\n  DataManager.prototype.successFunc = function (record, request) {\n    if (this.isGraphQLAdaptor(this.adaptor)) {\n      var data = JSON.parse(record);\n\n      if (!isNullOrUndefined(data['errors'])) {\n        this.failureFunc(JSON.stringify(data['errors']));\n      }\n    }\n\n    if (this.isCustomDataAdaptor(this.adaptor)) {\n      request = extend({}, this.ajaxReqOption, request);\n    }\n\n    try {\n      DataUtil.parse.parseJson(record);\n    } catch (e) {\n      record = [];\n    }\n\n    record = this.adaptor.processResponse(DataUtil.parse.parseJson(record), this, null, request.httpRequest, request);\n    this.ajaxDeffered.resolve(record);\n  };\n\n  ;\n\n  DataManager.prototype.failureFunc = function (e) {\n    this.ajaxDeffered.reject([{\n      error: e\n    }]);\n  };\n\n  ;\n\n  DataManager.prototype.doAjaxRequest = function (res, ajaxFunc) {\n    var _this = this;\n\n    res = extend({}, {\n      type: 'POST',\n      contentType: 'application/json; charset=utf-8',\n      processData: false\n    }, res);\n    this.ajaxDeffered = new Deferred();\n\n    if (!this.isCustomDataAdaptor(this.adaptor)) {\n      var ajax_3 = new Ajax(res);\n\n      ajax_3.beforeSend = function () {\n        _this.beforeSend(ajax_3.httpRequest, ajax_3);\n      };\n\n      ajax_3.onSuccess = this.successFunc.bind(this);\n      ajax_3.onFailure = this.failureFunc.bind(this);\n      ajax_3.send().catch(function (e) {\n        return true;\n      }); // to handle the failure requests.\n    } else {\n      this.ajaxReqOption = res;\n      ajaxFunc.call(this, {\n        data: res.data,\n        onSuccess: this.successFunc.bind(this),\n        onFailure: this.failureFunc.bind(this)\n      });\n    }\n\n    return this.ajaxDeffered.promise;\n  };\n\n  return DataManager;\n}();\n\nexport { DataManager };\n/**\n * Deferred is used to handle asynchronous operation.\n */\n\nvar Deferred =\n/** @class */\nfunction () {\n  function Deferred() {\n    var _this = this;\n    /**\n     * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n     */\n\n\n    this.promise = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n    /**\n     * Defines the callback function triggers when the Deferred object is resolved.\n     */\n\n    this.then = this.promise.then.bind(this.promise);\n    /**\n     * Defines the callback function triggers when the Deferred object is rejected.\n     */\n\n    this.catch = this.promise.catch.bind(this.promise);\n  }\n\n  return Deferred;\n}();\n\nexport { Deferred };","map":{"version":3,"names":["Ajax","extend","isNullOrUndefined","DataUtil","Query","ODataAdaptor","JsonAdaptor","CacheAdaptor","RemoteSaveAdaptor","CustomDataAdaptor","DataManager","dataSource","query","adaptor","_this","dateParse","timeZoneHandling","requests","data","Array","json","offline","url","insertUrl","removeUrl","updateUrl","crudUrl","batchUrl","headers","accept","timeTillExpiration","cachingPageSize","enableCaching","requestType","key","crossDomain","jsonp","dataType","undefined","requiresFormat","throwError","isCors","defaultQuery","length","isDataAvailable","ready","executeQuery","then","e","result","prototype","setDefaultQuery","executeLocal","processQuery","subQuery","from","fromTable","lookup","lookups","res","isCountRequired","buildHierarchy","fKey","j","processResponse","using","slice","done","fail","always","makeRequest","deffered","Deferred","args","isCustomDataAdaptor","getDeferedArgs","resolve","nextTick","promise","count","aggregates","fn","window","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","type","cache","processData","onSuccess","onFailure","isSelector","subQuerySelector","error","reject","process","xhr","request","actual","virtualSelectRecords","parseInt","toString","fnQueryChild","selector","subDeffer","childArgs","parent","isChild","subUrl","childReq","subData","isGraphQLAdaptor","ajaxReqOption","httpRequest","getResponseHeader","indexOf","parse","parseJson","virtualRecords","req","ajax_1","beforeSend","send","catch","push","options","getData","call","Promise","all","_i","arguments","pResult","cResult","settings","props","i","keys","Object","keys_1","prop","setRequestHeader","saveChanges","changes","tableName","original","batchRequest","doAjaxRequest","deff_1","ajax_2","JSON","stringify","batchUpdate","insert","position","addRecord","remove","keyField","value","getObject","deleteRecord","update","updateRecord","getModuleName","successFunc","record","failureFunc","ajaxDeffered","ajaxFunc","contentType","ajax_3","bind"],"sources":["C:/Users/leezh/Documents/Coding/Orbital Test/Orbital-Duty-Planner/node_modules/@syncfusion/ej2-data/src/manager.js"],"sourcesContent":["import { Ajax } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query } from './query';\nimport { ODataAdaptor, JsonAdaptor, CacheAdaptor, RemoteSaveAdaptor, CustomDataAdaptor } from './adaptors';\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @class */ (function () {\n    /**\n     * Constructor for DataManager class\n     * @param  {DataOptions|JSON[]} dataSource?\n     * @param  {Query} query?\n     * @param  {AdaptorOptions|string} adaptor?\n     * @hidden\n     */\n    function DataManager(dataSource, query, adaptor) {\n        var _this = this;\n        /** @hidden */\n        this.dateParse = true;\n        /** @hidden */\n        this.timeZoneHandling = true;\n        this.requests = [];\n        if (!dataSource && !this.dataSource) {\n            dataSource = [];\n        }\n        adaptor = adaptor || dataSource.adaptor;\n        if (dataSource && dataSource.timeZoneHandling === false) {\n            this.timeZoneHandling = dataSource.timeZoneHandling;\n        }\n        var data;\n        if (dataSource instanceof Array) {\n            data = {\n                json: dataSource,\n                offline: true\n            };\n        }\n        else if (typeof dataSource === 'object') {\n            if (!dataSource.json) {\n                dataSource.json = [];\n            }\n            data = {\n                url: dataSource.url,\n                insertUrl: dataSource.insertUrl,\n                removeUrl: dataSource.removeUrl,\n                updateUrl: dataSource.updateUrl,\n                crudUrl: dataSource.crudUrl,\n                batchUrl: dataSource.batchUrl,\n                json: dataSource.json,\n                headers: dataSource.headers,\n                accept: dataSource.accept,\n                data: dataSource.data,\n                timeTillExpiration: dataSource.timeTillExpiration,\n                cachingPageSize: dataSource.cachingPageSize,\n                enableCaching: dataSource.enableCaching,\n                requestType: dataSource.requestType,\n                key: dataSource.key,\n                crossDomain: dataSource.crossDomain,\n                jsonp: dataSource.jsonp,\n                dataType: dataSource.dataType,\n                offline: dataSource.offline !== undefined ? dataSource.offline\n                    : dataSource.adaptor instanceof RemoteSaveAdaptor || dataSource.adaptor instanceof CustomDataAdaptor ?\n                        false : dataSource.url ? false : true,\n                requiresFormat: dataSource.requiresFormat\n            };\n        }\n        else {\n            DataUtil.throwError('DataManager: Invalid arguments');\n        }\n        if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n            data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n        }\n        if (data.dataType === undefined) {\n            data.dataType = 'json';\n        }\n        this.dataSource = data;\n        this.defaultQuery = query;\n        if (data.url && data.offline && !data.json.length) {\n            this.isDataAvailable = false;\n            this.adaptor = adaptor || new ODataAdaptor();\n            this.dataSource.offline = false;\n            this.ready = this.executeQuery(query || new Query());\n            this.ready.then(function (e) {\n                _this.dataSource.offline = true;\n                _this.isDataAvailable = true;\n                data.json = e.result;\n                _this.adaptor = new JsonAdaptor();\n            });\n        }\n        else {\n            this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n        }\n        if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n            data.jsonp = 'callback';\n        }\n        this.adaptor = adaptor || this.adaptor;\n        if (data.enableCaching) {\n            this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n        }\n        return this;\n    }\n    /**\n     * Overrides DataManager's default query with given query.\n     * @param  {Query} query - Defines the new default query.\n     */\n    DataManager.prototype.setDefaultQuery = function (query) {\n        this.defaultQuery = query;\n        return this;\n    };\n    /**\n     * Executes the given query with local data source.\n     * @param  {Query} query - Defines the query to retrieve data.\n     */\n    DataManager.prototype.executeLocal = function (query) {\n        if (!this.defaultQuery && !(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n        }\n        if (!this.dataSource.json) {\n            DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n        }\n        query = query || this.defaultQuery;\n        var result = this.adaptor.processQuery(this, query);\n        if (query.subQuery) {\n            var from = query.subQuery.fromTable;\n            var lookup = query.subQuery.lookups;\n            var res = query.isCountRequired ? result.result :\n                result;\n            if (lookup && lookup instanceof Array) {\n                DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n            }\n            for (var j = 0; j < res.length; j++) {\n                if (res[j][from] instanceof Array) {\n                    res[j] = extend({}, {}, res[j]);\n                    res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n                }\n            }\n        }\n        return this.adaptor.processResponse(result, this, query);\n    };\n    /**\n     * Executes the given query with either local or remote data source.\n     * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n     * @param  {Query|Function} query - Defines the query to retrieve data.\n     * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n     * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n     * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n     */\n    DataManager.prototype.executeQuery = function (query, done, fail, always) {\n        var _this = this;\n        var makeRequest = 'makeRequest';\n        if (typeof query === 'function') {\n            always = fail;\n            fail = done;\n            done = query;\n            query = null;\n        }\n        if (!query) {\n            query = this.defaultQuery;\n        }\n        if (!(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n        }\n        var deffered = new Deferred();\n        var args = { query: query };\n        if (!this.dataSource.offline && (this.dataSource.url !== undefined && this.dataSource.url !== '')\n            || (!isNullOrUndefined(this.adaptor[makeRequest])) || this.isCustomDataAdaptor(this.adaptor)) {\n            var result = this.adaptor.processQuery(this, query);\n            if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n                this.adaptor[makeRequest](result, deffered, args, query);\n            }\n            else if (!isNullOrUndefined(result.url) || this.isCustomDataAdaptor(this.adaptor)) {\n                this.makeRequest(result, deffered, args, query);\n            }\n            else {\n                args = DataManager.getDeferedArgs(query, result, args);\n                deffered.resolve(args);\n            }\n        }\n        else {\n            DataManager.nextTick(function () {\n                var res = _this.executeLocal(query);\n                args = DataManager.getDeferedArgs(query, res, args);\n                deffered.resolve(args);\n            });\n        }\n        if (done || fail) {\n            deffered.promise.then(done, fail);\n        }\n        if (always) {\n            deffered.promise.then(always, always);\n        }\n        return deffered.promise;\n    };\n    DataManager.getDeferedArgs = function (query, result, args) {\n        if (query.isCountRequired) {\n            args.result = result.result;\n            args.count = result.count;\n            args.aggregates = result.aggregates;\n        }\n        else {\n            args.result = result;\n        }\n        return args;\n    };\n    DataManager.nextTick = function (fn) {\n        (window.setImmediate || window.setTimeout)(fn, 0);\n    };\n    DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n        return extend({}, {\n            type: 'GET',\n            dataType: this.dataSource.dataType,\n            crossDomain: this.dataSource.crossDomain,\n            jsonp: this.dataSource.jsonp,\n            cache: true,\n            processData: false,\n            onSuccess: fnSuccess,\n            onFailure: fnFail\n        }, url);\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n        var _this = this;\n        var isSelector = !!query.subQuerySelector;\n        var fnFail = function (e) {\n            args.error = e;\n            deffered.reject(args);\n        };\n        var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n            args.xhr = xhr;\n            args.count = count ? parseInt(count.toString(), 10) : 0;\n            args.result = data;\n            args.request = request;\n            args.aggregates = aggregates;\n            args.actual = actual;\n            args.virtualSelectRecords = virtualSelectRecords;\n            deffered.resolve(args);\n        };\n        var fnQueryChild = function (data, selector) {\n            var subDeffer = new Deferred();\n            var childArgs = { parent: args };\n            query.subQuery.isChild = true;\n            var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n            var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n            if (!isSelector) {\n                subDeffer.then(function (subData) {\n                    if (data) {\n                        DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n                        process(data, subData.count, subData.xhr);\n                    }\n                }, fnFail);\n            }\n            return childReq;\n        };\n        var fnSuccess = function (data, request) {\n            if (_this.isGraphQLAdaptor(_this.adaptor)) {\n                if (!isNullOrUndefined(data['errors'])) {\n                    return fnFail(data['errors'], request);\n                }\n            }\n            if (_this.isCustomDataAdaptor(_this.adaptor)) {\n                request = extend({}, _this.ajaxReqOption, request);\n            }\n            if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n                data = DataUtil.parse.parseJson(data);\n            }\n            var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n            var count = 0;\n            var aggregates = null;\n            var virtualSelectRecords = 'virtualSelectRecords';\n            var virtualRecords = data[virtualSelectRecords];\n            if (query.isCountRequired) {\n                count = result.count;\n                aggregates = result.aggregates;\n                result = result.result;\n            }\n            if (!query.subQuery) {\n                process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n                return;\n            }\n            if (!isSelector) {\n                fnQueryChild(result, request);\n            }\n        };\n        var req = this.extendRequest(url, fnSuccess, fnFail);\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var ajax_1 = new Ajax(req);\n            ajax_1.beforeSend = function () {\n                _this.beforeSend(ajax_1.httpRequest, ajax_1);\n            };\n            req = ajax_1.send();\n            req.catch(function (e) { return true; }); // to handle failure remote requests.        \n            this.requests.push(ajax_1);\n        }\n        else {\n            this.ajaxReqOption = req;\n            var request = req;\n            this.adaptor.options.getData({\n                data: request.data,\n                onSuccess: request.onSuccess, onFailure: request.onFailure\n            });\n        }\n        if (isSelector) {\n            var promise = void 0;\n            var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n            if (res && res.length) {\n                promise = Promise.all([req, fnQueryChild(null, res)]);\n                promise.then(function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var result = args[0];\n                    var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n                    var count = 0;\n                    if (query.isCountRequired) {\n                        count = pResult.count;\n                        pResult = pResult.result;\n                    }\n                    var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n                    count = 0;\n                    if (query.subQuery.isCountRequired) {\n                        count = cResult.count;\n                        cResult = cResult.result;\n                    }\n                    DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n                    isSelector = false;\n                    process(pResult, count, _this.requests[0].httpRequest);\n                });\n            }\n            else {\n                isSelector = false;\n            }\n        }\n        return req;\n    };\n    DataManager.prototype.beforeSend = function (request, settings) {\n        this.adaptor.beforeSend(this, request, settings);\n        var headers = this.dataSource.headers;\n        var props;\n        for (var i = 0; headers && i < headers.length; i++) {\n            props = [];\n            var keys = Object.keys(headers[i]);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                props.push(prop);\n                request.setRequestHeader(prop, headers[i][prop]);\n            }\n        }\n    };\n    /**\n     * Save bulk changes to the given table name.\n     * User can add a new record, edit an existing record, and delete a record at the same time.\n     * If the datasource from remote, then updated in a single post.\n     * @param  {Object} changes - Defines the CrudOptions.\n     * @param  {string} key - Defines the column field.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n        var _this = this;\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var args = {\n            url: tableName,\n            key: key || this.dataSource.key\n        };\n        var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var deff_1 = new Deferred();\n            var ajax_2 = new Ajax(req);\n            ajax_2.beforeSend = function () {\n                _this.beforeSend(ajax_2.httpRequest, ajax_2);\n            };\n            ajax_2.onSuccess = function (data, request) {\n                if (_this.isGraphQLAdaptor(_this.adaptor)) {\n                    if (!isNullOrUndefined(data['errors'])) {\n                        ajax_2.onFailure(JSON.stringify(data['errors']));\n                    }\n                }\n                deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes, args));\n            };\n            ajax_2.onFailure = function (e) {\n                deff_1.reject([{ error: e }]);\n            };\n            ajax_2.send().catch(function (e) { return true; }); // to handle the failure requests.        \n            return deff_1.promise;\n        }\n        else {\n            return this.doAjaxRequest(req, this.adaptor.options.batchUpdate);\n        }\n    };\n    /**\n     * Inserts new record in the given table.\n     * @param  {Object} data - Defines the data to insert.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.insert = function (data, tableName, query, position) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var req = this.adaptor.insert(this, data, tableName, query, position);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else {\n            return this.doAjaxRequest(req, this.adaptor.options.addRecord);\n        }\n    };\n    /**\n     * Removes data from the table with the given key.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.remove = function (keyField, value, tableName, query) {\n        if (typeof value === 'object') {\n            value = DataUtil.getObject(keyField, value);\n        }\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.remove(this, keyField, value, tableName, query);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            var remove = this.adaptor.options.deleteRecord;\n            return this.doAjaxRequest(res, remove);\n        }\n    };\n    /**\n     * Updates existing record in the given table.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            var update = this.adaptor.options.updateRecord;\n            return this.doAjaxRequest(res, update);\n        }\n    };\n    DataManager.prototype.isCustomDataAdaptor = function (dataSource) {\n        return this.adaptor.getModuleName &&\n            this.adaptor.getModuleName() === 'CustomDataAdaptor';\n    };\n    DataManager.prototype.isGraphQLAdaptor = function (dataSource) {\n        return this.adaptor.getModuleName &&\n            this.adaptor.getModuleName() === 'GraphQLAdaptor';\n    };\n    DataManager.prototype.successFunc = function (record, request) {\n        if (this.isGraphQLAdaptor(this.adaptor)) {\n            var data = JSON.parse(record);\n            if (!isNullOrUndefined(data['errors'])) {\n                this.failureFunc(JSON.stringify(data['errors']));\n            }\n        }\n        if (this.isCustomDataAdaptor(this.adaptor)) {\n            request = extend({}, this.ajaxReqOption, request);\n        }\n        try {\n            DataUtil.parse.parseJson(record);\n        }\n        catch (e) {\n            record = [];\n        }\n        record = this.adaptor.processResponse(DataUtil.parse.parseJson(record), this, null, request.httpRequest, request);\n        this.ajaxDeffered.resolve(record);\n    };\n    ;\n    DataManager.prototype.failureFunc = function (e) {\n        this.ajaxDeffered.reject([{ error: e }]);\n    };\n    ;\n    DataManager.prototype.doAjaxRequest = function (res, ajaxFunc) {\n        var _this = this;\n        res = extend({}, {\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            processData: false\n        }, res);\n        this.ajaxDeffered = new Deferred();\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var ajax_3 = new Ajax(res);\n            ajax_3.beforeSend = function () {\n                _this.beforeSend(ajax_3.httpRequest, ajax_3);\n            };\n            ajax_3.onSuccess = this.successFunc.bind(this);\n            ajax_3.onFailure = this.failureFunc.bind(this);\n            ajax_3.send().catch(function (e) { return true; }); // to handle the failure requests.\n        }\n        else {\n            this.ajaxReqOption = res;\n            ajaxFunc.call(this, {\n                data: res.data, onSuccess: this.successFunc.bind(this),\n                onFailure: this.failureFunc.bind(this)\n            });\n        }\n        return this.ajaxDeffered.promise;\n    };\n    return DataManager;\n}());\nexport { DataManager };\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        /**\n         * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n         */\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        /**\n         * Defines the callback function triggers when the Deferred object is resolved.\n         */\n        this.then = this.promise.then.bind(this.promise);\n        /**\n         * Defines the callback function triggers when the Deferred object is rejected.\n         */\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n    return Deferred;\n}());\nexport { Deferred };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}