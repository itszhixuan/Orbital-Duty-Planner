{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keydownBehavior = void 0;\n\nvar _utils = require(\"../../utils\");\n\nvar _shared = require(\"../shared\");\n/**\r\n * This file should contain behavior for arrow keys as described here:\r\n * https://w3c.github.io/uievents-code/#key-controlpad-section\r\n */\n\n\nconst keydownBehavior = [{\n  matches: (keyDef, element) => (keyDef.key === 'Home' || keyDef.key === 'End') && ((0, _utils.isElementType)(element, ['input', 'textarea']) || (0, _utils.isContentEditable)(element)),\n  handle: (keyDef, element) => {\n    // This could probably been improved by collapsing a selection range\n    if (keyDef.key === 'Home') {\n      (0, _utils.setSelectionRange)(element, 0, 0);\n    } else {\n      var _getValue$length, _getValue;\n\n      const newPos = (_getValue$length = (_getValue = (0, _utils.getValue)(element)) == null ? void 0 : _getValue.length) != null ? _getValue$length :\n      /* istanbul ignore next */\n      0;\n      (0, _utils.setSelectionRange)(element, newPos, newPos);\n    }\n  }\n}, {\n  matches: (keyDef, element) => (keyDef.key === 'PageUp' || keyDef.key === 'PageDown') && (0, _utils.isElementType)(element, ['input']),\n  handle: (keyDef, element) => {\n    // This could probably been improved by collapsing a selection range\n    if (keyDef.key === 'PageUp') {\n      (0, _utils.setSelectionRange)(element, 0, 0);\n    } else {\n      var _getValue$length2, _getValue2;\n\n      const newPos = (_getValue$length2 = (_getValue2 = (0, _utils.getValue)(element)) == null ? void 0 : _getValue2.length) != null ? _getValue$length2 :\n      /* istanbul ignore next */\n      0;\n      (0, _utils.setSelectionRange)(element, newPos, newPos);\n    }\n  }\n}, {\n  matches: (keyDef, element) => keyDef.key === 'Delete' && (0, _utils.isEditable)(element) && !(0, _utils.isCursorAtEnd)(element),\n  handle: (keDef, element, options, state) => {\n    const {\n      newValue,\n      newSelectionStart\n    } = (0, _utils.calculateNewValue)('', element, state.carryValue, undefined, 'forward');\n    (0, _shared.fireInputEvent)(element, {\n      newValue,\n      newSelectionStart,\n      eventOverrides: {\n        inputType: 'deleteContentForward'\n      }\n    });\n    (0, _shared.carryValue)(element, state, newValue);\n  }\n}];\nexports.keydownBehavior = keydownBehavior;","map":{"version":3,"names":["Object","defineProperty","exports","value","keydownBehavior","_utils","require","_shared","matches","keyDef","element","key","isElementType","isContentEditable","handle","setSelectionRange","_getValue$length","_getValue","newPos","getValue","length","_getValue$length2","_getValue2","isEditable","isCursorAtEnd","keDef","options","state","newValue","newSelectionStart","calculateNewValue","carryValue","undefined","fireInputEvent","eventOverrides","inputType"],"sources":["C:/Users/leezh/Documents/Coding/Orbital Test/Orbital-Duty-Planner/node_modules/@testing-library/user-event/dist/keyboard/plugins/control.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.keydownBehavior = void 0;\r\n\r\nvar _utils = require(\"../../utils\");\r\n\r\nvar _shared = require(\"../shared\");\r\n\r\n/**\r\n * This file should contain behavior for arrow keys as described here:\r\n * https://w3c.github.io/uievents-code/#key-controlpad-section\r\n */\r\nconst keydownBehavior = [{\r\n  matches: (keyDef, element) => (keyDef.key === 'Home' || keyDef.key === 'End') && ((0, _utils.isElementType)(element, ['input', 'textarea']) || (0, _utils.isContentEditable)(element)),\r\n  handle: (keyDef, element) => {\r\n    // This could probably been improved by collapsing a selection range\r\n    if (keyDef.key === 'Home') {\r\n      (0, _utils.setSelectionRange)(element, 0, 0);\r\n    } else {\r\n      var _getValue$length, _getValue;\r\n\r\n      const newPos = (_getValue$length = (_getValue = (0, _utils.getValue)(element)) == null ? void 0 : _getValue.length) != null ? _getValue$length :\r\n      /* istanbul ignore next */\r\n      0;\r\n      (0, _utils.setSelectionRange)(element, newPos, newPos);\r\n    }\r\n  }\r\n}, {\r\n  matches: (keyDef, element) => (keyDef.key === 'PageUp' || keyDef.key === 'PageDown') && (0, _utils.isElementType)(element, ['input']),\r\n  handle: (keyDef, element) => {\r\n    // This could probably been improved by collapsing a selection range\r\n    if (keyDef.key === 'PageUp') {\r\n      (0, _utils.setSelectionRange)(element, 0, 0);\r\n    } else {\r\n      var _getValue$length2, _getValue2;\r\n\r\n      const newPos = (_getValue$length2 = (_getValue2 = (0, _utils.getValue)(element)) == null ? void 0 : _getValue2.length) != null ? _getValue$length2 :\r\n      /* istanbul ignore next */\r\n      0;\r\n      (0, _utils.setSelectionRange)(element, newPos, newPos);\r\n    }\r\n  }\r\n}, {\r\n  matches: (keyDef, element) => keyDef.key === 'Delete' && (0, _utils.isEditable)(element) && !(0, _utils.isCursorAtEnd)(element),\r\n  handle: (keDef, element, options, state) => {\r\n    const {\r\n      newValue,\r\n      newSelectionStart\r\n    } = (0, _utils.calculateNewValue)('', element, state.carryValue, undefined, 'forward');\r\n    (0, _shared.fireInputEvent)(element, {\r\n      newValue,\r\n      newSelectionStart,\r\n      eventOverrides: {\r\n        inputType: 'deleteContentForward'\r\n      }\r\n    });\r\n    (0, _shared.carryValue)(element, state, newValue);\r\n  }\r\n}];\r\nexports.keydownBehavior = keydownBehavior;"],"mappings":"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"},"metadata":{},"sourceType":"script"}