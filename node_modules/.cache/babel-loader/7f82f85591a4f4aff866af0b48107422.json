{"ast":null,"code":"/**\n * Template Engine Bridge\n */\nimport { compile as render } from './template';\nimport { createElement } from './dom';\nimport { isNullOrUndefined, isBlazor } from './util';\nvar HAS_ROW = /^[\\n\\r.]+<tr|^<tr/;\nvar HAS_SVG = /^[\\n\\r.]+<svg|^<path|^<g/;\nexport var blazorTemplates = {};\n/**\n *\n * @returns {string} ?\n */\n\nexport function getRandomId() {\n  return '-' + Math.random().toString(36).substr(2, 5);\n}\n/**\n * Compile the template string into template function.\n *\n * @param {string} templateString - The template string which is going to convert.\n * @param {Object} helper - Helper functions as an object.\n * @param {boolean} ignorePrefix ?\n * @returns {NodeList} ?\n * @private\n */\n// eslint-disable-next-line\n\nexport function compile(templateString, helper, ignorePrefix) {\n  var compiler = engineObj.compile(templateString, helper, ignorePrefix); // eslint-disable-next-line\n\n  return function (data, component, propName, templateId, isStringTemplate, index, element, root) {\n    var result = compiler(data, component, propName, element, root);\n    var blazorTemplateId = 'BlazorTemplateId';\n\n    if (isBlazor() && !isStringTemplate) {\n      var randomId = getRandomId();\n      var blazorId = templateId + randomId;\n\n      if (!blazorTemplates[templateId]) {\n        blazorTemplates[templateId] = [];\n      }\n\n      if (!isNullOrUndefined(index)) {\n        var keys = Object.keys(blazorTemplates[templateId][index]);\n\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n          var key = keys_1[_i];\n\n          if (key !== blazorTemplateId && data[key]) {\n            blazorTemplates[templateId][index][key] = data[key];\n          }\n\n          if (key === blazorTemplateId) {\n            blazorId = blazorTemplates[templateId][index][key];\n          }\n        }\n      } else {\n        data[blazorTemplateId] = blazorId;\n        blazorTemplates[templateId].push(data);\n      } // eslint-disable-next-line\n\n\n      return propName === 'rowTemplate' ? [createElement('tr', {\n        id: blazorId,\n        className: 'e-blazor-template'\n      })] : // eslint-disable-next-line\n      [createElement('div', {\n        id: blazorId,\n        className: 'e-blazor-template'\n      })];\n    }\n\n    if (typeof result === 'string') {\n      if (HAS_SVG.test(result)) {\n        var ele = createElement('svg', {\n          innerHTML: result\n        });\n        return ele.childNodes;\n      } else {\n        var ele = createElement(HAS_ROW.test(result) ? 'table' : 'div', {\n          innerHTML: result\n        });\n        return ele.childNodes;\n      }\n    } else {\n      return result;\n    }\n  };\n}\n/**\n *\n * @param {string} templateId ?\n * @param {string} templateName ?\n * @param {string} comp ?\n * @param {boolean} isEmpty ?\n * @param {Function} callBack ?\n * @returns {void} ?\n */\n\nexport function updateBlazorTemplate(templateId, templateName, comp, isEmpty, callBack) {\n  if (isBlazor()) {\n    var ejsIntrop = 'sfBlazor';\n    window[ejsIntrop].updateTemplate(templateName, blazorTemplates[templateId], templateId, comp, callBack);\n\n    if (isEmpty !== false) {\n      blazorTemplates[templateId] = [];\n    }\n  }\n}\n/**\n *\n * @param {string} templateId ?\n * @param {string} templateName ?\n * @param {number} index ?\n * @returns {void} ?\n */\n\nexport function resetBlazorTemplate(templateId, templateName, index) {\n  var templateDiv = document.getElementById(templateId);\n\n  if (templateDiv) {\n    // eslint-disable-next-line\n    var innerTemplates = templateDiv.getElementsByClassName('blazor-inner-template');\n\n    for (var i = 0; i < innerTemplates.length; i++) {\n      var tempId = ' ';\n\n      if (!isNullOrUndefined(index)) {\n        tempId = innerTemplates[index].getAttribute('data-templateId');\n      } else {\n        tempId = innerTemplates[i].getAttribute('data-templateId');\n      }\n\n      var tempElement = document.getElementById(tempId);\n\n      if (tempElement) {\n        var length_1 = tempElement.childNodes.length;\n\n        for (var j = 0; j < length_1; j++) {\n          if (!isNullOrUndefined(index)) {\n            innerTemplates[index].appendChild(tempElement.childNodes[0]);\n            i = innerTemplates.length;\n          } else {\n            innerTemplates[i].appendChild(tempElement.childNodes[0]);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Set your custom template engine for template rendering.\n *\n * @param  {ITemplateEngine} classObj - Class object for custom template.\n * @returns {void} ?\n * @private\n */\n\nexport function setTemplateEngine(classObj) {\n  engineObj.compile = classObj.compile;\n}\n/**\n * Get current template engine for template rendering\n *\n * @returns {string} ?\n * @private\n */\n\nexport function getTemplateEngine() {\n  return engineObj.compile;\n} //Default Engine Class\n\nvar Engine =\n/** @class */\nfunction () {\n  function Engine() {} // eslint-disable-next-line\n\n\n  Engine.prototype.compile = function (templateString, helper, ignorePrefix) {\n    if (helper === void 0) {\n      helper = {};\n    }\n\n    return render(templateString, helper);\n  };\n\n  return Engine;\n}();\n\nvar engineObj = {\n  compile: new Engine().compile\n};","map":{"version":3,"names":["compile","render","createElement","isNullOrUndefined","isBlazor","HAS_ROW","HAS_SVG","blazorTemplates","getRandomId","Math","random","toString","substr","templateString","helper","ignorePrefix","compiler","engineObj","data","component","propName","templateId","isStringTemplate","index","element","root","result","blazorTemplateId","randomId","blazorId","keys","Object","_i","keys_1","length","key","push","id","className","test","ele","innerHTML","childNodes","updateBlazorTemplate","templateName","comp","isEmpty","callBack","ejsIntrop","window","updateTemplate","resetBlazorTemplate","templateDiv","document","getElementById","innerTemplates","getElementsByClassName","i","tempId","getAttribute","tempElement","length_1","j","appendChild","setTemplateEngine","classObj","getTemplateEngine","Engine","prototype"],"sources":["C:/Users/leezh/Documents/Coding/Orbital Test/Orbital-Duty-Planner/node_modules/@syncfusion/ej2-base/src/template-engine.js"],"sourcesContent":["/**\n * Template Engine Bridge\n */\nimport { compile as render } from './template';\nimport { createElement } from './dom';\nimport { isNullOrUndefined, isBlazor } from './util';\nvar HAS_ROW = /^[\\n\\r.]+<tr|^<tr/;\nvar HAS_SVG = /^[\\n\\r.]+<svg|^<path|^<g/;\nexport var blazorTemplates = {};\n/**\n *\n * @returns {string} ?\n */\nexport function getRandomId() {\n    return '-' + Math.random().toString(36).substr(2, 5);\n}\n/**\n * Compile the template string into template function.\n *\n * @param {string} templateString - The template string which is going to convert.\n * @param {Object} helper - Helper functions as an object.\n * @param {boolean} ignorePrefix ?\n * @returns {NodeList} ?\n * @private\n */\n// eslint-disable-next-line\nexport function compile(templateString, helper, ignorePrefix) {\n    var compiler = engineObj.compile(templateString, helper, ignorePrefix);\n    // eslint-disable-next-line\n    return function (data, component, propName, templateId, isStringTemplate, index, element, root) {\n        var result = compiler(data, component, propName, element, root);\n        var blazorTemplateId = 'BlazorTemplateId';\n        if (isBlazor() && !isStringTemplate) {\n            var randomId = getRandomId();\n            var blazorId = templateId + randomId;\n            if (!blazorTemplates[templateId]) {\n                blazorTemplates[templateId] = [];\n            }\n            if (!isNullOrUndefined(index)) {\n                var keys = Object.keys(blazorTemplates[templateId][index]);\n                for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                    var key = keys_1[_i];\n                    if (key !== blazorTemplateId && data[key]) {\n                        blazorTemplates[templateId][index][key] = data[key];\n                    }\n                    if (key === blazorTemplateId) {\n                        blazorId = blazorTemplates[templateId][index][key];\n                    }\n                }\n            }\n            else {\n                data[blazorTemplateId] = blazorId;\n                blazorTemplates[templateId].push(data);\n            }\n            // eslint-disable-next-line\n            return propName === 'rowTemplate' ? [createElement('tr', { id: blazorId, className: 'e-blazor-template' })] :\n                // eslint-disable-next-line\n                [createElement('div', { id: blazorId, className: 'e-blazor-template' })];\n        }\n        if (typeof result === 'string') {\n            if (HAS_SVG.test(result)) {\n                var ele = createElement('svg', { innerHTML: result });\n                return ele.childNodes;\n            }\n            else {\n                var ele = createElement((HAS_ROW.test(result) ? 'table' : 'div'), { innerHTML: result });\n                return ele.childNodes;\n            }\n        }\n        else {\n            return result;\n        }\n    };\n}\n/**\n *\n * @param {string} templateId ?\n * @param {string} templateName ?\n * @param {string} comp ?\n * @param {boolean} isEmpty ?\n * @param {Function} callBack ?\n * @returns {void} ?\n */\nexport function updateBlazorTemplate(templateId, templateName, comp, isEmpty, callBack) {\n    if (isBlazor()) {\n        var ejsIntrop = 'sfBlazor';\n        window[ejsIntrop].updateTemplate(templateName, blazorTemplates[templateId], templateId, comp, callBack);\n        if (isEmpty !== false) {\n            blazorTemplates[templateId] = [];\n        }\n    }\n}\n/**\n *\n * @param {string} templateId ?\n * @param {string} templateName ?\n * @param {number} index ?\n * @returns {void} ?\n */\nexport function resetBlazorTemplate(templateId, templateName, index) {\n    var templateDiv = document.getElementById(templateId);\n    if (templateDiv) {\n        // eslint-disable-next-line\n        var innerTemplates = templateDiv.getElementsByClassName('blazor-inner-template');\n        for (var i = 0; i < innerTemplates.length; i++) {\n            var tempId = ' ';\n            if (!isNullOrUndefined(index)) {\n                tempId = innerTemplates[index].getAttribute('data-templateId');\n            }\n            else {\n                tempId = innerTemplates[i].getAttribute('data-templateId');\n            }\n            var tempElement = document.getElementById(tempId);\n            if (tempElement) {\n                var length_1 = tempElement.childNodes.length;\n                for (var j = 0; j < length_1; j++) {\n                    if (!isNullOrUndefined(index)) {\n                        innerTemplates[index].appendChild(tempElement.childNodes[0]);\n                        i = innerTemplates.length;\n                    }\n                    else {\n                        innerTemplates[i].appendChild(tempElement.childNodes[0]);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * Set your custom template engine for template rendering.\n *\n * @param  {ITemplateEngine} classObj - Class object for custom template.\n * @returns {void} ?\n * @private\n */\nexport function setTemplateEngine(classObj) {\n    engineObj.compile = classObj.compile;\n}\n/**\n * Get current template engine for template rendering\n *\n * @returns {string} ?\n * @private\n */\nexport function getTemplateEngine() {\n    return engineObj.compile;\n}\n//Default Engine Class\nvar Engine = /** @class */ (function () {\n    function Engine() {\n    }\n    // eslint-disable-next-line\n    Engine.prototype.compile = function (templateString, helper, ignorePrefix) {\n        if (helper === void 0) { helper = {}; }\n        return render(templateString, helper);\n    };\n    return Engine;\n}());\nvar engineObj = { compile: new Engine().compile };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}