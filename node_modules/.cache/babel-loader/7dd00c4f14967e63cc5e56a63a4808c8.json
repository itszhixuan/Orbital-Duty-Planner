{"ast":null,"code":"import { extend, isNullOrUndefined } from './util';\nimport { defaultCulture } from './internationalization';\n/**\n * L10n modules provides localized text for different culture.\n * ```typescript\n * import {setCulture} from '@syncfusion/ts-base-library';\n * //load global locale object common for all components.\n * L10n.load({\n *    'fr-BE': {\n *       'button': {\n *            'check': 'vérifié'\n *        }\n *    }\n * });\n * //set globale default locale culture.\n * setCulture('fr-BE');\n * let instance: L10n = new L10n('button', {\n *    check: 'checked'\n * });\n * //Get locale text for current property.\n * instance.getConstant('check');\n * //Change locale culture in a component.\n * instance.setLocale('en-US');\n * ```\n */\n\nvar L10n =\n/** @class */\nfunction () {\n  /**\n   * Constructor\n   *\n   * @param {string} controlName ?\n   * @param {Object} localeStrings ?\n   * @param {string} locale ?\n   */\n  function L10n(controlName, localeStrings, locale) {\n    this.controlName = controlName;\n    this.localeStrings = localeStrings;\n    this.setLocale(locale || defaultCulture);\n  }\n  /**\n   * Sets the locale text\n   *\n   * @param {string} locale ?\n   * @returns {void} ?\n   */\n\n\n  L10n.prototype.setLocale = function (locale) {\n    var intLocale = this.intGetControlConstant(L10n.locale, locale);\n    this.currentLocale = intLocale || this.localeStrings;\n  };\n  /**\n   * Sets the global locale for all components.\n   *\n   * @param {Object} localeObject - specifies the localeObject to be set as global locale.\n   * @returns {void} ?\n   */\n\n\n  L10n.load = function (localeObject) {\n    this.locale = extend(this.locale, localeObject, {}, true);\n  };\n  /**\n   * Returns current locale text for the property based on the culture name and control name.\n   *\n   * @param {string} prop - specifies the property for which localize text to be returned.\n   * @returns {string} ?\n   */\n\n\n  L10n.prototype.getConstant = function (prop) {\n    // Removed conditional operator because this method does not return correct value when passing 0 as value in localization\n    if (!isNullOrUndefined(this.currentLocale[prop])) {\n      return this.currentLocale[prop];\n    } else {\n      return this.localeStrings[prop] || '';\n    }\n  };\n  /**\n   * Returns the control constant object for current object and the locale specified.\n   *\n   * @param {Object} curObject ?\n   * @param {string} locale ?\n   * @returns {Object} ?\n   */\n\n\n  L10n.prototype.intGetControlConstant = function (curObject, locale) {\n    if (curObject[locale]) {\n      return curObject[locale][this.controlName];\n    }\n\n    return null;\n  };\n\n  L10n.locale = {};\n  return L10n;\n}();\n\nexport { L10n };","map":{"version":3,"names":["extend","isNullOrUndefined","defaultCulture","L10n","controlName","localeStrings","locale","setLocale","prototype","intLocale","intGetControlConstant","currentLocale","load","localeObject","getConstant","prop","curObject"],"sources":["C:/Users/leezh/Documents/Coding/Orbital Test/Orbital-Duty-Planner/node_modules/@syncfusion/ej2-base/src/l10n.js"],"sourcesContent":["import { extend, isNullOrUndefined } from './util';\nimport { defaultCulture } from './internationalization';\n/**\n * L10n modules provides localized text for different culture.\n * ```typescript\n * import {setCulture} from '@syncfusion/ts-base-library';\n * //load global locale object common for all components.\n * L10n.load({\n *    'fr-BE': {\n *       'button': {\n *            'check': 'vérifié'\n *        }\n *    }\n * });\n * //set globale default locale culture.\n * setCulture('fr-BE');\n * let instance: L10n = new L10n('button', {\n *    check: 'checked'\n * });\n * //Get locale text for current property.\n * instance.getConstant('check');\n * //Change locale culture in a component.\n * instance.setLocale('en-US');\n * ```\n */\nvar L10n = /** @class */ (function () {\n    /**\n     * Constructor\n     *\n     * @param {string} controlName ?\n     * @param {Object} localeStrings ?\n     * @param {string} locale ?\n     */\n    function L10n(controlName, localeStrings, locale) {\n        this.controlName = controlName;\n        this.localeStrings = localeStrings;\n        this.setLocale(locale || defaultCulture);\n    }\n    /**\n     * Sets the locale text\n     *\n     * @param {string} locale ?\n     * @returns {void} ?\n     */\n    L10n.prototype.setLocale = function (locale) {\n        var intLocale = this.intGetControlConstant(L10n.locale, locale);\n        this.currentLocale = intLocale || this.localeStrings;\n    };\n    /**\n     * Sets the global locale for all components.\n     *\n     * @param {Object} localeObject - specifies the localeObject to be set as global locale.\n     * @returns {void} ?\n     */\n    L10n.load = function (localeObject) {\n        this.locale = extend(this.locale, localeObject, {}, true);\n    };\n    /**\n     * Returns current locale text for the property based on the culture name and control name.\n     *\n     * @param {string} prop - specifies the property for which localize text to be returned.\n     * @returns {string} ?\n     */\n    L10n.prototype.getConstant = function (prop) {\n        // Removed conditional operator because this method does not return correct value when passing 0 as value in localization\n        if (!isNullOrUndefined(this.currentLocale[prop])) {\n            return this.currentLocale[prop];\n        }\n        else {\n            return this.localeStrings[prop] || '';\n        }\n    };\n    /**\n     * Returns the control constant object for current object and the locale specified.\n     *\n     * @param {Object} curObject ?\n     * @param {string} locale ?\n     * @returns {Object} ?\n     */\n    L10n.prototype.intGetControlConstant = function (curObject, locale) {\n        if ((curObject)[locale]) {\n            return (curObject)[locale][this.controlName];\n        }\n        return null;\n    };\n    L10n.locale = {};\n    return L10n;\n}());\nexport { L10n };\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,iBAAjB,QAA0C,QAA1C;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,IAAI;AAAG;AAAe,YAAY;EAClC;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,SAASA,IAAT,CAAcC,WAAd,EAA2BC,aAA3B,EAA0CC,MAA1C,EAAkD;IAC9C,KAAKF,WAAL,GAAmBA,WAAnB;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKE,SAAL,CAAeD,MAAM,IAAIJ,cAAzB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIC,IAAI,CAACK,SAAL,CAAeD,SAAf,GAA2B,UAAUD,MAAV,EAAkB;IACzC,IAAIG,SAAS,GAAG,KAAKC,qBAAL,CAA2BP,IAAI,CAACG,MAAhC,EAAwCA,MAAxC,CAAhB;IACA,KAAKK,aAAL,GAAqBF,SAAS,IAAI,KAAKJ,aAAvC;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;;;EACIF,IAAI,CAACS,IAAL,GAAY,UAAUC,YAAV,EAAwB;IAChC,KAAKP,MAAL,GAAcN,MAAM,CAAC,KAAKM,MAAN,EAAcO,YAAd,EAA4B,EAA5B,EAAgC,IAAhC,CAApB;EACH,CAFD;EAGA;AACJ;AACA;AACA;AACA;AACA;;;EACIV,IAAI,CAACK,SAAL,CAAeM,WAAf,GAA6B,UAAUC,IAAV,EAAgB;IACzC;IACA,IAAI,CAACd,iBAAiB,CAAC,KAAKU,aAAL,CAAmBI,IAAnB,CAAD,CAAtB,EAAkD;MAC9C,OAAO,KAAKJ,aAAL,CAAmBI,IAAnB,CAAP;IACH,CAFD,MAGK;MACD,OAAO,KAAKV,aAAL,CAAmBU,IAAnB,KAA4B,EAAnC;IACH;EACJ,CARD;EASA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIZ,IAAI,CAACK,SAAL,CAAeE,qBAAf,GAAuC,UAAUM,SAAV,EAAqBV,MAArB,EAA6B;IAChE,IAAKU,SAAD,CAAYV,MAAZ,CAAJ,EAAyB;MACrB,OAAQU,SAAD,CAAYV,MAAZ,EAAoB,KAAKF,WAAzB,CAAP;IACH;;IACD,OAAO,IAAP;EACH,CALD;;EAMAD,IAAI,CAACG,MAAL,GAAc,EAAd;EACA,OAAOH,IAAP;AACH,CA9DyB,EAA1B;;AA+DA,SAASA,IAAT"},"metadata":{},"sourceType":"module"}