{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\nvar consts = {\n  GroupGuid: '{271bbba0-1ee7}'\n};\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\n\nvar Adaptor =\n/** @class */\nfunction () {\n  /**\n   * Constructor for Adaptor class\n   * @param  {DataOptions} ds?\n   * @hidden\n   * @returns aggregates\n   */\n  function Adaptor(ds) {\n    // common options for all the adaptors \n    this.options = {\n      from: 'table',\n      requestType: 'json',\n      sortBy: 'sorted',\n      select: 'select',\n      skip: 'skip',\n      group: 'group',\n      take: 'take',\n      search: 'search',\n      count: 'requiresCounts',\n      where: 'where',\n      aggregates: 'aggregates',\n      expand: 'expand'\n    };\n    /**\n     * Specifies the type of adaptor.\n     * @default Adaptor\n     */\n\n    this.type = Adaptor;\n    this.dataSource = ds;\n    this.pvt = {};\n  }\n  /**\n   * Returns the data from the query processing.\n   * @param  {Object} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @returns Object\n   */\n\n\n  Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n    return data;\n  };\n\n  return Adaptor;\n}();\n\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\n\nvar JsonAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(JsonAdaptor, _super);\n\n  function JsonAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Process the JSON data based on the provided queries.\n   * @param  {DataManager} dataManager\n   * @param  {Query} query\n   * @returns Object\n   */\n\n\n  JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n    var result = dataManager.dataSource.json.slice(0);\n    var count = result.length;\n    var countFlg = true;\n    var ret;\n    var key;\n    var lazyLoad = {};\n    var keyCount = 0;\n    var group = [];\n    var page;\n\n    for (var i = 0; i < query.lazyLoad.length; i++) {\n      keyCount++;\n      lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n    }\n\n    var agg = {};\n\n    for (var i = 0; i < query.queries.length; i++) {\n      key = query.queries[i];\n\n      if ((key.fn === 'onPage' || key.fn === 'onGroup') && query.lazyLoad.length) {\n        if (key.fn === 'onGroup') {\n          group.push(key.e);\n        }\n\n        if (key.fn === 'onPage') {\n          page = key.e;\n        }\n\n        continue;\n      }\n\n      ret = this[key.fn].call(this, result, key.e, query);\n\n      if (key.fn === 'onAggregates') {\n        agg[key.e.field + ' - ' + key.e.type] = ret;\n      } else {\n        result = ret !== undefined ? ret : result;\n      }\n\n      if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n        countFlg = false;\n      }\n\n      if (countFlg) {\n        count = result.length;\n      }\n    }\n\n    if (keyCount) {\n      var args = {\n        query: query,\n        lazyLoad: lazyLoad,\n        result: result,\n        group: group,\n        page: page\n      };\n      var lazyLoadData = this.lazyLoadGroup(args);\n      result = lazyLoadData.result;\n      count = lazyLoadData.count;\n    }\n\n    if (query.isCountRequired) {\n      result = {\n        result: result,\n        count: count,\n        aggregates: agg\n      };\n    }\n\n    return result;\n  };\n  /**\n   * Perform lazy load grouping in JSON array based on the given query and lazy load details.\n   * @param  {LazyLoadGroupArgs} args\n   */\n\n\n  JsonAdaptor.prototype.lazyLoadGroup = function (args) {\n    var count = 0;\n    var agg = this.getAggregate(args.query);\n    var result = args.result;\n\n    if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\n      var req = args.lazyLoad.onDemandGroupInfo;\n\n      for (var i = req.where.length - 1; i >= 0; i--) {\n        result = this.onWhere(result, req.where[i]);\n      }\n\n      if (args.group.length !== req.level) {\n        var field = args.group[req.level].fieldName;\n        result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n      }\n\n      count = result.length;\n      var data = result;\n      result = result.slice(req.skip);\n      result = result.slice(0, req.take);\n\n      if (args.group.length !== req.level) {\n        this.formGroupResult(result, data);\n      }\n    } else {\n      var field = args.group[0].fieldName;\n      result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n      count = result.length;\n      var data = result;\n\n      if (args.page) {\n        result = this.onPage(result, args.page, args.query);\n      }\n\n      this.formGroupResult(result, data);\n    }\n\n    return {\n      result: result,\n      count: count\n    };\n  };\n\n  JsonAdaptor.prototype.formGroupResult = function (result, data) {\n    if (result.length && data.length) {\n      var uid = 'GroupGuid';\n      var childLevel = 'childLevels';\n      var level = 'level';\n      var records = 'records';\n      result[uid] = data[uid];\n      result[childLevel] = data[childLevel];\n      result[level] = data[level];\n      result[records] = data[records];\n    }\n\n    return result;\n  };\n  /**\n   * Separate the aggregate query from the given queries\n   * @param  {Query} query\n   */\n\n\n  JsonAdaptor.prototype.getAggregate = function (query) {\n    var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n    var agg = [];\n\n    if (aggQuery.length) {\n      var tmp = void 0;\n\n      for (var i = 0; i < aggQuery.length; i++) {\n        tmp = aggQuery[i].e;\n        agg.push({\n          type: tmp.type,\n          field: DataUtil.getValue(tmp.field, query)\n        });\n      }\n    }\n\n    return agg;\n  };\n  /**\n   * Performs batch update in the JSON array which add, remove and update records.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n\n\n  JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    var i;\n    var deletedRecordsLen = changes.deletedRecords.length;\n\n    for (i = 0; i < changes.addedRecords.length; i++) {\n      this.insert(dm, changes.addedRecords[i]);\n    }\n\n    for (i = 0; i < changes.changedRecords.length; i++) {\n      this.update(dm, e.key, changes.changedRecords[i]);\n    }\n\n    for (i = 0; i < deletedRecordsLen; i++) {\n      this.remove(dm, e.key, changes.deletedRecords[i]);\n    }\n\n    return changes;\n  };\n  /**\n   * Performs filter operation with the given data and where query.\n   * @param  {Object[]} ds\n   * @param  {{validate:Function}} e\n   */\n\n\n  JsonAdaptor.prototype.onWhere = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.filter(function (obj) {\n      if (e) {\n        return e.validate(obj);\n      }\n    });\n  };\n  /**\n   * Returns aggregate function based on the aggregate type.\n   * @param  {Object[]} ds\n   * @param  {{field:string} e\n   * @param  {string}} type\n   */\n\n\n  JsonAdaptor.prototype.onAggregates = function (ds, e) {\n    var fn = DataUtil.aggregates[e.type];\n\n    if (!ds || !fn || ds.length === 0) {\n      return null;\n    }\n\n    return fn(ds, e.field);\n  };\n  /**\n   * Performs search operation based on the given query.\n   * @param  {Object[]} ds\n   * @param  {QueryOptions} e\n   */\n\n\n  JsonAdaptor.prototype.onSearch = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    if (e.fieldNames.length === 0) {\n      DataUtil.getFieldList(ds[0], e.fieldNames);\n    }\n\n    return ds.filter(function (obj) {\n      for (var j = 0; j < e.fieldNames.length; j++) {\n        if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  };\n  /**\n   * Sort the data with given direction and field.\n   * @param  {Object[]} ds\n   * @param  {{comparer:(a:Object} e\n   * @param  {Object} b\n   */\n\n\n  JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    var fnCompare;\n    var field = DataUtil.getValue(e.fieldName, query);\n\n    if (!field) {\n      return ds.sort(e.comparer);\n    }\n\n    if (field instanceof Array) {\n      field = field.slice(0);\n\n      for (var i = field.length - 1; i >= 0; i--) {\n        if (!field[i]) {\n          continue;\n        }\n\n        fnCompare = e.comparer;\n\n        if (DataUtil.endsWith(field[i], ' desc')) {\n          fnCompare = DataUtil.fnSort('descending');\n          field[i] = field[i].replace(' desc', '');\n        }\n\n        ds = DataUtil.sort(ds, field[i], fnCompare);\n      }\n\n      return ds;\n    }\n\n    return DataUtil.sort(ds, field, e.comparer);\n  };\n  /**\n   * Group the data based on the given query.\n   * @param  {Object[]} ds\n   * @param  {QueryOptions} e\n   * @param  {Query} query\n   */\n\n\n  JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    var agg = this.getAggregate(query);\n    return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n  };\n  /**\n   * Retrieves records based on the given page index and size.\n   * @param  {Object[]} ds\n   * @param  {{pageSize:number} e\n   * @param  {number}} pageIndex\n   * @param  {Query} query\n   */\n\n\n  JsonAdaptor.prototype.onPage = function (ds, e, query) {\n    var size = DataUtil.getValue(e.pageSize, query);\n    var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n    var end = start + size;\n\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(start, end);\n  };\n  /**\n   * Retrieves records based on the given start and end index from query.\n   * @param  {Object[]} ds\n   * @param  {{start:number} e\n   * @param  {number}} end\n   */\n\n\n  JsonAdaptor.prototype.onRange = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n  };\n  /**\n   * Picks the given count of records from the top of the datasource.\n   * @param  {Object[]} ds\n   * @param  {{nos:number}} e\n   */\n\n\n  JsonAdaptor.prototype.onTake = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(0, DataUtil.getValue(e.nos));\n  };\n  /**\n   * Skips the given count of records from the data source.\n   * @param  {Object[]} ds\n   * @param  {{nos:number}} e\n   */\n\n\n  JsonAdaptor.prototype.onSkip = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(DataUtil.getValue(e.nos));\n  };\n  /**\n   * Selects specified columns from the data source.\n   * @param  {Object[]} ds\n   * @param  {{fieldNames:string}} e\n   */\n\n\n  JsonAdaptor.prototype.onSelect = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n  };\n  /**\n   * Inserts new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {number} position\n   */\n\n\n  JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n    if (isNullOrUndefined(position)) {\n      return dm.dataSource.json.push(data);\n    } else {\n      return dm.dataSource.json.splice(position, 0, data);\n    }\n  };\n  /**\n   * Remove the data from the dataSource based on the key field value.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   * @returns null\n   */\n\n\n  JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    var ds = dm.dataSource.json;\n    var i;\n\n    if (typeof value === 'object' && !(value instanceof Date)) {\n      value = DataUtil.getObject(keyField, value);\n    }\n\n    for (i = 0; i < ds.length; i++) {\n      if (DataUtil.getObject(keyField, ds[i]) === value) {\n        break;\n      }\n    }\n\n    return i !== ds.length ? ds.splice(i, 1) : null;\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   * @returns null\n   */\n\n\n  JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    var ds = dm.dataSource.json;\n    var i;\n    var key;\n\n    if (!isNullOrUndefined(keyField)) {\n      key = getValue(keyField, value);\n    }\n\n    for (i = 0; i < ds.length; i++) {\n      if (!isNullOrUndefined(keyField) && getValue(keyField, ds[i]) === key) {\n        break;\n      }\n    }\n\n    return i < ds.length ? merge(ds[i], value) : null;\n  };\n\n  return JsonAdaptor;\n}(Adaptor);\n\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\n\nvar UrlAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(UrlAdaptor, _super);\n\n  function UrlAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Process the query to generate request body.\n   * @param  {DataManager} dm\n   * @param  {Query} query\n   * @param  {Object[]} hierarchyFilters?\n   * @returns p\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var queries = this.getQueryRequest(query);\n    var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n    var params = query.params;\n    var url = dm.dataSource.url;\n    var temp;\n    var skip;\n    var take = null;\n    var options = this.options;\n    var request = {\n      sorts: [],\n      groups: [],\n      filters: [],\n      searches: [],\n      aggregates: []\n    }; // calc Paging & Range\n\n    if ('onPage' in singles) {\n      temp = singles.onPage;\n      skip = DataUtil.getValue(temp.pageIndex, query);\n      take = DataUtil.getValue(temp.pageSize, query);\n      skip = (skip - 1) * take;\n    } else if ('onRange' in singles) {\n      temp = singles.onRange;\n      skip = temp.start;\n      take = temp.end - temp.start;\n    } // Sorting\n\n\n    for (var i = 0; i < queries.sorts.length; i++) {\n      temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n      request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', {\n        name: temp,\n        direction: queries.sorts[i].e.direction\n      }, query));\n    } // hierarchy\n\n\n    if (hierarchyFilters) {\n      temp = this.getFiltersFrom(hierarchyFilters, query);\n\n      if (temp) {\n        request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n      }\n    } // Filters\n\n\n    for (var i = 0; i < queries.filters.length; i++) {\n      var res = DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query);\n\n      if (this.getModuleName && this.getModuleName() === 'ODataV4Adaptor' && !isNullOrUndefined(queries.filters[i].e.key) && queries.filters.length > 1) {\n        res = \"(\" + res + \")\";\n      }\n\n      request.filters.push(res);\n      var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n\n      for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n        var prop = keys_1[_i];\n\n        if (DataUtil.isNull(request[prop])) {\n          delete request[prop];\n        }\n      }\n    } // Searches\n\n\n    for (var i = 0; i < queries.searches.length; i++) {\n      temp = queries.searches[i].e;\n      request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n        fields: temp.fieldNames,\n        operator: temp.operator,\n        key: temp.searchKey,\n        ignoreCase: temp.ignoreCase\n      }, query));\n    } // Grouping\n\n\n    for (var i = 0; i < queries.groups.length; i++) {\n      request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n    } // aggregates\n\n\n    for (var i = 0; i < queries.aggregates.length; i++) {\n      temp = queries.aggregates[i].e;\n      request.aggregates.push({\n        type: temp.type,\n        field: DataUtil.getValue(temp.field, query)\n      });\n    }\n\n    var req = {};\n    this.getRequestQuery(options, query, singles, request, req); // Params\n\n    DataUtil.callAdaptorFunction(this, 'addParams', {\n      dm: dm,\n      query: query,\n      params: params,\n      reqParams: req\n    });\n\n    if (query.lazyLoad.length) {\n      for (var i = 0; i < query.lazyLoad.length; i++) {\n        req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n      }\n    } // cleanup\n\n\n    var keys = Object.keys(req);\n\n    for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n      var prop = keys_2[_a];\n\n      if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n        delete req[prop];\n      }\n    }\n\n    if (!(options.skip in req && options.take in req) && take !== null) {\n      req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n      req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n    }\n\n    var p = this.pvt;\n    this.pvt = {};\n\n    if (this.options.requestType === 'json') {\n      return {\n        data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n        url: url,\n        pvtData: p,\n        type: 'POST',\n        contentType: 'application/json; charset=utf-8'\n      };\n    }\n\n    temp = this.convertToQueryString(req, query, dm);\n    temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n    return {\n      type: 'GET',\n      url: temp.length ? url.replace(/\\/*$/, temp) : url,\n      pvtData: p\n    };\n  };\n\n  UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n    var param = 'param';\n    var req = request1;\n    req[options.from] = query.fromTable;\n\n    if (options.apply && query.distincts.length) {\n      req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n    }\n\n    if (!query.distincts.length && options.expand) {\n      req[options.expand] = 'onExpand' in this && 'onSelect' in singles ? DataUtil.callAdaptorFunction(this, 'onExpand', {\n        selects: DataUtil.getValue(singles.onSelect.fieldNames, query),\n        expands: query.expands\n      }, query) : query.expands;\n    }\n\n    req[options.select] = 'onSelect' in singles && !query.distincts.length ? DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n    req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n    req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n    req[options.skip] = 'onSkip' in singles ? DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n    req[options.take] = 'onTake' in singles ? DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n    req[options.where] = request.filters.length || request.searches.length ? DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n    req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n    req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n    req[options.aggregates] = request.aggregates.length ? DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n    req[param] = [];\n  };\n  /**\n   * Convert the object from processQuery to string which can be added query string.\n   * @param  {Object} req\n   * @param  {Query} query\n   * @param  {DataManager} dm\n   */\n\n\n  UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n    return ''; // this needs to be overridden\n  };\n  /**\n   * Return the data from the data manager processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Object} request?\n   * @param  {CrudOptions} changes?\n   */\n\n\n  UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n      var handleTimeZone = DataUtil.timeZoneHandling;\n\n      if (ds && !ds.timeZoneHandling) {\n        DataUtil.timeZoneHandling = false;\n      }\n\n      data = DataUtil.parse.parseJson(data);\n      DataUtil.timeZoneHandling = handleTimeZone;\n    }\n\n    var requests = request;\n    var pvt = requests.pvtData || {};\n    var groupDs = data ? data.groupDs : [];\n\n    if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n      return query.isCountRequired ? {\n        result: [],\n        count: 0\n      } : [];\n    }\n\n    var d = JSON.parse(requests.data);\n\n    if (d && d.action === 'batch' && data && data.addedRecords) {\n      changes.addedRecords = data.addedRecords;\n      return changes;\n    }\n\n    if (data && data.d) {\n      data = data.d;\n    }\n\n    var args = {};\n\n    if (data && 'count' in data) {\n      args.count = data.count;\n    }\n\n    args.result = data && data.result ? data.result : data;\n    var isExpand = false;\n\n    if (Array.isArray(data.result) && data.result.length) {\n      var key = 'key';\n      var val = 'value';\n      var level = 'level';\n\n      if (!isNullOrUndefined(data.result[0][key])) {\n        args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\n      }\n\n      if (query && query.lazyLoad.length && pvt.groups.length) {\n        for (var i = 0; i < query.lazyLoad.length; i++) {\n          if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\n            var value = query.lazyLoad[i][val][level];\n\n            if (pvt.groups.length === value) {\n              isExpand = true;\n            }\n          }\n        }\n      }\n    }\n\n    if (!isExpand) {\n      this.getAggregateResult(pvt, data, args, groupDs, query);\n    }\n\n    return DataUtil.isNull(args.count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n\n  UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\n        this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\n      }\n    }\n\n    var uid = 'GroupGuid';\n    var childLvl = 'childLevels';\n    var lvl = 'level';\n    var records = 'records';\n    data[uid] = consts[uid];\n    data[lvl] = level;\n    data[childLvl] = childLevel;\n    data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\n    return data;\n  };\n\n  UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\n    var childGroupedRecords = [];\n    var records = 'records';\n\n    for (var i = 0; i < data.length; i++) {\n      if (!hasRecords) {\n        for (var j = 0; j < data[i].items.length; j++) {\n          childGroupedRecords.push(data[i].items[j]);\n        }\n      } else {\n        childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\n      }\n    }\n\n    return childGroupedRecords;\n  };\n  /**\n   * Add the group query to the adaptor`s option.\n   * @param  {Object[]} e\n   * @returns void\n   */\n\n\n  UrlAdaptor.prototype.onGroup = function (e) {\n    this.pvt.groups = e;\n    return e;\n  };\n  /**\n   * Add the aggregate query to the adaptor`s option.\n   * @param  {Aggregates[]} e\n   * @returns void\n   */\n\n\n  UrlAdaptor.prototype.onAggregates = function (e) {\n    this.pvt.aggregates = e;\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {Object} e\n   */\n\n\n  UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var url;\n    var key;\n    return {\n      type: 'POST',\n      url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json',\n      data: JSON.stringify(extend({}, {\n        changed: changes.changedRecords,\n        added: changes.addedRecords,\n        deleted: changes.deletedRecords,\n        action: 'batch',\n        table: e[url],\n        key: e[key]\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @returns void\n   */\n\n\n  UrlAdaptor.prototype.beforeSend = function (dm, request) {// need to extend this method\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName\n   */\n\n\n  UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n    return {\n      url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: data,\n        table: tableName,\n        action: 'insert'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {number|string} value\n   * @param  {string} tableName\n   */\n\n\n  UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        key: value,\n        keyColumn: keyField,\n        table: tableName,\n        action: 'remove'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Prepare and return request body which is used to update record.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName\n   */\n\n\n  UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: value,\n        action: 'update',\n        keyColumn: keyField,\n        key: DataUtil.getObject(keyField, value),\n        table: tableName\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * To generate the predicate based on the filtered query.\n   * @param  {Object[]|string[]|number[]} data\n   * @param  {Query} query\n   * @hidden\n   */\n\n\n  UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n    var key = query.fKey;\n    var value;\n    var prop = key;\n    var pKey = query.key;\n    var predicats = [];\n\n    if (typeof data[0] !== 'object') {\n      prop = null;\n    }\n\n    for (var i = 0; i < data.length; i++) {\n      if (typeof data[0] === 'object') {\n        value = DataUtil.getObject(pKey || prop, data[i]);\n      } else {\n        value = data[i];\n      }\n\n      predicats.push(new Predicate(key, 'equal', value));\n    }\n\n    return Predicate.or(predicats);\n  };\n\n  UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n    var pData = data;\n\n    if (data && data.result) {\n      pData = data.result;\n    }\n\n    if (pvt && pvt.aggregates && pvt.aggregates.length) {\n      var agg = pvt.aggregates;\n      var fn = void 0;\n      var aggregateData = pData;\n      var res = {};\n\n      if (data.aggregate) {\n        aggregateData = data.aggregate;\n      }\n\n      for (var i = 0; i < agg.length; i++) {\n        fn = DataUtil.aggregates[agg[i].type];\n\n        if (fn) {\n          res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n        }\n      }\n\n      args.aggregates = res;\n    }\n\n    var key = 'key';\n    var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\n\n    if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\n      var groups = pvt.groups;\n\n      for (var i = 0; i < groups.length; i++) {\n        var level = null;\n\n        if (!isNullOrUndefined(groupDs)) {\n          groupDs = DataUtil.group(groupDs, groups[i]);\n        }\n\n        var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n        pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n      }\n\n      args.result = pData;\n    }\n\n    return args;\n  };\n\n  UrlAdaptor.prototype.getQueryRequest = function (query) {\n    var req = {\n      sorts: [],\n      groups: [],\n      filters: [],\n      searches: [],\n      aggregates: []\n    };\n    req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n    req.groups = Query.filterQueries(query.queries, 'onGroup');\n    req.filters = Query.filterQueries(query.queries, 'onWhere');\n    req.searches = Query.filterQueries(query.queries, 'onSearch');\n    req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n    return req;\n  };\n\n  UrlAdaptor.prototype.addParams = function (options) {\n    var req = options.reqParams;\n\n    if (options.params.length) {\n      req.params = {};\n    }\n\n    for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n      var tmp = _a[_i];\n\n      if (req[tmp.key]) {\n        throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n      }\n\n      req[tmp.key] = tmp.value;\n\n      if (tmp.fn) {\n        req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n      }\n\n      req.params[tmp.key] = req[tmp.key];\n    }\n  };\n\n  return UrlAdaptor;\n}(Adaptor);\n\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\n\nvar ODataAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(ODataAdaptor, _super);\n\n  function ODataAdaptor(props) {\n    var _this = _super.call(this) || this; // options replaced the default adaptor options\n\n\n    _this.options = extend({}, _this.options, {\n      requestType: 'get',\n      accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n      multipartAccept: 'multipart/mixed',\n      sortBy: '$orderby',\n      select: '$select',\n      skip: '$skip',\n      take: '$top',\n      count: '$inlinecount',\n      where: '$filter',\n      expand: '$expand',\n      batch: '$batch',\n      changeSet: '--changeset_',\n      batchPre: 'batch_',\n      contentId: 'Content-Id: ',\n      batchContent: 'Content-Type: multipart/mixed; boundary=',\n      changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n      batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n      updateType: 'PUT'\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n\n  ODataAdaptor.prototype.getModuleName = function () {\n    return 'ODataAdaptor';\n  };\n  /**\n   * Generate request string based on the filter criteria from query.\n   * @param  {Predicate} pred\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n    var returnValue = '';\n    var operator;\n    var guid;\n    var val = predicate.value;\n    var type = typeof val;\n    var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n\n    if (val instanceof Date) {\n      val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n    }\n\n    if (type === 'string') {\n      val = val.replace(/'/g, \"''\");\n\n      if (predicate.ignoreCase) {\n        val = val.toLowerCase();\n      }\n\n      val = encodeURIComponent(val);\n      val = '\\'' + val + '\\'';\n\n      if (requiresCast) {\n        field = 'cast(' + field + ', \\'Edm.String\\')';\n      }\n\n      if (DataUtil.parse.isGuid(val)) {\n        guid = 'guid';\n      }\n\n      if (predicate.ignoreCase) {\n        if (!guid) {\n          field = 'tolower(' + field + ')';\n        }\n\n        val = val.toLowerCase();\n      }\n    }\n\n    operator = DataUtil.odBiOperator[predicate.operator];\n\n    if (operator) {\n      returnValue += field;\n      returnValue += operator;\n\n      if (guid) {\n        returnValue += guid;\n      }\n\n      return returnValue + val;\n    }\n\n    if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n      operator = DataUtil.odv4UniOperator[predicate.operator];\n    } else {\n      operator = DataUtil.odUniOperator[predicate.operator];\n    }\n\n    if (operator === 'substringof') {\n      var temp = val;\n      val = field;\n      field = temp;\n    }\n\n    returnValue += operator + '(';\n    returnValue += field + ',';\n\n    if (guid) {\n      returnValue += guid;\n    }\n\n    returnValue += val + ')';\n    return returnValue;\n  };\n\n  ODataAdaptor.prototype.addParams = function (options) {\n    _super.prototype.addParams.call(this, options);\n\n    delete options.reqParams.params;\n  };\n  /**\n   * Generate request string based on the multiple filter criteria from query.\n   * @param  {Predicate} pred\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n    var res = [];\n\n    for (var i = 0; i < predicate.predicates.length; i++) {\n      res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n    }\n\n    return res.join(' ' + predicate.condition + ' ');\n  };\n  /**\n   * Generate query string based on the multiple filter criteria from query.\n   * @param  {Predicate} filter\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n    return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n  };\n  /**\n   * Generate query string based on the multiple filter criteria from query.\n   * @param  {string[]} filters\n   */\n\n\n  ODataAdaptor.prototype.onWhere = function (filters) {\n    if (this.pvt.search) {\n      filters.push(this.onEachWhere(this.pvt.search, null, true));\n    }\n\n    return filters.join(' and ');\n  };\n  /**\n   * Generate query string based on the multiple search criteria from query.\n   * @param  {{fields:string[]} e\n   * @param  {string} operator\n   * @param  {string} key\n   * @param  {boolean}} ignoreCase\n   */\n\n\n  ODataAdaptor.prototype.onEachSearch = function (e) {\n    if (e.fields && e.fields.length === 0) {\n      DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n    }\n\n    var filter = this.pvt.search || [];\n\n    for (var i = 0; i < e.fields.length; i++) {\n      filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n    }\n\n    this.pvt.search = filter;\n  };\n  /**\n   * Generate query string based on the search criteria from query.\n   * @param  {Object} e\n   */\n\n\n  ODataAdaptor.prototype.onSearch = function (e) {\n    this.pvt.search = Predicate.or(this.pvt.search);\n    return '';\n  };\n  /**\n   * Generate query string based on multiple sort criteria from query.\n   * @param  {QueryOptions} e\n   */\n\n\n  ODataAdaptor.prototype.onEachSort = function (e) {\n    var res = [];\n\n    if (e.name instanceof Array) {\n      for (var i = 0; i < e.name.length; i++) {\n        res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n      }\n    } else {\n      res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n    }\n\n    return res.join(',');\n  };\n  /**\n   * Returns sort query string.\n   * @param  {string[]} e\n   */\n\n\n  ODataAdaptor.prototype.onSortBy = function (e) {\n    return e.reverse().join(',');\n  };\n  /**\n   * Adds the group query to the adaptor option.\n   * @param  {Object[]} e\n   * @returns string\n   */\n\n\n  ODataAdaptor.prototype.onGroup = function (e) {\n    this.pvt.groups = e;\n    return [];\n  };\n  /**\n   * Returns the select query string.\n   * @param  {string[]} e\n   */\n\n\n  ODataAdaptor.prototype.onSelect = function (e) {\n    for (var i = 0; i < e.length; i++) {\n      e[i] = ODataAdaptor.getField(e[i]);\n    }\n\n    return e.join(',');\n  };\n  /**\n   * Add the aggregate query to the adaptor option.\n   * @param  {Object[]} e\n   * @returns string\n   */\n\n\n  ODataAdaptor.prototype.onAggregates = function (e) {\n    this.pvt.aggregates = e;\n    return '';\n  };\n  /**\n   * Returns the query string which requests total count from the data source.\n   * @param  {boolean} e\n   * @returns string\n   */\n\n\n  ODataAdaptor.prototype.onCount = function (e) {\n    return e === true ? 'allpages' : '';\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings?\n   */\n\n\n  ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n      request.setRequestHeader('Accept', this.options.multipartAccept);\n      request.setRequestHeader('DataServiceVersion', '2.0');\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n    } else {\n      request.setRequestHeader('Accept', this.options.accept);\n    }\n\n    request.setRequestHeader('DataServiceVersion', '2.0');\n    request.setRequestHeader('MaxDataServiceVersion', '2.0');\n  };\n  /**\n   * Returns the data from the query processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   * @returns aggregateResult\n   */\n\n\n  ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var metaCheck = 'odata.metadata';\n\n    if (request && request.type === 'GET' && !this.rootUrl && data[metaCheck]) {\n      var dataUrls = data[metaCheck].split('/$metadata#');\n      this.rootUrl = dataUrls[0];\n      this.resourceTableName = dataUrls[1];\n    }\n\n    var pvtData = 'pvtData';\n\n    if (!isNullOrUndefined(data.d)) {\n      var dataCopy = query && query.isCountRequired ? data.d.results : data.d;\n      var metaData = '__metadata';\n\n      if (!isNullOrUndefined(dataCopy)) {\n        for (var i = 0; i < dataCopy.length; i++) {\n          if (!isNullOrUndefined(dataCopy[i][metaData])) {\n            delete dataCopy[i][metaData];\n          }\n        }\n      }\n    }\n\n    var pvt = request && request[pvtData];\n    var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n\n    if (emptyAndBatch) {\n      return emptyAndBatch;\n    }\n\n    var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n    var count = null;\n    var version = versionCheck && parseInt(versionCheck, 10) || 2;\n\n    if (query && query.isCountRequired) {\n      var oDataCount = '__count';\n\n      if (data[oDataCount] || data['odata.count']) {\n        count = data[oDataCount] || data['odata.count'];\n      }\n\n      if (data.d) {\n        data = data.d;\n      }\n\n      if (data[oDataCount] || data['odata.count']) {\n        count = data[oDataCount] || data['odata.count'];\n      }\n    }\n\n    if (version === 3 && data.value) {\n      data = data.value;\n    }\n\n    if (data.d) {\n      data = data.d;\n    }\n\n    if (version < 3 && data.results) {\n      data = data.results;\n    }\n\n    var args = {};\n    args.count = count;\n    args.result = data;\n    this.getAggregateResult(pvt, data, args, null, query);\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n  /**\n   * Converts the request object to query string.\n   * @param  {Object} req\n   * @param  {Query} query\n   * @param  {DataManager} dm\n   * @returns tableName\n   */\n\n\n  ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n    var res = [];\n    var table = 'table';\n    var tableName = request[table] || '';\n    var format = '$format';\n    delete request[table];\n\n    if (dm.dataSource.requiresFormat) {\n      request[format] = 'json';\n    }\n\n    var keys = Object.keys(request);\n\n    for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n      var prop = keys_4[_i];\n      res.push(prop + '=' + request[prop]);\n    }\n\n    res = res.join('&');\n\n    if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n      return res;\n    }\n\n    return res.length ? tableName + '?' + res : tableName || '';\n  };\n\n  ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n    for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      if (convertObj[prop] instanceof Date) {\n        convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n      }\n    }\n\n    return convertObj;\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName?\n   */\n\n\n  ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n    return {\n      url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n      data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {number} value\n   * @param  {string} tableName?\n   */\n\n\n  ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    var url;\n\n    if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n      url = \"('\" + value + \"')\";\n    } else {\n      url = \"(\" + value + \")\";\n    }\n\n    return {\n      type: 'DELETE',\n      url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n    };\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   * @returns this\n   */\n\n\n  ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n    if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n      value = this.compareAndRemove(value, original, keyField);\n    }\n\n    var url;\n\n    if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n      url = \"('\" + value[keyField] + \"')\";\n    } else {\n      url = \"(\" + value[keyField] + \")\";\n    }\n\n    return {\n      type: this.options.updateType,\n      url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n      data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n      accept: this.options.accept\n    };\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   * @returns {Object}\n   */\n\n\n  ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n    var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch : dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n    e.url = this.resourceTableName ? this.resourceTableName : e.url;\n    var args = {\n      url: e.url,\n      key: e.key,\n      cid: 1,\n      cSet: DataUtil.getGuid(this.options.changeSet)\n    };\n    var req = '--' + initialGuid + '\\n';\n    req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n    this.pvt.changeSet = 0;\n    req += this.generateInsertRequest(changes.addedRecords, args, dm);\n    req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n    req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n    req += args.cSet + '--\\n';\n    req += '--' + initialGuid + '--';\n    return {\n      type: 'POST',\n      url: url,\n      dataType: 'json',\n      contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n      data: req\n    };\n  };\n  /**\n   * Generate the string content from the removed records.\n   * The result will be send during batch update.\n   * @param  {Object[]} arr\n   * @param  {RemoteArgs} e\n   * @returns this\n   */\n\n\n  ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n    if (!arr) {\n      return '';\n    }\n\n    var req = '';\n    var stat = {\n      'method': 'DELETE ',\n      'url': function (data, i, key) {\n        var url = DataUtil.getObject(key, data[i]);\n\n        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n          return '(' + url + ')';\n        } else if (url instanceof Date) {\n          var dateTime = data[i][key];\n          return '(' + dateTime.toJSON() + ')';\n        } else {\n          return \"('\" + url + \"')\";\n        }\n      },\n      'data': function (data, i) {\n        return '';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req + '\\n';\n  };\n  /**\n   * Generate the string content from the inserted records.\n   * The result will be send during batch update.\n   * @param  {Object[]} arr\n   * @param  {RemoteArgs} e\n   */\n\n\n  ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n    if (!arr) {\n      return '';\n    }\n\n    var req = '';\n    var stat = {\n      'method': 'POST ',\n      'url': function (data, i, key) {\n        return '';\n      },\n      'data': function (data, i) {\n        return JSON.stringify(data[i]) + '\\n\\n';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req;\n  };\n  /**\n   * Generate the string content from the updated records.\n   * The result will be send during batch update.\n   * @param  {Object[]} arr\n   * @param  {RemoteArgs} e\n   */\n\n\n  ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n    var _this = this;\n\n    if (!arr) {\n      return '';\n    }\n\n    var req = '';\n    arr.forEach(function (change) {\n      return change = _this.compareAndRemove(change, org.filter(function (o) {\n        return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change);\n      })[0], e.key);\n    });\n    var stat = {\n      'method': this.options.updateType + ' ',\n      'url': function (data, i, key) {\n        if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n          return '(' + data[i][key] + ')';\n        } else if (data[i][key] instanceof Date) {\n          var date = data[i][key];\n          return '(' + date.toJSON() + ')';\n        } else {\n          return \"('\" + data[i][key] + \"')\";\n        }\n      },\n      'data': function (data, i) {\n        return JSON.stringify(data[i]) + '\\n\\n';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req;\n  };\n\n  ODataAdaptor.getField = function (prop) {\n    return prop.replace(/\\./g, '/');\n  };\n\n  ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n    var req = '';\n\n    for (var i = 0; i < arr.length; i++) {\n      req += '\\n' + e.cSet + '\\n';\n      req += this.options.changeSetContent + '\\n\\n';\n      req += stat.method;\n\n      if (stat.method === 'POST ') {\n        req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      } else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n        req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      } else if (stat.method === 'DELETE ') {\n        req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      }\n\n      req += 'Accept: ' + this.options.accept + '\\n';\n      req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n      req += this.options.batchChangeSetContentType + '\\n';\n\n      if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n        req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n        delete arr[i]['@odata.etag'];\n      } else {\n        req += '\\n';\n      }\n\n      req += stat.data(arr, i);\n    }\n\n    return req;\n  };\n\n  ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n    if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n      return query.isCountRequired ? {\n        result: [],\n        count: 0\n      } : [];\n    }\n\n    if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n      var guid = xhr.getResponseHeader('Content-Type');\n      var cIdx = void 0;\n      var jsonObj = void 0;\n      var d = data + '';\n      guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n      d = d.split(guid);\n\n      if (d.length < 2) {\n        return {};\n      }\n\n      d = d[1];\n      var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n\n      if (exVal) {\n        d.replace(exVal[0], '');\n      }\n\n      var changeGuid = exVal ? exVal[1] : '';\n      d = d.split(changeGuid);\n\n      for (var i = d.length; i > -1; i--) {\n        if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n          continue;\n        }\n\n        cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n\n        if (changes.addedRecords[cIdx]) {\n          jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n          extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n        }\n      }\n\n      return changes;\n    }\n\n    return null;\n  };\n\n  ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n    var _this = this;\n\n    if (isNullOrUndefined(original)) {\n      return data;\n    }\n\n    Object.keys(data).forEach(function (prop) {\n      if (prop !== key && prop !== '@odata.etag') {\n        if (DataUtil.isPlainObject(data[prop])) {\n          _this.compareAndRemove(data[prop], original[prop]);\n\n          var final = Object.keys(data[prop]).filter(function (data) {\n            return data !== '@odata.etag';\n          });\n\n          if (final.length === 0) {\n            delete data[prop];\n          }\n        } else if (data[prop] === original[prop]) {\n          delete data[prop];\n        } else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n          delete data[prop];\n        }\n      }\n    });\n    return data;\n  };\n\n  return ODataAdaptor;\n}(UrlAdaptor);\n\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\n\nvar ODataV4Adaptor =\n/** @class */\nfunction (_super) {\n  __extends(ODataV4Adaptor, _super);\n\n  function ODataV4Adaptor(props) {\n    var _this = _super.call(this, props) || this; // options replaced the default adaptor options\n\n\n    _this.options = extend({}, _this.options, {\n      requestType: 'get',\n      accept: 'application/json, text/javascript, */*; q=0.01',\n      multipartAccept: 'multipart/mixed',\n      sortBy: '$orderby',\n      select: '$select',\n      skip: '$skip',\n      take: '$top',\n      count: '$count',\n      search: '$search',\n      where: '$filter',\n      expand: '$expand',\n      batch: '$batch',\n      changeSet: '--changeset_',\n      batchPre: 'batch_',\n      contentId: 'Content-Id: ',\n      batchContent: 'Content-Type: multipart/mixed; boundary=',\n      changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n      batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n      updateType: 'PATCH',\n      localTime: false,\n      apply: '$apply'\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  ODataV4Adaptor.prototype.getModuleName = function () {\n    return 'ODataV4Adaptor';\n  };\n  /**\n   * Returns the query string which requests total count from the data source.\n   * @param  {boolean} e\n   * @returns string\n   */\n\n\n  ODataV4Adaptor.prototype.onCount = function (e) {\n    return e === true ? 'true' : '';\n  };\n  /**\n   * Generate request string based on the filter criteria from query.\n   * @param  {Predicate} pred\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n    var returnValue = '';\n    var val = predicate.value;\n    var isDate = val instanceof Date;\n\n    if (query instanceof Query) {\n      var queries = this.getQueryRequest(query);\n\n      for (var i = 0; i < queries.filters.length; i++) {\n        if (queries.filters[i].e.key === predicate.value) {\n          requiresCast = true;\n        }\n      }\n    }\n\n    returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n\n    if (isDate) {\n      returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n    }\n\n    if (DataUtil.parse.isGuid(val)) {\n      returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n    }\n\n    return returnValue;\n  };\n  /**\n   *  Generate query string based on the multiple search criteria from query.\n   * @param  {{fields:string[]} e\n   * @param  {string} operator\n   * @param  {string} key\n   * @param  {boolean}} ignoreCase\n   */\n\n\n  ODataV4Adaptor.prototype.onEachSearch = function (e) {\n    var search = this.pvt.searches || [];\n    search.push(e.key);\n    this.pvt.searches = search;\n  };\n  /**\n   *  Generate query string based on the search criteria from query.\n   * @param  {Object} e\n   */\n\n\n  ODataV4Adaptor.prototype.onSearch = function (e) {\n    return this.pvt.searches.join(' OR ');\n  };\n  /**\n   * Returns the expand query string.\n   * @param  {string} e\n   */\n\n\n  ODataV4Adaptor.prototype.onExpand = function (e) {\n    var _this = this;\n\n    var selected = {};\n    var expanded = {};\n    var expands = e.expands.slice();\n    var exArr = [];\n    var selects = e.selects.filter(function (item) {\n      return item.indexOf('.') > -1;\n    });\n    selects.forEach(function (select) {\n      var splits = select.split('.');\n\n      if (!(splits[0] in selected)) {\n        selected[splits[0]] = [];\n      }\n\n      if (splits.length == 2) {\n        if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1) {\n          if (selected[splits[0]][0].indexOf('$expand') !== -1 && selected[splits[0]][0].indexOf(';$select=') === -1) {\n            selected[splits[0]][0] = selected[splits[0]][0] + ';' + '$select=' + splits[1];\n          } else {\n            selected[splits[0]][0] = selected[splits[0]][0] + ',' + splits[1];\n          }\n        } else {\n          selected[splits[0]].push('$select=' + splits[1]);\n        }\n      } else {\n        var sel = '$select=' + splits[splits.length - 1];\n        var exp = '';\n        var close_1 = '';\n\n        for (var i = 1; i < splits.length - 1; i++) {\n          exp = exp + '$expand=' + splits[i] + '(';\n          close_1 = close_1 + ')';\n        }\n\n        var combineVal = exp + sel + close_1;\n\n        if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1 && _this.expandQueryIndex(selected[splits[0]], true)) {\n          var idx = _this.expandQueryIndex(selected[splits[0]]);\n\n          selected[splits[0]][idx] = selected[splits[0]][idx] + combineVal.replace('$expand=', ',');\n        } else {\n          selected[splits[0]].push(combineVal);\n        }\n      }\n    }); //Auto expand from select query\n\n    Object.keys(selected).forEach(function (expand) {\n      if (expands.indexOf(expand) === -1) {\n        expands.push(expand);\n      }\n    });\n    expands.forEach(function (expand) {\n      expanded[expand] = expand in selected ? expand + \"(\" + selected[expand].join(';') + \")\" : expand;\n    });\n    Object.keys(expanded).forEach(function (ex) {\n      return exArr.push(expanded[ex]);\n    });\n    return exArr.join(',');\n  };\n\n  ODataV4Adaptor.prototype.expandQueryIndex = function (query, isExpand) {\n    for (var i = 0; i < query.length; i++) {\n      if (query[i].indexOf('$expand') !== -1) {\n        return isExpand ? true : i;\n      }\n    }\n\n    return isExpand ? false : 0;\n  };\n  /**\n   * Returns the groupby query string.\n   * @param  {string} e\n   */\n\n\n  ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n    var fields = distinctFields.map(function (field) {\n      return ODataAdaptor.getField(field);\n    }).join(',');\n    return \"groupby((\" + fields + \"))\";\n  };\n  /**\n   * Returns the select query string.\n   * @param  {string[]} e\n   */\n\n\n  ODataV4Adaptor.prototype.onSelect = function (e) {\n    return _super.prototype.onSelect.call(this, e.filter(function (item) {\n      return item.indexOf('.') === -1;\n    }));\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings\n   * @returns void\n   */\n\n\n  ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n      request.setRequestHeader('Prefer', 'return=representation');\n    }\n\n    request.setRequestHeader('Accept', this.options.accept);\n  };\n  /**\n   * Returns the data from the query processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   * @returns aggregateResult\n   */\n\n\n  ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var metaName = '@odata.context';\n\n    if (request && request.type === 'GET' && !this.rootUrl && data[metaName]) {\n      var dataUrl = data[metaName].split('/$metadata#');\n      this.rootUrl = dataUrl[0];\n      this.resourceTableName = dataUrl[1];\n    }\n\n    var pvtData = 'pvtData';\n    var pvt = request && request[pvtData];\n\n    var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n\n    if (emptyAndBatch) {\n      return emptyAndBatch;\n    }\n\n    var count = null;\n    var dataCount = '@odata.count';\n\n    if (query && query.isCountRequired) {\n      if (dataCount in data) {\n        count = data[dataCount];\n      }\n    }\n\n    data = !isNullOrUndefined(data.value) ? data.value : data;\n    var args = {};\n    args.count = count;\n    args.result = data;\n    this.getAggregateResult(pvt, data, args, null, query);\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: count,\n      aggregates: args.aggregates\n    };\n  };\n\n  return ODataV4Adaptor;\n}(ODataAdaptor);\n\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\n\nvar WebApiAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(WebApiAdaptor, _super);\n\n  function WebApiAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WebApiAdaptor.prototype.getModuleName = function () {\n    return 'WebApiAdaptor';\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName?\n   */\n\n\n  WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.url,\n      data: JSON.stringify(data)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {number} value\n   * @param  {string} tableName?\n   */\n\n\n  WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    return {\n      type: 'DELETE',\n      url: dm.dataSource.url + '/' + value,\n      data: JSON.stringify(value)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to update record.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   */\n\n\n  WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    return {\n      type: 'PUT',\n      url: dm.dataSource.url,\n      data: JSON.stringify(value)\n    };\n  };\n\n  WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    var _this = this;\n\n    var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n    var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n    e.url = this.resourceTableName ? this.resourceTableName : e.url;\n    var req = [];\n\n    var _loop_1 = function (i, x) {\n      changes.addedRecords.forEach(function (j, d) {\n        var stat = {\n          'method': 'POST ',\n          'url': function (data, i, key) {\n            return '';\n          },\n          'data': function (data, i) {\n            return JSON.stringify(data[i]) + '\\n\\n';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    }; //insertion\n\n\n    for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n      _loop_1(i, x);\n    }\n\n    var _loop_2 = function (i, x) {\n      changes.changedRecords.forEach(function (j, d) {\n        var stat = {\n          'method': _this.options.updateType + ' ',\n          'url': function (data, i, key) {\n            return '';\n          },\n          'data': function (data, i) {\n            return JSON.stringify(data[i]) + '\\n\\n';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    }; //updation \n\n\n    for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n      _loop_2(i, x);\n    }\n\n    var _loop_3 = function (i, x) {\n      changes.deletedRecords.forEach(function (j, d) {\n        var state = {\n          'mtd': 'DELETE ',\n          'url': function (data, i, key) {\n            var url = DataUtil.getObject(key, data[i]);\n\n            if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n              return '/' + url;\n            } else if (url instanceof Date) {\n              var datTime = data[i][key];\n              return '/' + datTime.toJSON();\n            } else {\n              return \"/'\" + url + \"'\";\n            }\n          },\n          'data': function (data, i) {\n            return '';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    }; //deletion\n\n\n    for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n      _loop_3(i, x);\n    }\n\n    req.push('--' + initialGuid + '--', '');\n    return {\n      type: 'POST',\n      url: url,\n      contentType: 'multipart/mixed; boundary=' + initialGuid,\n      data: req.join('\\r\\n')\n    };\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings\n   * @returns void\n   */\n\n\n  WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n  };\n  /**\n   * Returns the data from the query processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   * @returns aggregateResult\n   */\n\n\n  WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var pvtData = 'pvtData';\n    var pvt = request && request[pvtData];\n    var count = null;\n    var args = {};\n\n    if (request && request.type.toLowerCase() !== 'post') {\n      var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n      var version = versionCheck && parseInt(versionCheck, 10) || 2;\n\n      if (query && query.isCountRequired) {\n        if (!DataUtil.isNull(data.Count)) {\n          count = data.Count;\n        }\n      }\n\n      if (version < 3 && data.Items) {\n        data = data.Items;\n      }\n\n      args.count = count;\n      args.result = data;\n      this.getAggregateResult(pvt, data, args, null, query);\n    }\n\n    args.result = args.result || data;\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n\n  return WebApiAdaptor;\n}(ODataAdaptor);\n\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\n\nvar WebMethodAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(WebMethodAdaptor, _super);\n\n  function WebMethodAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Prepare the request body based on the query.\n   * The query information can be accessed at the WebMethod using variable named `value`.\n   * @param  {DataManager} dm\n   * @param  {Query} query\n   * @param  {Object[]} hierarchyFilters?\n   * @returns application\n   */\n\n\n  WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n    var getData = 'data';\n    var data = DataUtil.parse.parseJson(obj[getData]);\n    var result = {};\n    var value = 'value';\n\n    if (data.param) {\n      for (var i = 0; i < data.param.length; i++) {\n        var param = data.param[i];\n        var key = Object.keys(param)[0];\n        result[key] = param[key];\n      }\n    }\n\n    result[value] = data;\n    var pvtData = 'pvtData';\n    var url = 'url';\n    return {\n      data: JSON.stringify(result),\n      url: obj[url],\n      pvtData: obj[pvtData],\n      type: 'POST',\n      contentType: 'application/json; charset=utf-8'\n    };\n  };\n\n  return WebMethodAdaptor;\n}(UrlAdaptor);\n\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\n\nvar RemoteSaveAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(RemoteSaveAdaptor, _super);\n  /**\n   * @hidden\n   */\n\n\n  function RemoteSaveAdaptor() {\n    var _this = _super.call(this) || this;\n\n    setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n    return _this;\n  }\n\n  RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n    this.pvt.position = position;\n    this.updateType = 'add';\n    return {\n      url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: data,\n        table: tableName,\n        action: 'insert'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n    _super.prototype.remove.call(this, dm, keyField, val);\n\n    return {\n      type: 'POST',\n      url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        key: val,\n        keyColumn: keyField,\n        table: tableName,\n        action: 'remove'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n    this.updateType = 'update';\n    this.updateKey = keyField;\n    return {\n      type: 'POST',\n      url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: val,\n        action: 'update',\n        keyColumn: keyField,\n        key: val[keyField],\n        table: tableName\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n    var i;\n    var newData = request ? JSON.parse(request.data) : data;\n    data = newData.action === 'batch' ? DataUtil.parse.parseJson(data) : data;\n\n    if (this.updateType === 'add') {\n      _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n    }\n\n    if (this.updateType === 'update') {\n      _super.prototype.update.call(this, ds, this.updateKey, data);\n    }\n\n    this.updateType = undefined;\n\n    if (data.added) {\n      for (i = 0; i < data.added.length; i++) {\n        _super.prototype.insert.call(this, ds, data.added[i]);\n      }\n    }\n\n    if (data.changed) {\n      for (i = 0; i < data.changed.length; i++) {\n        _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n      }\n    }\n\n    if (data.deleted) {\n      for (i = 0; i < data.deleted.length; i++) {\n        _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n      }\n    }\n\n    return data;\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * Also perform the changes in the locally cached data to sync with the remote data.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n\n\n  RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json',\n      data: JSON.stringify(extend({}, {\n        changed: changes.changedRecords,\n        added: changes.addedRecords,\n        deleted: changes.deletedRecords,\n        action: 'batch',\n        table: e.url,\n        key: e.key\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.addParams = function (options) {\n    var urlParams = new UrlAdaptor();\n    urlParams.addParams(options);\n  };\n\n  return RemoteSaveAdaptor;\n}(JsonAdaptor);\n\nexport { RemoteSaveAdaptor };\n/**\n * Ajax Adaptor that is extended from URL Adaptor, is used for handle data operations with user defined functions.\n * @hidden\n */\n\nvar CustomDataAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(CustomDataAdaptor, _super);\n\n  function CustomDataAdaptor(props) {\n    var _this = _super.call(this) || this; // options replaced the default adaptor options\n\n\n    _this.options = extend({}, _this.options, {\n      getData: new Function(),\n      addRecord: new Function(),\n      updateRecord: new Function(),\n      deleteRecord: new Function(),\n      batchUpdate: new Function()\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n\n  CustomDataAdaptor.prototype.getModuleName = function () {\n    return 'CustomDataAdaptor';\n  };\n\n  return CustomDataAdaptor;\n}(UrlAdaptor);\n\nexport { CustomDataAdaptor };\n/**\n * The GraphqlAdaptor that is extended from URL Adaptor, is used for retrieving data from the Graphql server.\n * It interacts with the Graphql server with all the DataManager Queries and performs CRUD operations.\n * @hidden\n */\n\nvar GraphQLAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(GraphQLAdaptor, _super);\n\n  function GraphQLAdaptor(options) {\n    var _this = _super.call(this) || this;\n\n    _this.opt = options;\n    _this.schema = _this.opt.response;\n    _this.query = _this.opt.query;\n    _this.getVariables = _this.opt.getVariables ? _this.opt.getVariables : function () {};\n\n    _this.getQuery = function () {\n      return _this.query;\n    };\n\n    return _this;\n  }\n\n  GraphQLAdaptor.prototype.getModuleName = function () {\n    return 'GraphQLAdaptor';\n  };\n  /**\n   * Process the JSON data based on the provided queries.\n   * @param  {DataManager} dm\n   * @param  {Query} query?\n   */\n\n\n  GraphQLAdaptor.prototype.processQuery = function (datamanager, query) {\n    var urlQuery = _super.prototype.processQuery.apply(this, arguments);\n\n    var dm = JSON.parse(urlQuery.data); // constructing GraphQL parameters\n\n    var keys = ['skip', 'take', 'sorted', 'table', 'select', 'where', 'search', 'requiresCounts', 'aggregates', 'params'];\n    var temp = {};\n    var str = 'searchwhereparams';\n    keys.filter(function (e) {\n      temp[e] = str.indexOf(e) > -1 ? JSON.stringify(dm[e]) : dm[e];\n    });\n    var vars = this.getVariables() || {};\n    vars['datamanager'] = temp;\n    var data = JSON.stringify({\n      query: this.getQuery(),\n      variables: vars\n    });\n    urlQuery.data = data;\n    return urlQuery;\n  };\n  /**\n   * Returns the data from the query processing.\n   * It will also cache the data for later usage.\n   * @param  {DataResult} data\n   * @param  {DataManager} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Object} request?\n   * @returns DataResult\n   */\n\n\n  GraphQLAdaptor.prototype.processResponse = function (resData, ds, query, xhr, request) {\n    var res = resData;\n    var count;\n    var aggregates;\n    var result = getValue(this.schema.result, res.data);\n\n    if (this.schema.count) {\n      count = getValue(this.schema.count, res.data);\n    }\n\n    if (this.schema.aggregates) {\n      aggregates = getValue(this.schema.aggregates, res.data);\n      aggregates = !isNullOrUndefined(aggregates) ? DataUtil.parse.parseJson(aggregates) : aggregates;\n    }\n\n    var pvt = request.pvtData || {};\n    var args = {\n      result: result,\n      aggregates: aggregates\n    };\n    var data = args;\n\n    if (pvt && pvt.groups && pvt.groups.length) {\n      this.getAggregateResult(pvt, data, args, null, query);\n    }\n\n    return !isNullOrUndefined(count) ? {\n      result: args.result,\n      count: count,\n      aggregates: aggregates\n    } : args.result;\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   */\n\n\n  GraphQLAdaptor.prototype.insert = function () {\n    var inserted = _super.prototype.insert.apply(this, arguments);\n\n    return this.generateCrudData(inserted, 'insert');\n  };\n  /**\n   * Prepare and returns request body which is used to update a new record in the table.\n   */\n\n\n  GraphQLAdaptor.prototype.update = function () {\n    var inserted = _super.prototype.update.apply(this, arguments);\n\n    return this.generateCrudData(inserted, 'update');\n  };\n  /**\n   * Prepare and returns request body which is used to remove a new record in the table.\n   */\n\n\n  GraphQLAdaptor.prototype.remove = function () {\n    var inserted = _super.prototype.remove.apply(this, arguments);\n\n    return this.generateCrudData(inserted, 'remove');\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {Object} e\n   * @param  {Query} query\n   * @param  {Object} original\n   */\n\n\n  GraphQLAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var batch = _super.prototype.batchRequest.apply(this, arguments);\n\n    var bData = JSON.parse(batch.data);\n    bData.key = e.key;\n    batch.data = JSON.stringify(bData);\n    return this.generateCrudData(batch, 'batch');\n  };\n\n  GraphQLAdaptor.prototype.generateCrudData = function (crudData, action) {\n    var parsed = JSON.parse(crudData.data);\n    crudData.data = JSON.stringify({\n      query: this.opt.getMutation(action),\n      variables: parsed\n    });\n    return crudData;\n  };\n\n  return GraphQLAdaptor;\n}(UrlAdaptor);\n\nexport { GraphQLAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\n\nvar CacheAdaptor =\n/** @class */\nfunction (_super) {\n  __extends(CacheAdaptor, _super);\n  /**\n   * Constructor for CacheAdaptor class.\n   * @param  {CacheAdaptor} adaptor?\n   * @param  {number} timeStamp?\n   * @param  {number} pageSize?\n   * @hidden\n   */\n\n\n  function CacheAdaptor(adaptor, timeStamp, pageSize) {\n    var _this = _super.call(this) || this;\n\n    _this.isCrudAction = false;\n    _this.isInsertAction = false;\n\n    if (!isNullOrUndefined(adaptor)) {\n      _this.cacheAdaptor = adaptor;\n    }\n\n    _this.pageSize = pageSize;\n    _this.guidId = DataUtil.getGuid('cacheAdaptor');\n    var obj = {\n      keys: [],\n      results: []\n    };\n    window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n    var guid = _this.guidId;\n\n    if (!isNullOrUndefined(timeStamp)) {\n      setInterval(function () {\n        var data;\n        data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n        var forDel = [];\n\n        for (var i = 0; i < data.results.length; i++) {\n          var currentTime = +new Date();\n          var requestTime = +new Date(data.results[i].timeStamp);\n          data.results[i].timeStamp = currentTime - requestTime;\n\n          if (currentTime - requestTime > timeStamp) {\n            forDel.push(i);\n          }\n        }\n\n        for (var i = 0; i < forDel.length; i++) {\n          data.results.splice(forDel[i], 1);\n          data.keys.splice(forDel[i], 1);\n        }\n\n        window.localStorage.removeItem(guid);\n        window.localStorage.setItem(guid, JSON.stringify(data));\n      }, timeStamp);\n    }\n\n    return _this;\n  }\n  /**\n   * It will generate the key based on the URL when we send a request to server.\n   * @param  {string} url\n   * @param  {Query} query?\n   * @hidden\n   */\n\n\n  CacheAdaptor.prototype.generateKey = function (url, query) {\n    var queries = this.getQueryRequest(query);\n    var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n    var key = url;\n    var page = 'onPage';\n\n    if (page in singles) {\n      key += singles[page].pageIndex;\n    }\n\n    queries.sorts.forEach(function (obj) {\n      key += obj.e.direction + obj.e.fieldName;\n    });\n    queries.groups.forEach(function (obj) {\n      key += obj.e.fieldName;\n    });\n    queries.searches.forEach(function (obj) {\n      key += obj.e.searchKey;\n    });\n\n    for (var filter = 0; filter < queries.filters.length; filter++) {\n      var currentFilter = queries.filters[filter];\n\n      if (currentFilter.e.isComplex) {\n        var newQuery = query.clone();\n        newQuery.queries = [];\n\n        for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n          newQuery.queries.push({\n            fn: 'onWhere',\n            e: currentFilter.e.predicates[i],\n            filter: query.queries.filter\n          });\n        }\n\n        key += currentFilter.e.condition + this.generateKey(url, newQuery);\n      } else {\n        key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n      }\n    }\n\n    return key;\n  };\n  /**\n   * Process the query to generate request body.\n   * If the data is already cached, it will return the cached data.\n   * @param  {DataManager} dm\n   * @param  {Query} query?\n   * @param  {Object[]} hierarchyFilters?\n   */\n\n\n  CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var key = this.generateKey(dm.dataSource.url, query);\n    var cachedItems;\n    cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n    var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n\n    if (data != null && !this.isCrudAction && !this.isInsertAction) {\n      return data;\n    }\n\n    this.isCrudAction = null;\n    this.isInsertAction = null;\n    return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n  };\n  /**\n   * Returns the data from the query processing.\n   * It will also cache the data for later usage.\n   * @param  {DataResult} data\n   * @param  {DataManager} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   */\n\n\n  CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    if (this.isInsertAction || request && this.cacheAdaptor.options.batch && DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post') {\n      return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n    }\n\n    data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n    var obj = {};\n    obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n    var index = obj.keys.indexOf(key);\n\n    if (index !== -1) {\n      obj.results.splice(index, 1);\n      obj.keys.splice(index, 1);\n    }\n\n    obj.results[obj.keys.push(key) - 1] = {\n      keys: key,\n      result: data.result,\n      timeStamp: new Date(),\n      count: data.count\n    };\n\n    while (obj.results.length > this.pageSize) {\n      obj.results.splice(0, 1);\n      obj.keys.splice(0, 1);\n    }\n\n    window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n    return data;\n  };\n  /**\n   * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings?\n   */\n\n\n  CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch) && settings.type.toLowerCase() === 'post') {\n      request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n    }\n\n    if (!dm.dataSource.crossDomain) {\n      request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n    }\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName\n   */\n\n\n  CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    this.isCrudAction = true;\n    return this.cacheAdaptor.update(dm, keyField, value, tableName);\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName?\n   */\n\n\n  CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n    this.isInsertAction = true;\n    return this.cacheAdaptor.insert(dm, data, tableName);\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   */\n\n\n  CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    this.isCrudAction = true;\n    return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n\n\n  CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    return this.cacheAdaptor.batchRequest(dm, changes, e);\n  };\n\n  return CacheAdaptor;\n}(UrlAdaptor);\n\nexport { CacheAdaptor };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","merge","extend","isNullOrUndefined","setValue","getValue","DataUtil","Query","Predicate","consts","GroupGuid","Adaptor","ds","options","from","requestType","sortBy","select","skip","group","take","search","count","where","aggregates","expand","type","dataSource","pvt","processResponse","data","query","xhr","JsonAdaptor","_super","apply","arguments","processQuery","dataManager","result","json","slice","length","countFlg","ret","key","lazyLoad","keyCount","page","i","value","agg","queries","fn","push","e","call","field","undefined","args","lazyLoadData","lazyLoadGroup","isCountRequired","getAggregate","onDemandGroupInfo","req","onWhere","level","fieldName","comparer","formGroupResult","onPage","uid","childLevel","records","aggQuery","filterQueries","tmp","batchRequest","dm","changes","deletedRecordsLen","deletedRecords","addedRecords","insert","changedRecords","update","remove","filter","obj","validate","onAggregates","onSearch","fieldNames","getFieldList","j","getObject","searchKey","ignoreCase","ignoreAccent","onSortBy","fnCompare","sort","endsWith","fnSort","replace","onGroup","size","pageSize","start","pageIndex","end","onRange","onTake","nos","onSkip","onSelect","tableName","position","splice","keyField","Date","UrlAdaptor","hierarchyFilters","getQueryRequest","singles","filterQueryLists","params","url","temp","request","sorts","groups","filters","searches","callAdaptorFunction","name","direction","getFiltersFrom","toJson","res","getModuleName","keys_3","keys","_i","keys_1","prop","isNull","fields","operator","getRequestQuery","reqParams","_a","keys_2","JSON","stringify","parse","jsonDateReplacer","pvtData","contentType","convertToQueryString","indexOf","request1","param","fromTable","distincts","selects","expands","getResponseHeader","handleTimeZone","timeZoneHandling","parseJson","requests","groupDs","action","isExpand","isArray","val","formRemoteGroupedData","getAggregateResult","items","childLvl","lvl","getGroupedRecords","hasRecords","childGroupedRecords","concat","original","batchUrl","crudUrl","removeUrl","dataType","changed","added","deleted","table","getAddParams","beforeSend","insertUrl","keyColumn","updateUrl","fKey","pKey","predicats","or","pData","aggregateData","aggregate","isServerGrouping","groupQuery","addParams","Error","ODataAdaptor","props","_this","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","onPredicate","predicate","requiresCast","returnValue","guid","getField","replacer","toLowerCase","encodeURIComponent","isGuid","odBiOperator","odv4UniOperator","odUniOperator","onComplexPredicate","predicates","onEachWhere","join","condition","isComplex","onEachSearch","throwError","onEachSort","reverse","onCount","settings","setRequestHeader","overrideMimeType","metaCheck","rootUrl","dataUrls","split","resourceTableName","dataCopy","results","metaData","emptyAndBatch","processBatchResponse","versionCheck","version","parseInt","oDataCount","format","requiresFormat","keys_4","localTimeReplacer","convertObj","dateParse","toLocalTime","localTime","compareAndRemove","initialGuid","getGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","arr","stat","dateTime","toJSON","generateBodyContent","org","forEach","change","o","date","method","cIdx","jsonObj","substring","exVal","exec","changeGuid","test","isPlainObject","final","valueOf","ODataV4Adaptor","isDate","onExpand","selected","expanded","exArr","item","splits","sel","exp","close_1","combineVal","expandQueryIndex","idx","ex","onDistinct","distinctFields","map","metaName","dataUrl","dataCount","WebApiAdaptor","_loop_1","x","location","host","_loop_2","_loop_3","state","datTime","Count","Items","WebMethodAdaptor","getData","RemoteSaveAdaptor","updateKey","newData","urlParams","CustomDataAdaptor","Function","addRecord","updateRecord","deleteRecord","batchUpdate","GraphQLAdaptor","opt","schema","response","getVariables","getQuery","datamanager","urlQuery","str","vars","variables","resData","inserted","generateCrudData","bData","crudData","parsed","getMutation","CacheAdaptor","adaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","window","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","clone","cachedItems","index","crossDomain"],"sources":["C:/Users/leezh/Documents/Coding/Orbital Test/Orbital-Duty-Planner/node_modules/@syncfusion/ej2-data/src/adaptors.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\nvar Adaptor = /** @class */ (function () {\n    /**\n     * Constructor for Adaptor class\n     * @param  {DataOptions} ds?\n     * @hidden\n     * @returns aggregates\n     */\n    function Adaptor(ds) {\n        // common options for all the adaptors \n        this.options = {\n            from: 'table',\n            requestType: 'json',\n            sortBy: 'sorted',\n            select: 'select',\n            skip: 'skip',\n            group: 'group',\n            take: 'take',\n            search: 'search',\n            count: 'requiresCounts',\n            where: 'where',\n            aggregates: 'aggregates',\n            expand: 'expand'\n        };\n        /**\n         * Specifies the type of adaptor.\n         * @default Adaptor\n         */\n        this.type = Adaptor;\n        this.dataSource = ds;\n        this.pvt = {};\n    }\n    /**\n     * Returns the data from the query processing.\n     * @param  {Object} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @returns Object\n     */\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n        return data;\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\nvar JsonAdaptor = /** @class */ (function (_super) {\n    __extends(JsonAdaptor, _super);\n    function JsonAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dataManager\n     * @param  {Query} query\n     * @returns Object\n     */\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n        var result = dataManager.dataSource.json.slice(0);\n        var count = result.length;\n        var countFlg = true;\n        var ret;\n        var key;\n        var lazyLoad = {};\n        var keyCount = 0;\n        var group = [];\n        var page;\n        for (var i = 0; i < query.lazyLoad.length; i++) {\n            keyCount++;\n            lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n        }\n        var agg = {};\n        for (var i = 0; i < query.queries.length; i++) {\n            key = query.queries[i];\n            if ((key.fn === 'onPage' || key.fn === 'onGroup') && query.lazyLoad.length) {\n                if (key.fn === 'onGroup') {\n                    group.push(key.e);\n                }\n                if (key.fn === 'onPage') {\n                    page = key.e;\n                }\n                continue;\n            }\n            ret = this[key.fn].call(this, result, key.e, query);\n            if (key.fn === 'onAggregates') {\n                agg[key.e.field + ' - ' + key.e.type] = ret;\n            }\n            else {\n                result = ret !== undefined ? ret : result;\n            }\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n                countFlg = false;\n            }\n            if (countFlg) {\n                count = result.length;\n            }\n        }\n        if (keyCount) {\n            var args = {\n                query: query, lazyLoad: lazyLoad, result: result, group: group, page: page\n            };\n            var lazyLoadData = this.lazyLoadGroup(args);\n            result = lazyLoadData.result;\n            count = lazyLoadData.count;\n        }\n        if (query.isCountRequired) {\n            result = {\n                result: result,\n                count: count,\n                aggregates: agg\n            };\n        }\n        return result;\n    };\n    /**\n     * Perform lazy load grouping in JSON array based on the given query and lazy load details.\n     * @param  {LazyLoadGroupArgs} args\n     */\n    JsonAdaptor.prototype.lazyLoadGroup = function (args) {\n        var count = 0;\n        var agg = this.getAggregate(args.query);\n        var result = args.result;\n        if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\n            var req = args.lazyLoad.onDemandGroupInfo;\n            for (var i = req.where.length - 1; i >= 0; i--) {\n                result = this.onWhere(result, req.where[i]);\n            }\n            if (args.group.length !== req.level) {\n                var field = args.group[req.level].fieldName;\n                result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n            }\n            count = result.length;\n            var data = result;\n            result = result.slice(req.skip);\n            result = result.slice(0, req.take);\n            if (args.group.length !== req.level) {\n                this.formGroupResult(result, data);\n            }\n        }\n        else {\n            var field = args.group[0].fieldName;\n            result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n            count = result.length;\n            var data = result;\n            if (args.page) {\n                result = this.onPage(result, args.page, args.query);\n            }\n            this.formGroupResult(result, data);\n        }\n        return { result: result, count: count };\n    };\n    JsonAdaptor.prototype.formGroupResult = function (result, data) {\n        if (result.length && data.length) {\n            var uid = 'GroupGuid';\n            var childLevel = 'childLevels';\n            var level = 'level';\n            var records = 'records';\n            result[uid] = data[uid];\n            result[childLevel] = data[childLevel];\n            result[level] = data[level];\n            result[records] = data[records];\n        }\n        return result;\n    };\n    /**\n     * Separate the aggregate query from the given queries\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.getAggregate = function (query) {\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n        var agg = [];\n        if (aggQuery.length) {\n            var tmp = void 0;\n            for (var i = 0; i < aggQuery.length; i++) {\n                tmp = aggQuery[i].e;\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\n            }\n        }\n        return agg;\n    };\n    /**\n     * Performs batch update in the JSON array which add, remove and update records.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var i;\n        var deletedRecordsLen = changes.deletedRecords.length;\n        for (i = 0; i < changes.addedRecords.length; i++) {\n            this.insert(dm, changes.addedRecords[i]);\n        }\n        for (i = 0; i < changes.changedRecords.length; i++) {\n            this.update(dm, e.key, changes.changedRecords[i]);\n        }\n        for (i = 0; i < deletedRecordsLen; i++) {\n            this.remove(dm, e.key, changes.deletedRecords[i]);\n        }\n        return changes;\n    };\n    /**\n     * Performs filter operation with the given data and where query.\n     * @param  {Object[]} ds\n     * @param  {{validate:Function}} e\n     */\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.filter(function (obj) {\n            if (e) {\n                return e.validate(obj);\n            }\n        });\n    };\n    /**\n     * Returns aggregate function based on the aggregate type.\n     * @param  {Object[]} ds\n     * @param  {{field:string} e\n     * @param  {string}} type\n     */\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\n        var fn = DataUtil.aggregates[e.type];\n        if (!ds || !fn || ds.length === 0) {\n            return null;\n        }\n        return fn(ds, e.field);\n    };\n    /**\n     * Performs search operation based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     */\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        if (e.fieldNames.length === 0) {\n            DataUtil.getFieldList(ds[0], e.fieldNames);\n        }\n        return ds.filter(function (obj) {\n            for (var j = 0; j < e.fieldNames.length; j++) {\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Sort the data with given direction and field.\n     * @param  {Object[]} ds\n     * @param  {{comparer:(a:Object} e\n     * @param  {Object} b\n     */\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var fnCompare;\n        var field = DataUtil.getValue(e.fieldName, query);\n        if (!field) {\n            return ds.sort(e.comparer);\n        }\n        if (field instanceof Array) {\n            field = field.slice(0);\n            for (var i = field.length - 1; i >= 0; i--) {\n                if (!field[i]) {\n                    continue;\n                }\n                fnCompare = e.comparer;\n                if (DataUtil.endsWith(field[i], ' desc')) {\n                    fnCompare = DataUtil.fnSort('descending');\n                    field[i] = field[i].replace(' desc', '');\n                }\n                ds = DataUtil.sort(ds, field[i], fnCompare);\n            }\n            return ds;\n        }\n        return DataUtil.sort(ds, field, e.comparer);\n    };\n    /**\n     * Group the data based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var agg = this.getAggregate(query);\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n    };\n    /**\n     * Retrieves records based on the given page index and size.\n     * @param  {Object[]} ds\n     * @param  {{pageSize:number} e\n     * @param  {number}} pageIndex\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\n        var size = DataUtil.getValue(e.pageSize, query);\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n        var end = start + size;\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(start, end);\n    };\n    /**\n     * Retrieves records based on the given start and end index from query.\n     * @param  {Object[]} ds\n     * @param  {{start:number} e\n     * @param  {number}} end\n     */\n    JsonAdaptor.prototype.onRange = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n    };\n    /**\n     * Picks the given count of records from the top of the datasource.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onTake = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(0, DataUtil.getValue(e.nos));\n    };\n    /**\n     * Skips the given count of records from the data source.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.nos));\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {Object[]} ds\n     * @param  {{fieldNames:string}} e\n     */\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n    };\n    /**\n     * Inserts new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {number} position\n     */\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        if (isNullOrUndefined(position)) {\n            return dm.dataSource.json.push(data);\n        }\n        else {\n            return dm.dataSource.json.splice(position, 0, data);\n        }\n    };\n    /**\n     * Remove the data from the dataSource based on the key field value.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        if (typeof value === 'object' && !(value instanceof Date)) {\n            value = DataUtil.getObject(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (DataUtil.getObject(keyField, ds[i]) === value) {\n                break;\n            }\n        }\n        return i !== ds.length ? ds.splice(i, 1) : null;\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        var key;\n        if (!isNullOrUndefined(keyField)) {\n            key = getValue(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (!isNullOrUndefined(keyField) && (getValue(keyField, ds[i])) === key) {\n                break;\n            }\n        }\n        return i < ds.length ? merge(ds[i], value) : null;\n    };\n    return JsonAdaptor;\n}(Adaptor));\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\nvar UrlAdaptor = /** @class */ (function (_super) {\n    __extends(UrlAdaptor, _super);\n    function UrlAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the query to generate request body.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns p\n     */\n    // tslint:disable-next-line:max-func-body-length\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var params = query.params;\n        var url = dm.dataSource.url;\n        var temp;\n        var skip;\n        var take = null;\n        var options = this.options;\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        // calc Paging & Range\n        if ('onPage' in singles) {\n            temp = singles.onPage;\n            skip = DataUtil.getValue(temp.pageIndex, query);\n            take = DataUtil.getValue(temp.pageSize, query);\n            skip = (skip - 1) * take;\n        }\n        else if ('onRange' in singles) {\n            temp = singles.onRange;\n            skip = temp.start;\n            take = temp.end - temp.start;\n        }\n        // Sorting\n        for (var i = 0; i < queries.sorts.length; i++) {\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n        }\n        // hierarchy\n        if (hierarchyFilters) {\n            temp = this.getFiltersFrom(hierarchyFilters, query);\n            if (temp) {\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n            }\n        }\n        // Filters\n        for (var i = 0; i < queries.filters.length; i++) {\n            var res = DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query);\n            if ((this.getModuleName &&\n                this.getModuleName() === 'ODataV4Adaptor') &&\n                !isNullOrUndefined(queries.filters[i].e.key) && queries.filters.length > 1) {\n                res = \"(\" + res + \")\";\n            }\n            request.filters.push(res);\n            var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n            for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                if (DataUtil.isNull((request)[prop])) {\n                    delete request[prop];\n                }\n            }\n        }\n        // Searches\n        for (var i = 0; i < queries.searches.length; i++) {\n            temp = queries.searches[i].e;\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n                fields: temp.fieldNames,\n                operator: temp.operator,\n                key: temp.searchKey,\n                ignoreCase: temp.ignoreCase\n            }, query));\n        }\n        // Grouping\n        for (var i = 0; i < queries.groups.length; i++) {\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n        }\n        // aggregates\n        for (var i = 0; i < queries.aggregates.length; i++) {\n            temp = queries.aggregates[i].e;\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\n        }\n        var req = {};\n        this.getRequestQuery(options, query, singles, request, req);\n        // Params\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n        if (query.lazyLoad.length) {\n            for (var i = 0; i < query.lazyLoad.length; i++) {\n                req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n            }\n        }\n        // cleanup\n        var keys = Object.keys(req);\n        for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n            var prop = keys_2[_a];\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n                delete req[prop];\n            }\n        }\n        if (!(options.skip in req && options.take in req) && take !== null) {\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n        }\n        var p = this.pvt;\n        this.pvt = {};\n        if (this.options.requestType === 'json') {\n            return {\n                data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n                url: url,\n                pvtData: p,\n                type: 'POST',\n                contentType: 'application/json; charset=utf-8'\n            };\n        }\n        temp = this.convertToQueryString(req, query, dm);\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n        return {\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n        };\n    };\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n        var param = 'param';\n        var req = request1;\n        req[options.from] = query.fromTable;\n        if (options.apply && query.distincts.length) {\n            req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n        }\n        if (!query.distincts.length && options.expand) {\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\n        }\n        req[options.select] = 'onSelect' in singles && !query.distincts.length ?\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n        req[options.skip] = 'onSkip' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n        req[options.take] = 'onTake' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n        req[options.where] = request.filters.length || request.searches.length ?\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n        req[options.aggregates] = request.aggregates.length ?\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n        req[param] = [];\n    };\n    /**\n     * Convert the object from processQuery to string which can be added query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     */\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        return '';\n        // this needs to be overridden\n    };\n    /**\n     * Return the data from the data manager processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @param  {CrudOptions} changes?\n     */\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n            var handleTimeZone = DataUtil.timeZoneHandling;\n            if (ds && !ds.timeZoneHandling) {\n                DataUtil.timeZoneHandling = false;\n            }\n            data = DataUtil.parse.parseJson(data);\n            DataUtil.timeZoneHandling = handleTimeZone;\n        }\n        var requests = request;\n        var pvt = requests.pvtData || {};\n        var groupDs = data ? data.groupDs : [];\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        var d = JSON.parse(requests.data);\n        if (d && d.action === 'batch' && data && data.addedRecords) {\n            changes.addedRecords = data.addedRecords;\n            return changes;\n        }\n        if (data && data.d) {\n            data = data.d;\n        }\n        var args = {};\n        if (data && 'count' in data) {\n            args.count = data.count;\n        }\n        args.result = data && data.result ? data.result : data;\n        var isExpand = false;\n        if (Array.isArray(data.result) && data.result.length) {\n            var key = 'key';\n            var val = 'value';\n            var level = 'level';\n            if (!isNullOrUndefined(data.result[0][key])) {\n                args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\n            }\n            if (query && query.lazyLoad.length && pvt.groups.length) {\n                for (var i = 0; i < query.lazyLoad.length; i++) {\n                    if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\n                        var value = query.lazyLoad[i][val][level];\n                        if (pvt.groups.length === value) {\n                            isExpand = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (!isExpand) {\n            this.getAggregateResult(pvt, data, args, groupDs, query);\n        }\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\n        for (var i = 0; i < data.length; i++) {\n            if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\n                this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\n            }\n        }\n        var uid = 'GroupGuid';\n        var childLvl = 'childLevels';\n        var lvl = 'level';\n        var records = 'records';\n        data[uid] = consts[uid];\n        data[lvl] = level;\n        data[childLvl] = childLevel;\n        data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\n        return data;\n    };\n    UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\n        var childGroupedRecords = [];\n        var records = 'records';\n        for (var i = 0; i < data.length; i++) {\n            if (!hasRecords) {\n                for (var j = 0; j < data[i].items.length; j++) {\n                    childGroupedRecords.push(data[i].items[j]);\n                }\n            }\n            else {\n                childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\n            }\n        }\n        return childGroupedRecords;\n    };\n    /**\n     * Add the group query to the adaptor`s option.\n     * @param  {Object[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return e;\n    };\n    /**\n     * Add the aggregate query to the adaptor`s option.\n     * @param  {Aggregates[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     */\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var url;\n        var key;\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e[url],\n                key: e[key]\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @returns void\n     */\n    UrlAdaptor.prototype.beforeSend = function (dm, request) {\n        // need to extend this method\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number|string} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: DataUtil.getObject(keyField, value),\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * To generate the predicate based on the filtered query.\n     * @param  {Object[]|string[]|number[]} data\n     * @param  {Query} query\n     * @hidden\n     */\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n        var key = query.fKey;\n        var value;\n        var prop = key;\n        var pKey = query.key;\n        var predicats = [];\n        if (typeof data[0] !== 'object') {\n            prop = null;\n        }\n        for (var i = 0; i < data.length; i++) {\n            if (typeof data[0] === 'object') {\n                value = DataUtil.getObject(pKey || prop, data[i]);\n            }\n            else {\n                value = data[i];\n            }\n            predicats.push(new Predicate(key, 'equal', value));\n        }\n        return Predicate.or(predicats);\n    };\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n        var pData = data;\n        if (data && data.result) {\n            pData = data.result;\n        }\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\n            var agg = pvt.aggregates;\n            var fn = void 0;\n            var aggregateData = pData;\n            var res = {};\n            if (data.aggregate) {\n                aggregateData = data.aggregate;\n            }\n            for (var i = 0; i < agg.length; i++) {\n                fn = DataUtil.aggregates[agg[i].type];\n                if (fn) {\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n                }\n            }\n            args.aggregates = res;\n        }\n        var key = 'key';\n        var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\n        if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\n            var groups = pvt.groups;\n            for (var i = 0; i < groups.length; i++) {\n                var level = null;\n                if (!isNullOrUndefined(groupDs)) {\n                    groupDs = DataUtil.group(groupDs, groups[i]);\n                }\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n            }\n            args.result = pData;\n        }\n        return args;\n    };\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n        return req;\n    };\n    UrlAdaptor.prototype.addParams = function (options) {\n        var req = options.reqParams;\n        if (options.params.length) {\n            req.params = {};\n        }\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n            var tmp = _a[_i];\n            if (req[tmp.key]) {\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n            }\n            req[tmp.key] = tmp.value;\n            if (tmp.fn) {\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n            }\n            req.params[tmp.key] = req[tmp.key];\n        }\n    };\n    return UrlAdaptor;\n}(Adaptor));\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\nvar ODataAdaptor = /** @class */ (function (_super) {\n    __extends(ODataAdaptor, _super);\n    function ODataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$inlinecount',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PUT'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    ODataAdaptor.prototype.getModuleName = function () {\n        return 'ODataAdaptor';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var operator;\n        var guid;\n        var val = predicate.value;\n        var type = typeof val;\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n        if (val instanceof Date) {\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n        }\n        if (type === 'string') {\n            val = val.replace(/'/g, \"''\");\n            if (predicate.ignoreCase) {\n                val = val.toLowerCase();\n            }\n            val = encodeURIComponent(val);\n            val = '\\'' + val + '\\'';\n            if (requiresCast) {\n                field = 'cast(' + field + ', \\'Edm.String\\')';\n            }\n            if (DataUtil.parse.isGuid(val)) {\n                guid = 'guid';\n            }\n            if (predicate.ignoreCase) {\n                if (!guid) {\n                    field = 'tolower(' + field + ')';\n                }\n                val = val.toLowerCase();\n            }\n        }\n        operator = DataUtil.odBiOperator[predicate.operator];\n        if (operator) {\n            returnValue += field;\n            returnValue += operator;\n            if (guid) {\n                returnValue += guid;\n            }\n            return returnValue + val;\n        }\n        if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n            operator = DataUtil.odv4UniOperator[predicate.operator];\n        }\n        else {\n            operator = DataUtil.odUniOperator[predicate.operator];\n        }\n        if (operator === 'substringof') {\n            var temp = val;\n            val = field;\n            field = temp;\n        }\n        returnValue += operator + '(';\n        returnValue += field + ',';\n        if (guid) {\n            returnValue += guid;\n        }\n        returnValue += val + ')';\n        return returnValue;\n    };\n    ODataAdaptor.prototype.addParams = function (options) {\n        _super.prototype.addParams.call(this, options);\n        delete options.reqParams.params;\n    };\n    /**\n     * Generate request string based on the multiple filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n        var res = [];\n        for (var i = 0; i < predicate.predicates.length; i++) {\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n        }\n        return res.join(' ' + predicate.condition + ' ');\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {Predicate} filter\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {string[]} filters\n     */\n    ODataAdaptor.prototype.onWhere = function (filters) {\n        if (this.pvt.search) {\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\n        }\n        return filters.join(' and ');\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataAdaptor.prototype.onEachSearch = function (e) {\n        if (e.fields && e.fields.length === 0) {\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n        }\n        var filter = this.pvt.search || [];\n        for (var i = 0; i < e.fields.length; i++) {\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n        }\n        this.pvt.search = filter;\n    };\n    /**\n     * Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataAdaptor.prototype.onSearch = function (e) {\n        this.pvt.search = Predicate.or(this.pvt.search);\n        return '';\n    };\n    /**\n     * Generate query string based on multiple sort criteria from query.\n     * @param  {QueryOptions} e\n     */\n    ODataAdaptor.prototype.onEachSort = function (e) {\n        var res = [];\n        if (e.name instanceof Array) {\n            for (var i = 0; i < e.name.length; i++) {\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n            }\n        }\n        else {\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n        }\n        return res.join(',');\n    };\n    /**\n     * Returns sort query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSortBy = function (e) {\n        return e.reverse().join(',');\n    };\n    /**\n     * Adds the group query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return [];\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSelect = function (e) {\n        for (var i = 0; i < e.length; i++) {\n            e[i] = ODataAdaptor.getField(e[i]);\n        }\n        return e.join(',');\n    };\n    /**\n     * Add the aggregate query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n        return '';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onCount = function (e) {\n        return e === true ? 'allpages' : '';\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.options.multipartAccept);\n            request.setRequestHeader('DataServiceVersion', '2.0');\n            request.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        else {\n            request.setRequestHeader('Accept', this.options.accept);\n        }\n        request.setRequestHeader('DataServiceVersion', '2.0');\n        request.setRequestHeader('MaxDataServiceVersion', '2.0');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaCheck = 'odata.metadata';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaCheck]) {\n            var dataUrls = data[metaCheck].split('/$metadata#');\n            this.rootUrl = dataUrls[0];\n            this.resourceTableName = dataUrls[1];\n        }\n        var pvtData = 'pvtData';\n        if (!isNullOrUndefined(data.d)) {\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\n            var metaData = '__metadata';\n            if (!isNullOrUndefined(dataCopy)) {\n                for (var i = 0; i < dataCopy.length; i++) {\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\n                        delete dataCopy[i][metaData];\n                    }\n                }\n            }\n        }\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n        var count = null;\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n        if (query && query.isCountRequired) {\n            var oDataCount = '__count';\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n            if (data.d) {\n                data = data.d;\n            }\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n        }\n        if (version === 3 && data.value) {\n            data = data.value;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        if (version < 3 && data.results) {\n            data = data.results;\n        }\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Converts the request object to query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     * @returns tableName\n     */\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        var res = [];\n        var table = 'table';\n        var tableName = request[table] || '';\n        var format = '$format';\n        delete request[table];\n        if (dm.dataSource.requiresFormat) {\n            request[format] = 'json';\n        }\n        var keys = Object.keys(request);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var prop = keys_4[_i];\n            res.push(prop + '=' + request[prop]);\n        }\n        res = res.join('&');\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n            return res;\n        }\n        return res.length ? tableName + '?' + res : tableName || '';\n    };\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if ((convertObj[prop] instanceof Date)) {\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n            }\n        }\n        return convertObj;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var url;\n        if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n            url = \"('\" + value + \"')\";\n        }\n        else {\n            url = \"(\" + value + \")\";\n        }\n        return {\n            type: 'DELETE',\n            url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n        };\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns this\n     */\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n            value = this.compareAndRemove(value, original, keyField);\n        }\n        var url;\n        if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n            url = \"('\" + value[keyField] + \"')\";\n        }\n        else {\n            url = \"(\" + value[keyField] + \")\";\n        }\n        return {\n            type: this.options.updateType,\n            url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n            accept: this.options.accept\n        };\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     * @returns {Object}\n     */\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch :\n            dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var args = {\n            url: e.url,\n            key: e.key,\n            cid: 1,\n            cSet: DataUtil.getGuid(this.options.changeSet)\n        };\n        var req = '--' + initialGuid + '\\n';\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n        this.pvt.changeSet = 0;\n        req += this.generateInsertRequest(changes.addedRecords, args, dm);\n        req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n        req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n        req += args.cSet + '--\\n';\n        req += '--' + initialGuid + '--';\n        return {\n            type: 'POST',\n            url: url,\n            dataType: 'json',\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n            data: req\n        };\n    };\n    /**\n     * Generate the string content from the removed records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     * @returns this\n     */\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'DELETE ',\n            'url': function (data, i, key) {\n                var url = DataUtil.getObject(key, data[i]);\n                if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                    return '(' + url + ')';\n                }\n                else if (url instanceof Date) {\n                    var dateTime = data[i][key];\n                    return '(' + dateTime.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + url + \"')\";\n                }\n            },\n            'data': function (data, i) { return ''; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req + '\\n';\n    };\n    /**\n     * Generate the string content from the inserted records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'POST ',\n            'url': function (data, i, key) { return ''; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    /**\n     * Generate the string content from the updated records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n        var _this = this;\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\n        var stat = {\n            'method': this.options.updateType + ' ',\n            'url': function (data, i, key) {\n                if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n                    return '(' + data[i][key] + ')';\n                }\n                else if (data[i][key] instanceof Date) {\n                    var date = data[i][key];\n                    return '(' + date.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + data[i][key] + \"')\";\n                }\n            },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    ODataAdaptor.getField = function (prop) {\n        return prop.replace(/\\./g, '/');\n    };\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n        var req = '';\n        for (var i = 0; i < arr.length; i++) {\n            req += '\\n' + e.cSet + '\\n';\n            req += this.options.changeSetContent + '\\n\\n';\n            req += stat.method;\n            if (stat.method === 'POST ') {\n                req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n                req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'DELETE ') {\n                req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            req += 'Accept: ' + this.options.accept + '\\n';\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n            req += this.options.batchChangeSetContentType + '\\n';\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n                delete arr[i]['@odata.etag'];\n            }\n            else {\n                req += '\\n';\n            }\n            req += stat.data(arr, i);\n        }\n        return req;\n    };\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n            var guid = xhr.getResponseHeader('Content-Type');\n            var cIdx = void 0;\n            var jsonObj = void 0;\n            var d = data + '';\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n            d = d.split(guid);\n            if (d.length < 2) {\n                return {};\n            }\n            d = d[1];\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n            if (exVal) {\n                d.replace(exVal[0], '');\n            }\n            var changeGuid = exVal ? exVal[1] : '';\n            d = d.split(changeGuid);\n            for (var i = d.length; i > -1; i--) {\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n                    continue;\n                }\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n                if (changes.addedRecords[cIdx]) {\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n                }\n            }\n            return changes;\n        }\n        return null;\n    };\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n        var _this = this;\n        if (isNullOrUndefined(original)) {\n            return data;\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (prop !== key && prop !== '@odata.etag') {\n                if (DataUtil.isPlainObject(data[prop])) {\n                    _this.compareAndRemove(data[prop], original[prop]);\n                    var final = Object.keys(data[prop]).filter(function (data) { return data !== '@odata.etag'; });\n                    if (final.length === 0) {\n                        delete data[prop];\n                    }\n                }\n                else if (data[prop] === original[prop]) {\n                    delete data[prop];\n                }\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n                    delete data[prop];\n                }\n            }\n        });\n        return data;\n    };\n    return ODataAdaptor;\n}(UrlAdaptor));\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\nvar ODataV4Adaptor = /** @class */ (function (_super) {\n    __extends(ODataV4Adaptor, _super);\n    function ODataV4Adaptor(props) {\n        var _this = _super.call(this, props) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json, text/javascript, */*; q=0.01',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$count',\n            search: '$search',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PATCH',\n            localTime: false,\n            apply: '$apply'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ODataV4Adaptor.prototype.getModuleName = function () {\n        return 'ODataV4Adaptor';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataV4Adaptor.prototype.onCount = function (e) {\n        return e === true ? 'true' : '';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var val = predicate.value;\n        var isDate = val instanceof Date;\n        if (query instanceof Query) {\n            var queries = this.getQueryRequest(query);\n            for (var i = 0; i < queries.filters.length; i++) {\n                if (queries.filters[i].e.key === predicate.value) {\n                    requiresCast = true;\n                }\n            }\n        }\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n        if (isDate) {\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n        }\n        if (DataUtil.parse.isGuid(val)) {\n            returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n        }\n        return returnValue;\n    };\n    /**\n     *  Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\n        var search = this.pvt.searches || [];\n        search.push(e.key);\n        this.pvt.searches = search;\n    };\n    /**\n     *  Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataV4Adaptor.prototype.onSearch = function (e) {\n        return this.pvt.searches.join(' OR ');\n    };\n    /**\n     * Returns the expand query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onExpand = function (e) {\n        var _this = this;\n        var selected = {};\n        var expanded = {};\n        var expands = e.expands.slice();\n        var exArr = [];\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\n        selects.forEach(function (select) {\n            var splits = select.split('.');\n            if (!(splits[0] in selected)) {\n                selected[splits[0]] = [];\n            }\n            if (splits.length == 2) {\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1) {\n                    if (selected[splits[0]][0].indexOf('$expand') !== -1 && selected[splits[0]][0].indexOf(';$select=') === -1) {\n                        selected[splits[0]][0] = selected[splits[0]][0] + ';' + '$select=' + splits[1];\n                    }\n                    else {\n                        selected[splits[0]][0] = selected[splits[0]][0] + ',' + splits[1];\n                    }\n                }\n                else {\n                    selected[splits[0]].push('$select=' + splits[1]);\n                }\n            }\n            else {\n                var sel = '$select=' + splits[splits.length - 1];\n                var exp = '';\n                var close_1 = '';\n                for (var i = 1; i < splits.length - 1; i++) {\n                    exp = exp + '$expand=' + splits[i] + '(';\n                    close_1 = close_1 + ')';\n                }\n                var combineVal = exp + sel + close_1;\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1 &&\n                    _this.expandQueryIndex(selected[splits[0]], true)) {\n                    var idx = _this.expandQueryIndex(selected[splits[0]]);\n                    selected[splits[0]][idx] = selected[splits[0]][idx] + combineVal.replace('$expand=', ',');\n                }\n                else {\n                    selected[splits[0]].push(combineVal);\n                }\n            }\n        });\n        //Auto expand from select query\n        Object.keys(selected).forEach(function (expand) {\n            if ((expands.indexOf(expand) === -1)) {\n                expands.push(expand);\n            }\n        });\n        expands.forEach(function (expand) {\n            expanded[expand] = expand in selected ? expand + \"(\" + selected[expand].join(';') + \")\" : expand;\n        });\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\n        return exArr.join(',');\n    };\n    ODataV4Adaptor.prototype.expandQueryIndex = function (query, isExpand) {\n        for (var i = 0; i < query.length; i++) {\n            if (query[i].indexOf('$expand') !== -1) {\n                return isExpand ? true : i;\n            }\n        }\n        return isExpand ? false : 0;\n    };\n    /**\n     * Returns the groupby query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n        var fields = distinctFields.map(function (field) { return ODataAdaptor.getField(field); }).join(',');\n        return \"groupby((\" + fields + \"))\";\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataV4Adaptor.prototype.onSelect = function (e) {\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n            request.setRequestHeader('Prefer', 'return=representation');\n        }\n        request.setRequestHeader('Accept', this.options.accept);\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaName = '@odata.context';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaName]) {\n            var dataUrl = data[metaName].split('/$metadata#');\n            this.rootUrl = dataUrl[0];\n            this.resourceTableName = dataUrl[1];\n        }\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var count = null;\n        var dataCount = '@odata.count';\n        if (query && query.isCountRequired) {\n            if (dataCount in data) {\n                count = data[dataCount];\n            }\n        }\n        data = !isNullOrUndefined(data.value) ? data.value : data;\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n    };\n    return ODataV4Adaptor;\n}(ODataAdaptor));\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\nvar WebApiAdaptor = /** @class */ (function (_super) {\n    __extends(WebApiAdaptor, _super);\n    function WebApiAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebApiAdaptor.prototype.getModuleName = function () {\n        return 'WebApiAdaptor';\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.url,\n            data: JSON.stringify(data)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url + '/' + value,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'PUT',\n            url: dm.dataSource.url,\n            data: JSON.stringify(value)\n        };\n    };\n    WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var _this = this;\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var req = [];\n        var _loop_1 = function (i, x) {\n            changes.addedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': 'POST ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //insertion\n        for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n            _loop_1(i, x);\n        }\n        var _loop_2 = function (i, x) {\n            changes.changedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': _this.options.updateType + ' ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //updation \n        for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n            _loop_2(i, x);\n        }\n        var _loop_3 = function (i, x) {\n            changes.deletedRecords.forEach(function (j, d) {\n                var state = {\n                    'mtd': 'DELETE ',\n                    'url': function (data, i, key) {\n                        var url = DataUtil.getObject(key, data[i]);\n                        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                            return '/' + url;\n                        }\n                        else if (url instanceof Date) {\n                            var datTime = data[i][key];\n                            return '/' + datTime.toJSON();\n                        }\n                        else {\n                            return \"/'\" + url + \"'\";\n                        }\n                    },\n                    'data': function (data, i) { return ''; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url)\n                    + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //deletion\n        for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n            _loop_3(i, x);\n        }\n        req.push('--' + initialGuid + '--', '');\n        return {\n            type: 'POST',\n            url: url,\n            contentType: 'multipart/mixed; boundary=' + initialGuid,\n            data: req.join('\\r\\n')\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var count = null;\n        var args = {};\n        if (request && request.type.toLowerCase() !== 'post') {\n            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n            if (query && query.isCountRequired) {\n                if (!DataUtil.isNull(data.Count)) {\n                    count = data.Count;\n                }\n            }\n            if (version < 3 && data.Items) {\n                data = data.Items;\n            }\n            args.count = count;\n            args.result = data;\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        args.result = args.result || data;\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    return WebApiAdaptor;\n}(ODataAdaptor));\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\nvar WebMethodAdaptor = /** @class */ (function (_super) {\n    __extends(WebMethodAdaptor, _super);\n    function WebMethodAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare the request body based on the query.\n     * The query information can be accessed at the WebMethod using variable named `value`.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns application\n     */\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n        var getData = 'data';\n        var data = DataUtil.parse.parseJson(obj[getData]);\n        var result = {};\n        var value = 'value';\n        if (data.param) {\n            for (var i = 0; i < data.param.length; i++) {\n                var param = data.param[i];\n                var key = Object.keys(param)[0];\n                result[key] = param[key];\n            }\n        }\n        result[value] = data;\n        var pvtData = 'pvtData';\n        var url = 'url';\n        return {\n            data: JSON.stringify(result),\n            url: obj[url],\n            pvtData: obj[pvtData],\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8'\n        };\n    };\n    return WebMethodAdaptor;\n}(UrlAdaptor));\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @class */ (function (_super) {\n    __extends(RemoteSaveAdaptor, _super);\n    /**\n     * @hidden\n     */\n    function RemoteSaveAdaptor() {\n        var _this = _super.call(this) || this;\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n        return _this;\n    }\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        this.pvt.position = position;\n        this.updateType = 'add';\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n        _super.prototype.remove.call(this, dm, keyField, val);\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: val,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n        this.updateType = 'update';\n        this.updateKey = keyField;\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: val,\n                action: 'update',\n                keyColumn: keyField,\n                key: val[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n        var i;\n        var newData = request ? JSON.parse(request.data) : data;\n        data = newData.action === 'batch' ? DataUtil.parse.parseJson(data) : data;\n        if (this.updateType === 'add') {\n            _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n        }\n        if (this.updateType === 'update') {\n            _super.prototype.update.call(this, ds, this.updateKey, data);\n        }\n        this.updateType = undefined;\n        if (data.added) {\n            for (i = 0; i < data.added.length; i++) {\n                _super.prototype.insert.call(this, ds, data.added[i]);\n            }\n        }\n        if (data.changed) {\n            for (i = 0; i < data.changed.length; i++) {\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n            }\n        }\n        if (data.deleted) {\n            for (i = 0; i < data.deleted.length; i++) {\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n            }\n        }\n        return data;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * Also perform the changes in the locally cached data to sync with the remote data.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e.url,\n                key: e.key\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.addParams = function (options) {\n        var urlParams = new UrlAdaptor();\n        urlParams.addParams(options);\n    };\n    return RemoteSaveAdaptor;\n}(JsonAdaptor));\nexport { RemoteSaveAdaptor };\n/**\n * Ajax Adaptor that is extended from URL Adaptor, is used for handle data operations with user defined functions.\n * @hidden\n */\nvar CustomDataAdaptor = /** @class */ (function (_super) {\n    __extends(CustomDataAdaptor, _super);\n    function CustomDataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            getData: new Function(),\n            addRecord: new Function(),\n            updateRecord: new Function(),\n            deleteRecord: new Function(),\n            batchUpdate: new Function()\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    CustomDataAdaptor.prototype.getModuleName = function () {\n        return 'CustomDataAdaptor';\n    };\n    return CustomDataAdaptor;\n}(UrlAdaptor));\nexport { CustomDataAdaptor };\n/**\n * The GraphqlAdaptor that is extended from URL Adaptor, is used for retrieving data from the Graphql server.\n * It interacts with the Graphql server with all the DataManager Queries and performs CRUD operations.\n * @hidden\n */\nvar GraphQLAdaptor = /** @class */ (function (_super) {\n    __extends(GraphQLAdaptor, _super);\n    function GraphQLAdaptor(options) {\n        var _this = _super.call(this) || this;\n        _this.opt = options;\n        _this.schema = _this.opt.response;\n        _this.query = _this.opt.query;\n        _this.getVariables = _this.opt.getVariables ? _this.opt.getVariables : function () { };\n        _this.getQuery = function () { return _this.query; };\n        return _this;\n    }\n    GraphQLAdaptor.prototype.getModuleName = function () {\n        return 'GraphQLAdaptor';\n    };\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     */\n    GraphQLAdaptor.prototype.processQuery = function (datamanager, query) {\n        var urlQuery = _super.prototype.processQuery.apply(this, arguments);\n        var dm = JSON.parse(urlQuery.data);\n        // constructing GraphQL parameters\n        var keys = ['skip', 'take', 'sorted', 'table', 'select', 'where',\n            'search', 'requiresCounts', 'aggregates', 'params'];\n        var temp = {};\n        var str = 'searchwhereparams';\n        keys.filter(function (e) {\n            temp[e] = str.indexOf(e) > -1 ? JSON.stringify(dm[e]) : dm[e];\n        });\n        var vars = this.getVariables() || {};\n        vars['datamanager'] = temp;\n        var data = JSON.stringify({\n            query: this.getQuery(),\n            variables: vars\n        });\n        urlQuery.data = data;\n        return urlQuery;\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @returns DataResult\n     */\n    GraphQLAdaptor.prototype.processResponse = function (resData, ds, query, xhr, request) {\n        var res = resData;\n        var count;\n        var aggregates;\n        var result = getValue(this.schema.result, res.data);\n        if (this.schema.count) {\n            count = getValue(this.schema.count, res.data);\n        }\n        if (this.schema.aggregates) {\n            aggregates = getValue(this.schema.aggregates, res.data);\n            aggregates = !isNullOrUndefined(aggregates) ? DataUtil.parse.parseJson(aggregates) : aggregates;\n        }\n        var pvt = request.pvtData || {};\n        var args = { result: result, aggregates: aggregates };\n        var data = args;\n        if (pvt && pvt.groups && pvt.groups.length) {\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        return !isNullOrUndefined(count) ? { result: args.result, count: count, aggregates: aggregates } : args.result;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     */\n    GraphQLAdaptor.prototype.insert = function () {\n        var inserted = _super.prototype.insert.apply(this, arguments);\n        return this.generateCrudData(inserted, 'insert');\n    };\n    /**\n     * Prepare and returns request body which is used to update a new record in the table.\n     */\n    GraphQLAdaptor.prototype.update = function () {\n        var inserted = _super.prototype.update.apply(this, arguments);\n        return this.generateCrudData(inserted, 'update');\n    };\n    /**\n     * Prepare and returns request body which is used to remove a new record in the table.\n     */\n    GraphQLAdaptor.prototype.remove = function () {\n        var inserted = _super.prototype.remove.apply(this, arguments);\n        return this.generateCrudData(inserted, 'remove');\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     * @param  {Query} query\n     * @param  {Object} original\n     */\n    GraphQLAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var batch = _super.prototype.batchRequest.apply(this, arguments);\n        var bData = JSON.parse(batch.data);\n        bData.key = e.key;\n        batch.data = JSON.stringify(bData);\n        return this.generateCrudData(batch, 'batch');\n    };\n    GraphQLAdaptor.prototype.generateCrudData = function (crudData, action) {\n        var parsed = JSON.parse(crudData.data);\n        crudData.data = JSON.stringify({\n            query: this.opt.getMutation(action),\n            variables: parsed\n        });\n        return crudData;\n    };\n    return GraphQLAdaptor;\n}(UrlAdaptor));\nexport { GraphQLAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\nvar CacheAdaptor = /** @class */ (function (_super) {\n    __extends(CacheAdaptor, _super);\n    /**\n     * Constructor for CacheAdaptor class.\n     * @param  {CacheAdaptor} adaptor?\n     * @param  {number} timeStamp?\n     * @param  {number} pageSize?\n     * @hidden\n     */\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\n        var _this = _super.call(this) || this;\n        _this.isCrudAction = false;\n        _this.isInsertAction = false;\n        if (!isNullOrUndefined(adaptor)) {\n            _this.cacheAdaptor = adaptor;\n        }\n        _this.pageSize = pageSize;\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\n        var obj = { keys: [], results: [] };\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n        var guid = _this.guidId;\n        if (!isNullOrUndefined(timeStamp)) {\n            setInterval(function () {\n                var data;\n                data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n                var forDel = [];\n                for (var i = 0; i < data.results.length; i++) {\n                    var currentTime = +new Date();\n                    var requestTime = +new Date(data.results[i].timeStamp);\n                    data.results[i].timeStamp = currentTime - requestTime;\n                    if (currentTime - requestTime > timeStamp) {\n                        forDel.push(i);\n                    }\n                }\n                for (var i = 0; i < forDel.length; i++) {\n                    data.results.splice(forDel[i], 1);\n                    data.keys.splice(forDel[i], 1);\n                }\n                window.localStorage.removeItem(guid);\n                window.localStorage.setItem(guid, JSON.stringify(data));\n            }, timeStamp);\n        }\n        return _this;\n    }\n    /**\n     * It will generate the key based on the URL when we send a request to server.\n     * @param  {string} url\n     * @param  {Query} query?\n     * @hidden\n     */\n    CacheAdaptor.prototype.generateKey = function (url, query) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var key = url;\n        var page = 'onPage';\n        if (page in singles) {\n            key += singles[page].pageIndex;\n        }\n        queries.sorts.forEach(function (obj) {\n            key += obj.e.direction + obj.e.fieldName;\n        });\n        queries.groups.forEach(function (obj) {\n            key += obj.e.fieldName;\n        });\n        queries.searches.forEach(function (obj) {\n            key += obj.e.searchKey;\n        });\n        for (var filter = 0; filter < queries.filters.length; filter++) {\n            var currentFilter = queries.filters[filter];\n            if (currentFilter.e.isComplex) {\n                var newQuery = query.clone();\n                newQuery.queries = [];\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n                }\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\n            }\n            else {\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n            }\n        }\n        return key;\n    };\n    /**\n     * Process the query to generate request body.\n     * If the data is already cached, it will return the cached data.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     * @param  {Object[]} hierarchyFilters?\n     */\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var key = this.generateKey(dm.dataSource.url, query);\n        var cachedItems;\n        cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\n            return data;\n        }\n        this.isCrudAction = null;\n        this.isInsertAction = null;\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     */\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n        }\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n        var obj = {};\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var index = obj.keys.indexOf(key);\n        if (index !== -1) {\n            obj.results.splice(index, 1);\n            obj.keys.splice(index, 1);\n        }\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n        while (obj.results.length > this.pageSize) {\n            obj.results.splice(0, 1);\n            obj.keys.splice(0, 1);\n        }\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n        return data;\n    };\n    /**\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch)\n            && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n        }\n        if (!dm.dataSource.crossDomain) {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n        }\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.isInsertAction = true;\n        return this.cacheAdaptor.insert(dm, data, tableName);\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\n    };\n    return CacheAdaptor;\n}(UrlAdaptor));\nexport { CacheAdaptor };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}