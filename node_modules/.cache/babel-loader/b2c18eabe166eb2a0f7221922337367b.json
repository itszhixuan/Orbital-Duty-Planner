{"ast":null,"code":"import { L10n, getValue, getDefaultDateObject, cldrData } from '@syncfusion/ej2-base';\nvar ARROWLEFT = 'ArrowLeft';\nvar ARROWRIGHT = 'ArrowRight';\nvar ARROWUP = 'ArrowUp';\nvar ARROWDOWN = 'ArrowDown';\nvar TAB = 'Tab';\nvar SHIFTTAB = 'shiftTab';\nvar END = 'End';\nvar HOME = 'Home';\n\nvar MaskedDateTime =\n/** @class */\nfunction () {\n  function MaskedDateTime(parent) {\n    this.mask = '';\n    this.defaultConstant = {\n      day: 'day',\n      month: 'month',\n      year: 'year',\n      hour: 'hour',\n      minute: 'minute',\n      second: 'second',\n      dayOfTheWeek: 'day of the week'\n    };\n    this.hiddenMask = '';\n    this.validCharacters = 'dMyhmHfasz';\n    this.isDayPart = false;\n    this.isMonthPart = false;\n    this.isYearPart = false;\n    this.isHourPart = false;\n    this.isMinutePart = false;\n    this.isSecondsPart = false;\n    this.isMilliSecondsPart = false;\n    this.monthCharacter = '';\n    this.periodCharacter = '';\n    this.isHiddenMask = false;\n    this.isComplete = false;\n    this.isNavigate = false;\n    this.navigated = false;\n    this.formatRegex = /EEEEE|EEEE|EEE|EE|E|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|HH|H|hh|h|mm|m|fff|ff|f|aa|a|ss|s|zzzz|zzz|zz|z|'[^']*'|'[^']*'/g;\n    this.isDeletion = false;\n    this.isShortYear = false;\n    this.isDeleteKey = false;\n    this.isDateZero = false;\n    this.isMonthZero = false;\n    this.isYearZero = false;\n    this.dayTypeCount = 0;\n    this.monthTypeCount = 0;\n    this.hourTypeCount = 0;\n    this.minuteTypeCount = 0;\n    this.secondTypeCount = 0;\n    this.parent = parent;\n    this.dateformat = this.getCulturedFormat();\n    this.maskDateValue = this.parent.value != null ? new Date(+this.parent.value) : new Date();\n    this.maskDateValue.setMonth(0);\n    this.maskDateValue.setHours(0);\n    this.maskDateValue.setMinutes(0);\n    this.maskDateValue.setSeconds(0);\n    this.previousDate = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n    this.removeEventListener();\n    this.addEventListener();\n  }\n\n  MaskedDateTime.prototype.getModuleName = function () {\n    return 'MaskedDateTime';\n  };\n\n  MaskedDateTime.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on('createMask', this.createMask, this);\n    this.parent.on('setMaskSelection', this.validCharacterCheck, this);\n    this.parent.on('inputHandler', this.maskInputHandler, this);\n    this.parent.on('keyDownHandler', this.maskKeydownHandler, this);\n    this.parent.on('clearHandler', this.clearHandler, this);\n  };\n\n  MaskedDateTime.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off('createMask', this.createMask);\n    this.parent.off('setMaskSelection', this.validCharacterCheck);\n    this.parent.off('inputHandler', this.maskInputHandler);\n    this.parent.off('keyDownHandler', this.maskKeydownHandler);\n    this.parent.off('clearHandler', this.clearHandler);\n  };\n\n  MaskedDateTime.prototype.createMask = function (dateformat) {\n    this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n    this.dateformat = this.getCulturedFormat();\n    if (this.parent.maskPlaceholder.day) this.defaultConstant['day'] = this.parent.maskPlaceholder.day;\n    if (this.parent.maskPlaceholder.month) this.defaultConstant['month'] = this.parent.maskPlaceholder.month;\n    if (this.parent.maskPlaceholder.year) this.defaultConstant['year'] = this.parent.maskPlaceholder.year;\n    if (this.parent.maskPlaceholder.hour) this.defaultConstant['hour'] = this.parent.maskPlaceholder.hour;\n    if (this.parent.maskPlaceholder.minute) this.defaultConstant['minute'] = this.parent.maskPlaceholder.minute;\n    if (this.parent.maskPlaceholder.second) this.defaultConstant['second'] = this.parent.maskPlaceholder.second;\n    if (this.parent.maskPlaceholder.dayOfTheWeek) this.defaultConstant['dayOfTheWeek'] = this.parent.maskPlaceholder.dayOfTheWeek.toString();\n    this.getCUltureMaskFormat();\n    var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = true;\n    this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = false;\n    this.previousHiddenMask = this.hiddenMask;\n    this.mask = this.previousValue = inputValue;\n    this.parent.maskedDateValue = this.mask;\n\n    if (this.parent.value) {\n      this.setDynamicValue();\n    }\n  };\n\n  MaskedDateTime.prototype.getCUltureMaskFormat = function () {\n    this.l10n = new L10n(this.parent.moduleName, this.defaultConstant, this.parent.locale);\n    this.objectString = Object.keys(this.defaultConstant);\n\n    for (var i = 0; i < this.objectString.length; i++) {\n      this.defaultConstant[this.objectString[i].toString()] = this.l10n.getConstant(this.objectString[i].toString());\n    }\n  };\n\n  MaskedDateTime.prototype.validCharacterCheck = function () {\n    var start = this.parent.inputElement.selectionStart;\n\n    for (var i = start, j = start - 1; i < this.hiddenMask.length || j >= 0; i++, j--) {\n      if (i < this.hiddenMask.length && this.validCharacters.indexOf(this.hiddenMask[i]) !== -1) {\n        this.setSelection(this.hiddenMask[i]);\n        return;\n      }\n\n      if (j >= 0 && this.validCharacters.indexOf(this.hiddenMask[j]) !== -1) {\n        this.setSelection(this.hiddenMask[j]);\n        return;\n      }\n    }\n  };\n\n  MaskedDateTime.prototype.setDynamicValue = function () {\n    this.maskDateValue = new Date(+this.parent.value);\n    this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = true;\n    this.updateValue(); // this.parent.inputElement.selectionStart = start;\n    // this.validCharacterCheck();\n  };\n\n  MaskedDateTime.prototype.setSelection = function (validChar) {\n    var start = -1;\n    var end = 0;\n\n    for (var i = 0; i < this.hiddenMask.length; i++) {\n      if (this.hiddenMask[i] === validChar) {\n        end = i + 1;\n\n        if (start === -1) {\n          start = i;\n        }\n      }\n    }\n\n    if (start < 0) {\n      start = 0;\n    }\n\n    this.parent.inputElement.setSelectionRange(start, end);\n  };\n\n  MaskedDateTime.prototype.maskKeydownHandler = function (args) {\n    this.dayTypeCount = this.monthTypeCount = this.hourTypeCount = this.minuteTypeCount = this.secondTypeCount = 0;\n\n    if (args.e.key === 'Delete') {\n      this.isDeleteKey = true;\n      return;\n    }\n\n    if (!args.e.altKey && !args.e.ctrlKey && (args.e.key === ARROWLEFT || args.e.key === ARROWRIGHT || args.e.key === SHIFTTAB || args.e.key === TAB || args.e.action === SHIFTTAB || args.e.key === END || args.e.key === HOME)) {\n      var start = this.parent.inputElement.selectionStart;\n      var end = this.parent.inputElement.selectionEnd;\n      var length_1 = this.parent.inputElement.value.length;\n\n      if (start == 0 && end == length_1 && (args.e.key === TAB || args.e.action === SHIFTTAB)) {\n        var index = args.e.action === SHIFTTAB ? end : 0;\n        this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = index;\n      }\n\n      if (args.e.key === END || args.e.key === HOME) {\n        var range = args.e.key === END ? length_1 : 0;\n        this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = range;\n      }\n\n      this.navigateSelection(args.e.key === ARROWLEFT || args.e.action === SHIFTTAB || args.e.key === END ? true : false);\n    }\n\n    if (!args.e.altKey && !args.e.ctrlKey && (args.e.key === ARROWUP || args.e.key === ARROWDOWN)) {\n      var start = this.parent.inputElement.selectionStart;\n      this.dateAlteration(args.e.key === ARROWDOWN ? true : false);\n      var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n      this.isHiddenMask = true;\n      this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n      this.isHiddenMask = false;\n      this.previousHiddenMask = this.hiddenMask;\n      this.previousValue = inputValue;\n      this.parent.inputElement.value = inputValue;\n      this.parent.inputElement.selectionStart = start;\n      this.validCharacterCheck();\n    }\n  };\n\n  MaskedDateTime.prototype.isPersist = function () {\n    var isPersist = this.parent.isFocused || this.navigated;\n    return isPersist;\n  };\n\n  MaskedDateTime.prototype.differenceCheck = function () {\n    var start = this.parent.inputElement.selectionStart;\n    var inputValue = this.parent.inputElement.value;\n    var previousVal = this.previousValue.substring(0, start + this.previousValue.length - inputValue.length);\n    var newVal = inputValue.substring(0, start);\n    var newDateValue = new Date(+this.maskDateValue);\n    var maxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n\n    if (previousVal.indexOf(newVal) === 0 && (newVal.length === 0 || this.previousHiddenMask[newVal.length - 1] !== this.previousHiddenMask[newVal.length])) {\n      for (var i = newVal.length; i < previousVal.length; i++) {\n        if (this.previousHiddenMask[i] !== '' && this.validCharacters.indexOf(this.previousHiddenMask[i]) >= 0) {\n          this.isDeletion = this.handleDeletion(this.previousHiddenMask[i], false);\n        }\n      }\n\n      if (this.isDeletion) {\n        return;\n      }\n    }\n\n    switch (this.previousHiddenMask[start - 1]) {\n      case 'd':\n        var date = (this.isDayPart && newDateValue.getDate().toString().length < 2 && !this.isPersist() ? newDateValue.getDate() * 10 : 0) + parseInt(newVal[start - 1], 10);\n        this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n        this.navigated = this.navigated ? false : this.navigated;\n        this.isDateZero = newVal[start - 1] == '0';\n\n        if (isNaN(date)) {\n          return;\n        }\n\n        for (var i = 0; date > maxDate; i++) {\n          date = parseInt(date.toString().slice(1), 10);\n        }\n\n        if (date >= 1) {\n          newDateValue.setDate(date);\n          this.isNavigate = date.toString().length === 2;\n          this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n\n          if (newDateValue.getMonth() !== this.maskDateValue.getMonth()) {\n            return;\n          }\n\n          this.isDayPart = true;\n          this.dayTypeCount = this.dayTypeCount + 1;\n        } else {\n          this.isDayPart = false;\n          this.dayTypeCount = this.isDateZero ? this.dayTypeCount + 1 : this.dayTypeCount;\n        }\n\n        break;\n\n      case 'M':\n        var month = void 0;\n\n        if (newDateValue.getMonth().toString().length < 2 && !this.isPersist()) {\n          month = (this.isMonthPart ? (newDateValue.getMonth() + 1) * 10 : 0) + parseInt(newVal[start - 1], 10);\n        } else {\n          month = parseInt(newVal[start - 1], 10);\n        }\n\n        this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n        this.navigated = this.navigated ? false : this.navigated;\n        this.isMonthZero = newVal[start - 1] == '0';\n\n        if (!isNaN(month)) {\n          while (month > 12) {\n            month = parseInt(month.toString().slice(1), 10);\n          }\n\n          if (month >= 1) {\n            newDateValue.setMonth(month - 1);\n            this.isNavigate = month.toString().length === 2;\n\n            if (newDateValue.getMonth() !== month - 1) {\n              newDateValue.setDate(1);\n              newDateValue.setMonth(month - 1);\n            }\n\n            if (this.isDayPart) {\n              var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n              var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n\n              if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n                newDateValue.setDate(currentMaxDate);\n              }\n            }\n\n            this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n            this.isMonthPart = true;\n            this.monthTypeCount = this.monthTypeCount + 1;\n          } else {\n            newDateValue.setMonth(0);\n            this.isMonthPart = false;\n            this.monthTypeCount = this.isMonthZero ? this.monthTypeCount + 1 : this.monthTypeCount;\n          }\n        } else {\n          // let monthString: string[] = <string[]>(getValue('months[stand-alone].wide', getDefaultDateObject()));\n          var monthString = this.getCulturedValue('months[stand-alone].wide');\n          var monthValue = Object.keys(monthString);\n          this.monthCharacter += newVal[start - 1].toLowerCase();\n\n          while (this.monthCharacter.length > 0) {\n            var i = 1;\n\n            for (var _i = 0, monthValue_1 = monthValue; _i < monthValue_1.length; _i++) {\n              var months = monthValue_1[_i];\n\n              if (monthString[i].toLowerCase().indexOf(this.monthCharacter) === 0) {\n                newDateValue.setMonth(i - 1);\n                this.isMonthPart = true;\n                this.maskDateValue = newDateValue;\n                return;\n              }\n\n              i++;\n            }\n\n            this.monthCharacter = this.monthCharacter.substring(1, this.monthCharacter.length);\n          }\n        }\n\n        break;\n\n      case 'y':\n        var year = (this.isYearPart && newDateValue.getFullYear().toString().length < 4 && !this.isShortYear ? newDateValue.getFullYear() * 10 : 0) + parseInt(newVal[start - 1], 10);\n        this.isShortYear = false;\n        this.isYearZero = newVal[start - 1] == '0';\n\n        if (isNaN(year)) {\n          return;\n        }\n\n        while (year > 9999) {\n          year = parseInt(year.toString().slice(1), 10);\n        }\n\n        if (year < 1) {\n          this.isYearPart = false;\n        } else {\n          newDateValue.setFullYear(year);\n\n          if (year.toString().length === 4) {\n            this.isNavigate = true;\n          }\n\n          this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n          this.isYearPart = true;\n        }\n\n        break;\n\n      case 'h':\n        this.hour = (this.isHourPart && (newDateValue.getHours() % 12 || 12).toString().length < 2 && !this.isPersist() ? (newDateValue.getHours() % 12 || 12) * 10 : 0) + parseInt(newVal[start - 1], 10);\n        this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n        this.navigated = this.navigated ? false : this.navigated;\n\n        if (isNaN(this.hour)) {\n          return;\n        }\n\n        while (this.hour > 12) {\n          this.hour = parseInt(this.hour.toString().slice(1), 10);\n        }\n\n        newDateValue.setHours(Math.floor(newDateValue.getHours() / 12) * 12 + this.hour % 12);\n        this.isNavigate = this.hour.toString().length === 2;\n        this.isHourPart = true;\n        this.hourTypeCount = this.hourTypeCount + 1;\n        break;\n\n      case 'H':\n        this.hour = (this.isHourPart && newDateValue.getHours().toString().length < 2 && !this.isPersist() ? newDateValue.getHours() * 10 : 0) + parseInt(newVal[start - 1], 10);\n        this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n        this.navigated = this.navigated ? false : this.navigated;\n\n        if (isNaN(this.hour)) {\n          return;\n        }\n\n        for (var i = 0; this.hour > 23; i++) {\n          this.hour = parseInt(this.hour.toString().slice(1), 10);\n        }\n\n        newDateValue.setHours(this.hour);\n        this.isNavigate = this.hour.toString().length === 2;\n        this.isHourPart = true;\n        this.hourTypeCount = this.hourTypeCount + 1;\n        break;\n\n      case 'm':\n        var minutes = (this.isMinutePart && newDateValue.getMinutes().toString().length < 2 && !this.isPersist() ? newDateValue.getMinutes() * 10 : 0) + parseInt(newVal[start - 1], 10);\n        this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n        this.navigated = this.navigated ? false : this.navigated;\n\n        if (isNaN(minutes)) {\n          return;\n        }\n\n        for (var i = 0; minutes > 59; i++) {\n          minutes = parseInt(minutes.toString().slice(1), 10);\n        }\n\n        newDateValue.setMinutes(minutes);\n        this.isNavigate = minutes.toString().length === 2;\n        this.isMinutePart = true;\n        this.minuteTypeCount = this.minuteTypeCount + 1;\n        break;\n\n      case 's':\n        var seconds = (this.isSecondsPart && newDateValue.getSeconds().toString().length < 2 && !this.isPersist() ? newDateValue.getSeconds() * 10 : 0) + parseInt(newVal[start - 1], 10);\n        this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n        this.navigated = this.navigated ? false : this.navigated;\n\n        if (isNaN(seconds)) {\n          return;\n        }\n\n        for (var i = 0; seconds > 59; i++) {\n          seconds = parseInt(seconds.toString().slice(1), 10);\n        }\n\n        newDateValue.setSeconds(seconds);\n        this.isNavigate = seconds.toString().length === 2;\n        this.isSecondsPart = true;\n        this.secondTypeCount = this.secondTypeCount + 1;\n        break;\n\n      case 'a':\n        this.periodCharacter += newVal[start - 1].toLowerCase(); // let periodString: string[] = <string[]>(getValue('dayPeriods.format.wide', getDefaultDateObject()));;\n\n        var periodString = this.getCulturedValue('dayPeriods.format.wide');\n        var periodkeys = Object.keys(periodString); //periodString[periodkeys[0]] : periodString[periodkeys[1]] : periodString[periodkeys[0]];\n\n        for (var i = 0; this.periodCharacter.length > 0; i++) {\n          if (periodString[periodkeys[0]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() >= 12 || periodString[periodkeys[1]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() < 12) {\n            newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n            this.maskDateValue = newDateValue;\n          }\n\n          this.periodCharacter = this.periodCharacter.substring(1, this.periodCharacter.length); // Object.values()\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    this.maskDateValue = newDateValue;\n  };\n\n  MaskedDateTime.prototype.formatCheck = function () {\n    var proxy = this;\n\n    function formatValueSpecifier(formattext) {\n      var isSymbol;\n      var result;\n      var daysAbbreviated = proxy.getCulturedValue('days[stand-alone].abbreviated');\n      var dayKeyAbbreviated = Object.keys(daysAbbreviated);\n      var daysWide = proxy.getCulturedValue('days[stand-alone].wide');\n      var dayKeyWide = Object.keys(daysWide);\n      var daysNarrow = proxy.getCulturedValue('days[stand-alone].narrow');\n      var dayKeyNarrow = Object.keys(daysNarrow);\n      var monthAbbreviated = proxy.getCulturedValue('months[stand-alone].abbreviated');\n      var monthWide = proxy.getCulturedValue('months[stand-alone].wide');\n      var periodString = proxy.getCulturedValue('dayPeriods.format.wide');\n      var periodkeys = Object.keys(periodString);\n      var milliseconds;\n      var dateOptions;\n\n      switch (formattext) {\n        case 'ddd':\n        case 'dddd':\n        case 'd':\n          result = proxy.isDayPart ? proxy.maskDateValue.getDate().toString() : proxy.defaultConstant['day'].toString();\n          result = proxy.zeroCheck(proxy.isDateZero, proxy.isDayPart, result);\n\n          if (proxy.dayTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.dayTypeCount = 0;\n          }\n\n          break;\n\n        case 'dd':\n          result = proxy.isDayPart ? proxy.roundOff(proxy.maskDateValue.getDate(), 2) : proxy.defaultConstant['day'].toString();\n          result = proxy.zeroCheck(proxy.isDateZero, proxy.isDayPart, result);\n\n          if (proxy.dayTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.dayTypeCount = 0;\n          }\n\n          break;\n\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysAbbreviated[dayKeyAbbreviated[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n          break;\n\n        case 'EEEE':\n          result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysWide[dayKeyWide[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n          break;\n\n        case 'EEEEE':\n          result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysNarrow[dayKeyNarrow[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n          break;\n\n        case 'M':\n          result = proxy.isMonthPart ? (proxy.maskDateValue.getMonth() + 1).toString() : proxy.defaultConstant['month'].toString();\n          result = proxy.zeroCheck(proxy.isMonthZero, proxy.isMonthPart, result);\n\n          if (proxy.monthTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.monthTypeCount = 0;\n          }\n\n          break;\n\n        case 'MM':\n          result = proxy.isMonthPart ? proxy.roundOff(proxy.maskDateValue.getMonth() + 1, 2) : proxy.defaultConstant['month'].toString();\n          result = proxy.zeroCheck(proxy.isMonthZero, proxy.isMonthPart, result);\n\n          if (proxy.monthTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.monthTypeCount = 0;\n          }\n\n          break;\n\n        case 'MMM':\n          result = proxy.isMonthPart ? monthAbbreviated[proxy.maskDateValue.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n          break;\n\n        case 'MMMM':\n          result = proxy.isMonthPart ? monthWide[proxy.maskDateValue.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n          break;\n\n        case 'yy':\n          result = proxy.isYearPart ? proxy.roundOff(proxy.maskDateValue.getFullYear() % 100, 2) : proxy.defaultConstant['year'].toString();\n          result = proxy.zeroCheck(proxy.isYearZero, proxy.isYearPart, result);\n\n          if (proxy.isYearPart) {\n            proxy.isNavigate = proxy.isShortYear = (proxy.maskDateValue.getFullYear() % 100).toString().length === 2;\n          }\n\n          break;\n\n        case 'y':\n        case 'yyyy':\n          result = proxy.isYearPart ? proxy.roundOff(proxy.maskDateValue.getFullYear(), 4) : proxy.defaultConstant['year'].toString();\n          result = proxy.zeroCheck(proxy.isYearZero, proxy.isYearPart, result);\n          break;\n\n        case 'h':\n          result = proxy.isHourPart ? (proxy.maskDateValue.getHours() % 12 || 12).toString() : proxy.defaultConstant['hour'].toString();\n\n          if (proxy.hourTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.hourTypeCount = 0;\n          }\n\n          break;\n\n        case 'hh':\n          result = proxy.isHourPart ? proxy.roundOff(proxy.maskDateValue.getHours() % 12 || 12, 2) : proxy.defaultConstant['hour'].toString();\n\n          if (proxy.hourTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.hourTypeCount = 0;\n          }\n\n          break;\n\n        case 'H':\n          result = proxy.isHourPart ? proxy.maskDateValue.getHours().toString() : proxy.defaultConstant['hour'].toString();\n\n          if (proxy.hourTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.hourTypeCount = 0;\n          }\n\n          break;\n\n        case 'HH':\n          result = proxy.isHourPart ? proxy.roundOff(proxy.maskDateValue.getHours(), 2) : proxy.defaultConstant['hour'].toString();\n\n          if (proxy.hourTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.hourTypeCount = 0;\n          }\n\n          break;\n\n        case 'm':\n          result = proxy.isMinutePart ? proxy.maskDateValue.getMinutes().toString() : proxy.defaultConstant['minute'].toString();\n\n          if (proxy.minuteTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.minuteTypeCount = 0;\n          }\n\n          break;\n\n        case 'mm':\n          result = proxy.isMinutePart ? proxy.roundOff(proxy.maskDateValue.getMinutes(), 2) : proxy.defaultConstant['minute'].toString();\n\n          if (proxy.minuteTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.minuteTypeCount = 0;\n          }\n\n          break;\n\n        case 's':\n          result = proxy.isSecondsPart ? proxy.maskDateValue.getSeconds().toString() : proxy.defaultConstant['second'].toString();\n\n          if (proxy.secondTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.secondTypeCount = 0;\n          }\n\n          break;\n\n        case 'ss':\n          result = proxy.isSecondsPart ? proxy.roundOff(proxy.maskDateValue.getSeconds(), 2) : proxy.defaultConstant['second'].toString();\n\n          if (proxy.secondTypeCount == 2) {\n            proxy.isNavigate = true;\n            proxy.secondTypeCount = 0;\n          }\n\n          break;\n\n        case 'f':\n          result = Math.floor(proxy.maskDateValue.getMilliseconds() / 100).toString();\n          break;\n\n        case 'ff':\n          milliseconds = proxy.maskDateValue.getMilliseconds();\n\n          if (proxy.maskDateValue.getMilliseconds() > 99) {\n            milliseconds = Math.floor(proxy.maskDateValue.getMilliseconds() / 10);\n          }\n\n          result = proxy.roundOff(milliseconds, 2);\n          break;\n\n        case 'fff':\n          result = proxy.roundOff(proxy.maskDateValue.getMilliseconds(), 3);\n          break;\n\n        case 'a':\n        case 'aa':\n          result = proxy.maskDateValue.getHours() < 12 ? periodString[periodkeys[0]] : periodString[periodkeys[1]];\n          break;\n\n        case 'z':\n        case 'zz':\n        case 'zzz':\n        case 'zzzz':\n          dateOptions = {\n            format: formattext,\n            type: 'dateTime',\n            skeleton: 'yMd',\n            calendar: proxy.parent.calendarMode\n          };\n          result = proxy.parent.globalize.formatDate(proxy.maskDateValue, dateOptions);\n          break;\n      }\n\n      result = result !== undefined ? result : formattext.slice(1, formattext.length - 1);\n\n      if (proxy.isHiddenMask) {\n        var hiddenChar = '';\n\n        for (var i = 0; i < result.length; i++) {\n          hiddenChar += formattext[0];\n        }\n\n        return hiddenChar;\n      } else {\n        return result;\n      }\n    }\n\n    return formatValueSpecifier;\n  };\n\n  MaskedDateTime.prototype.maskInputHandler = function () {\n    var start = this.parent.inputElement.selectionStart;\n    var selectionChar = this.previousHiddenMask[start - 1];\n    var inputValue;\n    this.differenceCheck();\n    inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = true;\n    this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isDateZero = this.isMonthZero = this.isYearZero = false;\n    this.isHiddenMask = false;\n    this.previousHiddenMask = this.hiddenMask;\n    this.previousValue = inputValue;\n    this.parent.inputElement.value = inputValue;\n    this.parent.inputElement.selectionStart = start;\n    this.validCharacterCheck();\n\n    if ((this.isNavigate || this.isDeletion) && !this.isDeleteKey) {\n      var isbackward = this.isNavigate ? false : true;\n      this.isNavigate = this.isDeletion = false;\n      this.navigateSelection(isbackward);\n    }\n\n    this.isDeleteKey = false; // this.setSelection(selectionChar);\n    // this.navigateSelection(inputValue);\n  };\n\n  MaskedDateTime.prototype.navigateSelection = function (isbackward) {\n    var start = this.parent.inputElement.selectionStart;\n    var end = this.parent.inputElement.selectionEnd;\n    var formatIndex = isbackward ? start - 1 : end + 1;\n    this.navigated = true;\n\n    while (formatIndex < this.hiddenMask.length && formatIndex >= 0) {\n      if (this.validCharacters.indexOf(this.hiddenMask[formatIndex]) >= 0) {\n        this.setSelection(this.hiddenMask[formatIndex]);\n        break;\n      }\n\n      formatIndex = formatIndex + (isbackward ? -1 : 1);\n    }\n  };\n\n  MaskedDateTime.prototype.roundOff = function (val, count) {\n    var valueText = val.toString();\n    var length = count - valueText.length;\n    var result = '';\n\n    for (var i = 0; i < length; i++) {\n      result += '0';\n    }\n\n    return result + valueText;\n  };\n\n  MaskedDateTime.prototype.zeroCheck = function (isZero, isDayPart, resultValue) {\n    var result = resultValue;\n\n    if (isZero && !isDayPart) {\n      result = '0';\n    }\n\n    return result;\n  };\n\n  MaskedDateTime.prototype.handleDeletion = function (format, isSegment) {\n    switch (format) {\n      case 'd':\n        this.isDayPart = isSegment;\n        break;\n\n      case 'M':\n        this.isMonthPart = isSegment;\n\n        if (!isSegment) {\n          this.maskDateValue.setMonth(0);\n          this.monthCharacter = '';\n        }\n\n        break;\n\n      case 'y':\n        this.isYearPart = isSegment;\n        break;\n\n      case 'H':\n      case 'h':\n        this.isHourPart = isSegment;\n\n        if (!isSegment) {\n          this.periodCharacter = '';\n        }\n\n        break;\n\n      case 'm':\n        this.isMinutePart = isSegment;\n        break;\n\n      case 's':\n        this.isSecondsPart = isSegment;\n        break;\n\n      default:\n        return false;\n    }\n\n    return true;\n  };\n\n  MaskedDateTime.prototype.dateAlteration = function (isDecrement) {\n    var start = this.parent.inputElement.selectionStart;\n    var formatText = '';\n\n    if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n      formatText = this.hiddenMask[start];\n    } else {\n      return;\n    }\n\n    var newDateValue = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n    this.previousDate = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n    var incrementValue = isDecrement ? -1 : 1;\n\n    switch (formatText) {\n      case 'd':\n        newDateValue.setDate(newDateValue.getDate() + incrementValue);\n        break;\n\n      case 'M':\n        var newMonth = newDateValue.getMonth() + incrementValue;\n        newDateValue.setDate(1);\n        newDateValue.setMonth(newMonth);\n\n        if (this.isDayPart) {\n          var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n          var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n\n          if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n            newDateValue.setDate(currentMaxDate);\n          } else {\n            newDateValue.setDate(this.previousDate.getDate());\n          }\n        } else {\n          newDateValue.setDate(this.previousDate.getDate());\n        }\n\n        this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n        break;\n\n      case 'y':\n        newDateValue.setFullYear(newDateValue.getFullYear() + incrementValue);\n        break;\n\n      case 'H':\n      case 'h':\n        newDateValue.setHours(newDateValue.getHours() + incrementValue);\n        break;\n\n      case 'm':\n        newDateValue.setMinutes(newDateValue.getMinutes() + incrementValue);\n        break;\n\n      case 's':\n        newDateValue.setSeconds(newDateValue.getSeconds() + incrementValue);\n        break;\n\n      case 'a':\n        newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n        break;\n\n      default:\n        break;\n    }\n\n    this.maskDateValue = newDateValue.getFullYear() > 0 ? newDateValue : this.maskDateValue;\n\n    if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n      this.handleDeletion(this.hiddenMask[start], true);\n    }\n  };\n\n  MaskedDateTime.prototype.getCulturedValue = function (format) {\n    var locale = this.parent.locale;\n    var result;\n\n    if (locale === 'en' || locale === 'en-US') {\n      result = getValue(format, getDefaultDateObject());\n    } else {\n      result = getValue('main.' + '' + locale + ('.dates.calendars.gregorian.' + format), cldrData);\n    }\n\n    return result;\n  };\n\n  MaskedDateTime.prototype.getCulturedFormat = function () {\n    var formatString = this.getCulturedValue('dateTimeFormats[availableFormats].yMd').toString();\n\n    if (this.parent.moduleName == 'datepicker') {\n      formatString = this.getCulturedValue('dateTimeFormats[availableFormats].yMd').toString();\n\n      if (this.parent.format && this.parent.formatString) {\n        formatString = this.parent.formatString;\n      }\n    }\n\n    if (this.parent.moduleName == 'datetimepicker') {\n      formatString = this.getCulturedValue('dateTimeFormats[availableFormats].yMd').toString();\n\n      if (this.parent.dateTimeFormat) {\n        formatString = this.parent.dateTimeFormat;\n      }\n    }\n\n    if (this.parent.moduleName == 'timepicker') {\n      formatString = this.parent.cldrTimeFormat();\n    }\n\n    return formatString;\n  };\n\n  MaskedDateTime.prototype.clearHandler = function () {\n    this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n    this.updateValue();\n  };\n\n  MaskedDateTime.prototype.updateValue = function () {\n    this.monthCharacter = this.periodCharacter = '';\n    var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = true;\n    this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = false;\n    this.previousHiddenMask = this.hiddenMask;\n    this.previousValue = inputValue;\n    this.parent.updateInputValue(inputValue); //this.parent.inputElement.value = inputValue;\n  };\n\n  MaskedDateTime.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n\n  return MaskedDateTime;\n}();\n\nexport { MaskedDateTime };","map":{"version":3,"names":["L10n","getValue","getDefaultDateObject","cldrData","ARROWLEFT","ARROWRIGHT","ARROWUP","ARROWDOWN","TAB","SHIFTTAB","END","HOME","MaskedDateTime","parent","mask","defaultConstant","day","month","year","hour","minute","second","dayOfTheWeek","hiddenMask","validCharacters","isDayPart","isMonthPart","isYearPart","isHourPart","isMinutePart","isSecondsPart","isMilliSecondsPart","monthCharacter","periodCharacter","isHiddenMask","isComplete","isNavigate","navigated","formatRegex","isDeletion","isShortYear","isDeleteKey","isDateZero","isMonthZero","isYearZero","dayTypeCount","monthTypeCount","hourTypeCount","minuteTypeCount","secondTypeCount","dateformat","getCulturedFormat","maskDateValue","value","Date","setMonth","setHours","setMinutes","setSeconds","previousDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","removeEventListener","addEventListener","prototype","getModuleName","isDestroyed","on","createMask","validCharacterCheck","maskInputHandler","maskKeydownHandler","clearHandler","off","maskPlaceholder","toString","getCUltureMaskFormat","inputValue","replace","formatCheck","previousHiddenMask","previousValue","maskedDateValue","setDynamicValue","l10n","moduleName","locale","objectString","Object","keys","i","length","getConstant","start","inputElement","selectionStart","j","indexOf","setSelection","updateValue","validChar","end","setSelectionRange","args","e","key","altKey","ctrlKey","action","selectionEnd","length_1","index","range","navigateSelection","dateAlteration","isPersist","isFocused","differenceCheck","previousVal","substring","newVal","newDateValue","maxDate","handleDeletion","date","parseInt","isNaN","slice","setDate","previousMaxDate","currentMaxDate","monthString","getCulturedValue","monthValue","toLowerCase","_i","monthValue_1","months","setFullYear","Math","floor","minutes","seconds","periodString","periodkeys","proxy","formatValueSpecifier","formattext","isSymbol","result","daysAbbreviated","dayKeyAbbreviated","daysWide","dayKeyWide","daysNarrow","dayKeyNarrow","monthAbbreviated","monthWide","milliseconds","dateOptions","zeroCheck","roundOff","getDay","getMilliseconds","format","type","skeleton","calendar","calendarMode","globalize","formatDate","undefined","hiddenChar","selectionChar","isbackward","formatIndex","val","count","valueText","isZero","resultValue","isSegment","isDecrement","formatText","incrementValue","newMonth","formatString","dateTimeFormat","cldrTimeFormat","updateInputValue","destroy"],"sources":["C:/Users/leezh/Documents/Coding/Orbital Test/Orbital-Duty-Planner/node_modules/@syncfusion/ej2-calendars/src/maskbase/masked-date-time.js"],"sourcesContent":["import { L10n, getValue, getDefaultDateObject, cldrData } from '@syncfusion/ej2-base';\nvar ARROWLEFT = 'ArrowLeft';\nvar ARROWRIGHT = 'ArrowRight';\nvar ARROWUP = 'ArrowUp';\nvar ARROWDOWN = 'ArrowDown';\nvar TAB = 'Tab';\nvar SHIFTTAB = 'shiftTab';\nvar END = 'End';\nvar HOME = 'Home';\nvar MaskedDateTime = /** @class */ (function () {\n    function MaskedDateTime(parent) {\n        this.mask = '';\n        this.defaultConstant = {\n            day: 'day',\n            month: 'month',\n            year: 'year',\n            hour: 'hour',\n            minute: 'minute',\n            second: 'second',\n            dayOfTheWeek: 'day of the week',\n        };\n        this.hiddenMask = '';\n        this.validCharacters = 'dMyhmHfasz';\n        this.isDayPart = false;\n        this.isMonthPart = false;\n        this.isYearPart = false;\n        this.isHourPart = false;\n        this.isMinutePart = false;\n        this.isSecondsPart = false;\n        this.isMilliSecondsPart = false;\n        this.monthCharacter = '';\n        this.periodCharacter = '';\n        this.isHiddenMask = false;\n        this.isComplete = false;\n        this.isNavigate = false;\n        this.navigated = false;\n        this.formatRegex = /EEEEE|EEEE|EEE|EE|E|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|HH|H|hh|h|mm|m|fff|ff|f|aa|a|ss|s|zzzz|zzz|zz|z|'[^']*'|'[^']*'/g;\n        this.isDeletion = false;\n        this.isShortYear = false;\n        this.isDeleteKey = false;\n        this.isDateZero = false;\n        this.isMonthZero = false;\n        this.isYearZero = false;\n        this.dayTypeCount = 0;\n        this.monthTypeCount = 0;\n        this.hourTypeCount = 0;\n        this.minuteTypeCount = 0;\n        this.secondTypeCount = 0;\n        this.parent = parent;\n        this.dateformat = this.getCulturedFormat();\n        this.maskDateValue = this.parent.value != null ? new Date(+this.parent.value) : new Date();\n        this.maskDateValue.setMonth(0);\n        this.maskDateValue.setHours(0);\n        this.maskDateValue.setMinutes(0);\n        this.maskDateValue.setSeconds(0);\n        this.previousDate = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n        this.removeEventListener();\n        this.addEventListener();\n    }\n    MaskedDateTime.prototype.getModuleName = function () {\n        return 'MaskedDateTime';\n    };\n    MaskedDateTime.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('createMask', this.createMask, this);\n        this.parent.on('setMaskSelection', this.validCharacterCheck, this);\n        this.parent.on('inputHandler', this.maskInputHandler, this);\n        this.parent.on('keyDownHandler', this.maskKeydownHandler, this);\n        this.parent.on('clearHandler', this.clearHandler, this);\n    };\n    MaskedDateTime.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('createMask', this.createMask);\n        this.parent.off('setMaskSelection', this.validCharacterCheck);\n        this.parent.off('inputHandler', this.maskInputHandler);\n        this.parent.off('keyDownHandler', this.maskKeydownHandler);\n        this.parent.off('clearHandler', this.clearHandler);\n    };\n    MaskedDateTime.prototype.createMask = function (dateformat) {\n        this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n        this.dateformat = this.getCulturedFormat();\n        if (this.parent.maskPlaceholder.day)\n            this.defaultConstant['day'] = this.parent.maskPlaceholder.day;\n        if (this.parent.maskPlaceholder.month)\n            this.defaultConstant['month'] = this.parent.maskPlaceholder.month;\n        if (this.parent.maskPlaceholder.year)\n            this.defaultConstant['year'] = this.parent.maskPlaceholder.year;\n        if (this.parent.maskPlaceholder.hour)\n            this.defaultConstant['hour'] = this.parent.maskPlaceholder.hour;\n        if (this.parent.maskPlaceholder.minute)\n            this.defaultConstant['minute'] = this.parent.maskPlaceholder.minute;\n        if (this.parent.maskPlaceholder.second)\n            this.defaultConstant['second'] = this.parent.maskPlaceholder.second;\n        if (this.parent.maskPlaceholder.dayOfTheWeek)\n            this.defaultConstant['dayOfTheWeek'] = this.parent.maskPlaceholder.dayOfTheWeek.toString();\n        this.getCUltureMaskFormat();\n        var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = true;\n        this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = false;\n        this.previousHiddenMask = this.hiddenMask;\n        this.mask = this.previousValue = inputValue;\n        this.parent.maskedDateValue = this.mask;\n        if (this.parent.value) {\n            this.setDynamicValue();\n        }\n    };\n    MaskedDateTime.prototype.getCUltureMaskFormat = function () {\n        this.l10n = new L10n(this.parent.moduleName, this.defaultConstant, this.parent.locale);\n        this.objectString = Object.keys(this.defaultConstant);\n        for (var i = 0; i < this.objectString.length; i++) {\n            this.defaultConstant[this.objectString[i].toString()] = this.l10n.getConstant(this.objectString[i].toString());\n        }\n    };\n    MaskedDateTime.prototype.validCharacterCheck = function () {\n        var start = this.parent.inputElement.selectionStart;\n        for (var i = start, j = start - 1; i < this.hiddenMask.length || j >= 0; i++, j--) {\n            if (i < this.hiddenMask.length && this.validCharacters.indexOf(this.hiddenMask[i]) !== -1) {\n                this.setSelection(this.hiddenMask[i]);\n                return;\n            }\n            if (j >= 0 && this.validCharacters.indexOf(this.hiddenMask[j]) !== -1) {\n                this.setSelection(this.hiddenMask[j]);\n                return;\n            }\n        }\n    };\n    MaskedDateTime.prototype.setDynamicValue = function () {\n        this.maskDateValue = new Date(+this.parent.value);\n        this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = true;\n        this.updateValue();\n        // this.parent.inputElement.selectionStart = start;\n        // this.validCharacterCheck();\n    };\n    MaskedDateTime.prototype.setSelection = function (validChar) {\n        var start = -1;\n        var end = 0;\n        for (var i = 0; i < this.hiddenMask.length; i++) {\n            if (this.hiddenMask[i] === validChar) {\n                end = i + 1;\n                if (start === -1) {\n                    start = i;\n                }\n            }\n        }\n        if (start < 0) {\n            start = 0;\n        }\n        this.parent.inputElement.setSelectionRange(start, end);\n    };\n    MaskedDateTime.prototype.maskKeydownHandler = function (args) {\n        this.dayTypeCount = this.monthTypeCount = this.hourTypeCount = this.minuteTypeCount = this.secondTypeCount = 0;\n        if (args.e.key === 'Delete') {\n            this.isDeleteKey = true;\n            return;\n        }\n        if ((!args.e.altKey && !args.e.ctrlKey) && (args.e.key === ARROWLEFT || args.e.key === ARROWRIGHT || args.e.key === SHIFTTAB || args.e.key === TAB || args.e.action === SHIFTTAB ||\n            args.e.key === END || args.e.key === HOME)) {\n            var start = this.parent.inputElement.selectionStart;\n            var end = this.parent.inputElement.selectionEnd;\n            var length_1 = this.parent.inputElement.value.length;\n            if ((start == 0 && end == length_1) && (args.e.key === TAB || args.e.action === SHIFTTAB)) {\n                var index = args.e.action === SHIFTTAB ? end : 0;\n                this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = index;\n            }\n            if (args.e.key === END || args.e.key === HOME) {\n                var range = args.e.key === END ? length_1 : 0;\n                this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = range;\n            }\n            this.navigateSelection(args.e.key === ARROWLEFT || args.e.action === SHIFTTAB || args.e.key === END ? true : false);\n        }\n        if ((!args.e.altKey && !args.e.ctrlKey) && (args.e.key === ARROWUP || args.e.key === ARROWDOWN)) {\n            var start = this.parent.inputElement.selectionStart;\n            this.dateAlteration(args.e.key === ARROWDOWN ? true : false);\n            var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n            this.isHiddenMask = true;\n            this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n            this.isHiddenMask = false;\n            this.previousHiddenMask = this.hiddenMask;\n            this.previousValue = inputValue;\n            this.parent.inputElement.value = inputValue;\n            this.parent.inputElement.selectionStart = start;\n            this.validCharacterCheck();\n        }\n    };\n    MaskedDateTime.prototype.isPersist = function () {\n        var isPersist = this.parent.isFocused || this.navigated;\n        return isPersist;\n    };\n    MaskedDateTime.prototype.differenceCheck = function () {\n        var start = this.parent.inputElement.selectionStart;\n        var inputValue = this.parent.inputElement.value;\n        var previousVal = this.previousValue.substring(0, start + this.previousValue.length - inputValue.length);\n        var newVal = inputValue.substring(0, start);\n        var newDateValue = new Date(+this.maskDateValue);\n        var maxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n        if (previousVal.indexOf(newVal) === 0 && (newVal.length === 0 || this.previousHiddenMask[newVal.length - 1] !== this.previousHiddenMask[newVal.length])) {\n            for (var i = newVal.length; i < previousVal.length; i++) {\n                if (this.previousHiddenMask[i] !== '' && this.validCharacters.indexOf(this.previousHiddenMask[i]) >= 0) {\n                    this.isDeletion = this.handleDeletion(this.previousHiddenMask[i], false);\n                }\n            }\n            if (this.isDeletion) {\n                return;\n            }\n        }\n        switch (this.previousHiddenMask[start - 1]) {\n            case 'd':\n                var date = (this.isDayPart && newDateValue.getDate().toString().length < 2 && !this.isPersist() ? newDateValue.getDate() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n                this.navigated = this.navigated ? false : this.navigated;\n                this.isDateZero = (newVal[start - 1] == '0');\n                if (isNaN(date)) {\n                    return;\n                }\n                for (var i = 0; date > maxDate; i++) {\n                    date = parseInt(date.toString().slice(1), 10);\n                }\n                if (date >= 1) {\n                    newDateValue.setDate(date);\n                    this.isNavigate = date.toString().length === 2;\n                    this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                    if (newDateValue.getMonth() !== this.maskDateValue.getMonth()) {\n                        return;\n                    }\n                    this.isDayPart = true;\n                    this.dayTypeCount = this.dayTypeCount + 1;\n                }\n                else {\n                    this.isDayPart = false;\n                    this.dayTypeCount = this.isDateZero ? this.dayTypeCount + 1 : this.dayTypeCount;\n                }\n                break;\n            case 'M':\n                var month = void 0;\n                if (newDateValue.getMonth().toString().length < 2 && !this.isPersist()) {\n                    month = (this.isMonthPart ? (newDateValue.getMonth() + 1) * 10 : 0) + parseInt(newVal[start - 1], 10);\n                }\n                else {\n                    month = parseInt(newVal[start - 1], 10);\n                }\n                this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n                this.navigated = this.navigated ? false : this.navigated;\n                this.isMonthZero = (newVal[start - 1] == '0');\n                if (!isNaN(month)) {\n                    while (month > 12) {\n                        month = parseInt(month.toString().slice(1), 10);\n                    }\n                    if (month >= 1) {\n                        newDateValue.setMonth(month - 1);\n                        this.isNavigate = month.toString().length === 2;\n                        if (newDateValue.getMonth() !== month - 1) {\n                            newDateValue.setDate(1);\n                            newDateValue.setMonth(month - 1);\n                        }\n                        if (this.isDayPart) {\n                            var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n                            var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n                            if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n                                newDateValue.setDate(currentMaxDate);\n                            }\n                        }\n                        this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                        this.isMonthPart = true;\n                        this.monthTypeCount = this.monthTypeCount + 1;\n                    }\n                    else {\n                        newDateValue.setMonth(0);\n                        this.isMonthPart = false;\n                        this.monthTypeCount = this.isMonthZero ? this.monthTypeCount + 1 : this.monthTypeCount;\n                    }\n                }\n                else { // let monthString: string[] = <string[]>(getValue('months[stand-alone].wide', getDefaultDateObject()));\n                    var monthString = (this.getCulturedValue('months[stand-alone].wide'));\n                    var monthValue = Object.keys(monthString);\n                    this.monthCharacter += newVal[start - 1].toLowerCase();\n                    while (this.monthCharacter.length > 0) {\n                        var i = 1;\n                        for (var _i = 0, monthValue_1 = monthValue; _i < monthValue_1.length; _i++) {\n                            var months = monthValue_1[_i];\n                            if (monthString[i].toLowerCase().indexOf(this.monthCharacter) === 0) {\n                                newDateValue.setMonth(i - 1);\n                                this.isMonthPart = true;\n                                this.maskDateValue = newDateValue;\n                                return;\n                            }\n                            i++;\n                        }\n                        this.monthCharacter = this.monthCharacter.substring(1, this.monthCharacter.length);\n                    }\n                }\n                break;\n            case 'y':\n                var year = (this.isYearPart && (newDateValue.getFullYear().toString().length < 4 && !this.isShortYear) ? newDateValue.getFullYear() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                this.isShortYear = false;\n                this.isYearZero = (newVal[start - 1] == '0');\n                if (isNaN(year)) {\n                    return;\n                }\n                while (year > 9999) {\n                    year = parseInt(year.toString().slice(1), 10);\n                }\n                if (year < 1) {\n                    this.isYearPart = false;\n                }\n                else {\n                    newDateValue.setFullYear(year);\n                    if (year.toString().length === 4) {\n                        this.isNavigate = true;\n                    }\n                    this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                    this.isYearPart = true;\n                }\n                break;\n            case 'h':\n                this.hour = (this.isHourPart && (newDateValue.getHours() % 12 || 12).toString().length < 2 && !this.isPersist() ? (newDateValue.getHours() % 12 || 12) * 10 : 0) + parseInt(newVal[start - 1], 10);\n                this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n                this.navigated = this.navigated ? false : this.navigated;\n                if (isNaN(this.hour)) {\n                    return;\n                }\n                while (this.hour > 12) {\n                    this.hour = parseInt(this.hour.toString().slice(1), 10);\n                }\n                newDateValue.setHours(Math.floor(newDateValue.getHours() / 12) * 12 + (this.hour % 12));\n                this.isNavigate = this.hour.toString().length === 2;\n                this.isHourPart = true;\n                this.hourTypeCount = this.hourTypeCount + 1;\n                break;\n            case 'H':\n                this.hour = (this.isHourPart && newDateValue.getHours().toString().length < 2 && !this.isPersist() ? newDateValue.getHours() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n                this.navigated = this.navigated ? false : this.navigated;\n                if (isNaN(this.hour)) {\n                    return;\n                }\n                for (var i = 0; this.hour > 23; i++) {\n                    this.hour = parseInt(this.hour.toString().slice(1), 10);\n                }\n                newDateValue.setHours(this.hour);\n                this.isNavigate = this.hour.toString().length === 2;\n                this.isHourPart = true;\n                this.hourTypeCount = this.hourTypeCount + 1;\n                break;\n            case 'm':\n                var minutes = (this.isMinutePart && newDateValue.getMinutes().toString().length < 2 && !this.isPersist() ? newDateValue.getMinutes() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n                this.navigated = this.navigated ? false : this.navigated;\n                if (isNaN(minutes)) {\n                    return;\n                }\n                for (var i = 0; minutes > 59; i++) {\n                    minutes = parseInt(minutes.toString().slice(1), 10);\n                }\n                newDateValue.setMinutes(minutes);\n                this.isNavigate = minutes.toString().length === 2;\n                this.isMinutePart = true;\n                this.minuteTypeCount = this.minuteTypeCount + 1;\n                break;\n            case 's':\n                var seconds = (this.isSecondsPart && newDateValue.getSeconds().toString().length < 2 && !this.isPersist() ? newDateValue.getSeconds() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                this.parent.isFocused = this.parent.isFocused ? false : this.parent.isFocused;\n                this.navigated = this.navigated ? false : this.navigated;\n                if (isNaN(seconds)) {\n                    return;\n                }\n                for (var i = 0; seconds > 59; i++) {\n                    seconds = parseInt(seconds.toString().slice(1), 10);\n                }\n                newDateValue.setSeconds(seconds);\n                this.isNavigate = seconds.toString().length === 2;\n                this.isSecondsPart = true;\n                this.secondTypeCount = this.secondTypeCount + 1;\n                break;\n            case 'a':\n                this.periodCharacter += newVal[start - 1].toLowerCase();\n                // let periodString: string[] = <string[]>(getValue('dayPeriods.format.wide', getDefaultDateObject()));;\n                var periodString = (this.getCulturedValue('dayPeriods.format.wide'));\n                var periodkeys = Object.keys(periodString);\n                //periodString[periodkeys[0]] : periodString[periodkeys[1]] : periodString[periodkeys[0]];\n                for (var i = 0; this.periodCharacter.length > 0; i++) {\n                    if ((periodString[periodkeys[0]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() >= 12) || (periodString[periodkeys[1]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() < 12)) {\n                        newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n                        this.maskDateValue = newDateValue;\n                    }\n                    this.periodCharacter = this.periodCharacter.substring(1, this.periodCharacter.length);\n                    // Object.values()\n                }\n                break;\n            default:\n                break;\n        }\n        this.maskDateValue = newDateValue;\n    };\n    MaskedDateTime.prototype.formatCheck = function () {\n        var proxy = this;\n        function formatValueSpecifier(formattext) {\n            var isSymbol;\n            var result;\n            var daysAbbreviated = proxy.getCulturedValue('days[stand-alone].abbreviated');\n            var dayKeyAbbreviated = Object.keys(daysAbbreviated);\n            var daysWide = (proxy.getCulturedValue('days[stand-alone].wide'));\n            var dayKeyWide = Object.keys(daysWide);\n            var daysNarrow = (proxy.getCulturedValue('days[stand-alone].narrow'));\n            var dayKeyNarrow = Object.keys(daysNarrow);\n            var monthAbbreviated = (proxy.getCulturedValue('months[stand-alone].abbreviated'));\n            var monthWide = (proxy.getCulturedValue('months[stand-alone].wide'));\n            var periodString = (proxy.getCulturedValue('dayPeriods.format.wide'));\n            var periodkeys = Object.keys(periodString);\n            var milliseconds;\n            var dateOptions;\n            switch (formattext) {\n                case 'ddd':\n                case 'dddd':\n                case 'd':\n                    result = proxy.isDayPart ? proxy.maskDateValue.getDate().toString() : proxy.defaultConstant['day'].toString();\n                    result = proxy.zeroCheck(proxy.isDateZero, proxy.isDayPart, result);\n                    if (proxy.dayTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.dayTypeCount = 0;\n                    }\n                    break;\n                case 'dd':\n                    result = proxy.isDayPart ? proxy.roundOff(proxy.maskDateValue.getDate(), 2) : proxy.defaultConstant['day'].toString();\n                    result = proxy.zeroCheck(proxy.isDateZero, proxy.isDayPart, result);\n                    if (proxy.dayTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.dayTypeCount = 0;\n                    }\n                    break;\n                case 'E':\n                case 'EE':\n                case 'EEE':\n                    result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysAbbreviated[dayKeyAbbreviated[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n                    break;\n                case 'EEEE':\n                    result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysWide[dayKeyWide[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n                    break;\n                case 'EEEEE':\n                    result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysNarrow[dayKeyNarrow[proxy.maskDateValue.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n                    break;\n                case 'M':\n                    result = proxy.isMonthPart ? (proxy.maskDateValue.getMonth() + 1).toString() : proxy.defaultConstant['month'].toString();\n                    result = proxy.zeroCheck(proxy.isMonthZero, proxy.isMonthPart, result);\n                    if (proxy.monthTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.monthTypeCount = 0;\n                    }\n                    break;\n                case 'MM':\n                    result = proxy.isMonthPart ? proxy.roundOff(proxy.maskDateValue.getMonth() + 1, 2) : proxy.defaultConstant['month'].toString();\n                    result = proxy.zeroCheck(proxy.isMonthZero, proxy.isMonthPart, result);\n                    if (proxy.monthTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.monthTypeCount = 0;\n                    }\n                    break;\n                case 'MMM':\n                    result = proxy.isMonthPart ? monthAbbreviated[proxy.maskDateValue.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n                    break;\n                case 'MMMM':\n                    result = proxy.isMonthPart ? monthWide[proxy.maskDateValue.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n                    break;\n                case 'yy':\n                    result = proxy.isYearPart ? proxy.roundOff(proxy.maskDateValue.getFullYear() % 100, 2) : proxy.defaultConstant['year'].toString();\n                    result = proxy.zeroCheck(proxy.isYearZero, proxy.isYearPart, result);\n                    if (proxy.isYearPart) {\n                        proxy.isNavigate = proxy.isShortYear = (proxy.maskDateValue.getFullYear() % 100).toString().length === 2;\n                    }\n                    break;\n                case 'y':\n                case 'yyyy':\n                    result = proxy.isYearPart ? proxy.roundOff(proxy.maskDateValue.getFullYear(), 4) : proxy.defaultConstant['year'].toString();\n                    result = proxy.zeroCheck(proxy.isYearZero, proxy.isYearPart, result);\n                    break;\n                case 'h':\n                    result = proxy.isHourPart ? (proxy.maskDateValue.getHours() % 12 || 12).toString() : proxy.defaultConstant['hour'].toString();\n                    if (proxy.hourTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.hourTypeCount = 0;\n                    }\n                    break;\n                case 'hh':\n                    result = proxy.isHourPart ? proxy.roundOff(proxy.maskDateValue.getHours() % 12 || 12, 2) : proxy.defaultConstant['hour'].toString();\n                    if (proxy.hourTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.hourTypeCount = 0;\n                    }\n                    break;\n                case 'H':\n                    result = proxy.isHourPart ? proxy.maskDateValue.getHours().toString() : proxy.defaultConstant['hour'].toString();\n                    if (proxy.hourTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.hourTypeCount = 0;\n                    }\n                    break;\n                case 'HH':\n                    result = proxy.isHourPart ? proxy.roundOff(proxy.maskDateValue.getHours(), 2) : proxy.defaultConstant['hour'].toString();\n                    if (proxy.hourTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.hourTypeCount = 0;\n                    }\n                    break;\n                case 'm':\n                    result = proxy.isMinutePart ? proxy.maskDateValue.getMinutes().toString() : proxy.defaultConstant['minute'].toString();\n                    if (proxy.minuteTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.minuteTypeCount = 0;\n                    }\n                    break;\n                case 'mm':\n                    result = proxy.isMinutePart ? proxy.roundOff(proxy.maskDateValue.getMinutes(), 2) : proxy.defaultConstant['minute'].toString();\n                    if (proxy.minuteTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.minuteTypeCount = 0;\n                    }\n                    break;\n                case 's':\n                    result = proxy.isSecondsPart ? proxy.maskDateValue.getSeconds().toString() : proxy.defaultConstant['second'].toString();\n                    if (proxy.secondTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.secondTypeCount = 0;\n                    }\n                    break;\n                case 'ss':\n                    result = proxy.isSecondsPart ? proxy.roundOff(proxy.maskDateValue.getSeconds(), 2) : proxy.defaultConstant['second'].toString();\n                    if (proxy.secondTypeCount == 2) {\n                        proxy.isNavigate = true;\n                        proxy.secondTypeCount = 0;\n                    }\n                    break;\n                case 'f':\n                    result = Math.floor(proxy.maskDateValue.getMilliseconds() / 100).toString();\n                    break;\n                case 'ff':\n                    milliseconds = proxy.maskDateValue.getMilliseconds();\n                    if (proxy.maskDateValue.getMilliseconds() > 99) {\n                        milliseconds = Math.floor(proxy.maskDateValue.getMilliseconds() / 10);\n                    }\n                    result = proxy.roundOff(milliseconds, 2);\n                    break;\n                case 'fff':\n                    result = proxy.roundOff(proxy.maskDateValue.getMilliseconds(), 3);\n                    break;\n                case 'a':\n                case 'aa':\n                    result = proxy.maskDateValue.getHours() < 12 ? periodString[periodkeys[0]] : periodString[periodkeys[1]];\n                    break;\n                case 'z':\n                case 'zz':\n                case 'zzz':\n                case 'zzzz':\n                    dateOptions = {\n                        format: formattext,\n                        type: 'dateTime', skeleton: 'yMd', calendar: proxy.parent.calendarMode\n                    };\n                    result = proxy.parent.globalize.formatDate(proxy.maskDateValue, dateOptions);\n                    break;\n            }\n            result = result !== undefined ? result : formattext.slice(1, formattext.length - 1);\n            if (proxy.isHiddenMask) {\n                var hiddenChar = '';\n                for (var i = 0; i < result.length; i++) {\n                    hiddenChar += formattext[0];\n                }\n                return hiddenChar;\n            }\n            else {\n                return result;\n            }\n        }\n        return formatValueSpecifier;\n    };\n    MaskedDateTime.prototype.maskInputHandler = function () {\n        var start = this.parent.inputElement.selectionStart;\n        var selectionChar = this.previousHiddenMask[start - 1];\n        var inputValue;\n        this.differenceCheck();\n        inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = true;\n        this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isDateZero = this.isMonthZero = this.isYearZero = false;\n        this.isHiddenMask = false;\n        this.previousHiddenMask = this.hiddenMask;\n        this.previousValue = inputValue;\n        this.parent.inputElement.value = inputValue;\n        this.parent.inputElement.selectionStart = start;\n        this.validCharacterCheck();\n        if ((this.isNavigate || this.isDeletion) && !this.isDeleteKey) {\n            var isbackward = this.isNavigate ? false : true;\n            this.isNavigate = this.isDeletion = false;\n            this.navigateSelection(isbackward);\n        }\n        this.isDeleteKey = false;\n        // this.setSelection(selectionChar);\n        // this.navigateSelection(inputValue);\n    };\n    MaskedDateTime.prototype.navigateSelection = function (isbackward) {\n        var start = this.parent.inputElement.selectionStart;\n        var end = this.parent.inputElement.selectionEnd;\n        var formatIndex = isbackward ? start - 1 : end + 1;\n        this.navigated = true;\n        while (formatIndex < this.hiddenMask.length && formatIndex >= 0) {\n            if (this.validCharacters.indexOf(this.hiddenMask[formatIndex]) >= 0) {\n                this.setSelection(this.hiddenMask[formatIndex]);\n                break;\n            }\n            formatIndex = formatIndex + (isbackward ? -1 : 1);\n        }\n    };\n    MaskedDateTime.prototype.roundOff = function (val, count) {\n        var valueText = val.toString();\n        var length = count - valueText.length;\n        var result = '';\n        for (var i = 0; i < length; i++) {\n            result += '0';\n        }\n        return result + valueText;\n    };\n    MaskedDateTime.prototype.zeroCheck = function (isZero, isDayPart, resultValue) {\n        var result = resultValue;\n        if (isZero && !isDayPart) {\n            result = '0';\n        }\n        return result;\n    };\n    MaskedDateTime.prototype.handleDeletion = function (format, isSegment) {\n        switch (format) {\n            case 'd':\n                this.isDayPart = isSegment;\n                break;\n            case 'M':\n                this.isMonthPart = isSegment;\n                if (!isSegment) {\n                    this.maskDateValue.setMonth(0);\n                    this.monthCharacter = '';\n                }\n                break;\n            case 'y':\n                this.isYearPart = isSegment;\n                break;\n            case 'H':\n            case 'h':\n                this.isHourPart = isSegment;\n                if (!isSegment) {\n                    this.periodCharacter = '';\n                }\n                break;\n            case 'm':\n                this.isMinutePart = isSegment;\n                break;\n            case 's':\n                this.isSecondsPart = isSegment;\n                break;\n            default:\n                return false;\n        }\n        return true;\n    };\n    MaskedDateTime.prototype.dateAlteration = function (isDecrement) {\n        var start = this.parent.inputElement.selectionStart;\n        var formatText = '';\n        if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n            formatText = this.hiddenMask[start];\n        }\n        else {\n            return;\n        }\n        var newDateValue = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n        this.previousDate = new Date(this.maskDateValue.getFullYear(), this.maskDateValue.getMonth(), this.maskDateValue.getDate(), this.maskDateValue.getHours(), this.maskDateValue.getMinutes(), this.maskDateValue.getSeconds());\n        var incrementValue = isDecrement ? -1 : 1;\n        switch (formatText) {\n            case 'd':\n                newDateValue.setDate(newDateValue.getDate() + incrementValue);\n                break;\n            case 'M':\n                var newMonth = newDateValue.getMonth() + incrementValue;\n                newDateValue.setDate(1);\n                newDateValue.setMonth(newMonth);\n                if (this.isDayPart) {\n                    var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n                    var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n                    if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n                        newDateValue.setDate(currentMaxDate);\n                    }\n                    else {\n                        newDateValue.setDate(this.previousDate.getDate());\n                    }\n                }\n                else {\n                    newDateValue.setDate(this.previousDate.getDate());\n                }\n                this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                break;\n            case 'y':\n                newDateValue.setFullYear(newDateValue.getFullYear() + incrementValue);\n                break;\n            case 'H':\n            case 'h':\n                newDateValue.setHours(newDateValue.getHours() + incrementValue);\n                break;\n            case 'm':\n                newDateValue.setMinutes(newDateValue.getMinutes() + incrementValue);\n                break;\n            case 's':\n                newDateValue.setSeconds(newDateValue.getSeconds() + incrementValue);\n                break;\n            case 'a':\n                newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n                break;\n            default:\n                break;\n        }\n        this.maskDateValue = newDateValue.getFullYear() > 0 ? newDateValue : this.maskDateValue;\n        if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n            this.handleDeletion(this.hiddenMask[start], true);\n        }\n    };\n    MaskedDateTime.prototype.getCulturedValue = function (format) {\n        var locale = this.parent.locale;\n        var result;\n        if (locale === 'en' || locale === 'en-US') {\n            result = getValue(format, getDefaultDateObject());\n        }\n        else {\n            result = getValue('main.' + '' + locale + ('.dates.calendars.gregorian.' + format), cldrData);\n        }\n        return result;\n    };\n    MaskedDateTime.prototype.getCulturedFormat = function () {\n        var formatString = (this.getCulturedValue('dateTimeFormats[availableFormats].yMd')).toString();\n        if (this.parent.moduleName == 'datepicker') {\n            formatString = (this.getCulturedValue('dateTimeFormats[availableFormats].yMd')).toString();\n            if (this.parent.format && this.parent.formatString) {\n                formatString = this.parent.formatString;\n            }\n        }\n        if (this.parent.moduleName == 'datetimepicker') {\n            formatString = (this.getCulturedValue('dateTimeFormats[availableFormats].yMd')).toString();\n            if (this.parent.dateTimeFormat) {\n                formatString = this.parent.dateTimeFormat;\n            }\n        }\n        if (this.parent.moduleName == 'timepicker') {\n            formatString = this.parent.cldrTimeFormat();\n        }\n        return formatString;\n    };\n    MaskedDateTime.prototype.clearHandler = function () {\n        this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n        this.updateValue();\n    };\n    MaskedDateTime.prototype.updateValue = function () {\n        this.monthCharacter = this.periodCharacter = '';\n        var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = true;\n        this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = false;\n        this.previousHiddenMask = this.hiddenMask;\n        this.previousValue = inputValue;\n        this.parent.updateInputValue(inputValue);\n        //this.parent.inputElement.value = inputValue;\n    };\n    MaskedDateTime.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return MaskedDateTime;\n}());\nexport { MaskedDateTime };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}