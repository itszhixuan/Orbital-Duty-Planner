{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leezh\\\\Documents\\\\Coding\\\\Orbital Test\\\\Orbital-Duty-Planner\\\\src\\\\components\\\\Member.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Calendar } from \"react-calendar\";\nimport Calendar_display from \"./calendar_display\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Member(props) {\n  _s();\n\n  const currentEvent = props.currentEvent;\n  const setActive = props.setActive;\n  const points = props.points;\n  const setPoints = props.setPoints;\n  const weekendPoints = props.weekendPoints;\n  const weekdayPoints = props.weekdayPoints;\n  const minDate = new Date(currentEvent.startDate);\n  const maxDate = new Date(currentEvent.endDate);\n\n  function handleClick(value) {\n    const dayOfWeek = value.getDay();\n\n    if (dayOfWeek === 0 || dayOfWeek === 6) {\n      setPoints(points + weekendPoints);\n    } else {\n      setPoints(points + weekdayPoints);\n    }\n  }\n\n  useEffect(() => console.log(\"Current points = \" + points));\n  const [date, setDate] = useState(new Date());\n  const [showTime, setShowTime] = useState(false);\n  const [multipleLabels, setMultipleLabels] = useState([]);\n  const [multipleInvalid, setMultipleInvalid] = useState([]);\n  const onPageLoadingMultiple = useCallback((event, inst) => {}, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"toppadding\",\n      children: [\" Choose your dates! \", currentEvent.startDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        minDate: minDate,\n        maxDate: maxDate,\n        tileContent: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 32\n        }, this)\n        /*                 onClickDay = {(value, event) => handleClick(value)} */\n        ,\n        onChange: setDate,\n        value: date,\n        onClickDay: () => setShowTime(true),\n        labels: multipleLabels,\n        invalid: multipleInvalid,\n        selectMultiple: true\n        /* onPageLoading={onPageLoadingMultiple} */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActive(\"Profile\"),\n        className: \"learnmore-button\",\n        children: \"Return to profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), date.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Start:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), date[0].toDateString(), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"End:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), date[1].toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Default selected date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), date.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Calendar_display, {\n        showTime: showTime,\n        date: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Member, \"oceVaKaqEUhcKRrk1P+o8IimtSE=\");\n\n_c = Member;\nexport default Member;\n\nvar _c;\n\n$RefreshReg$(_c, \"Member\");","map":{"version":3,"names":["useEffect","useState","Calendar","Calendar_display","Member","props","currentEvent","setActive","points","setPoints","weekendPoints","weekdayPoints","minDate","Date","startDate","maxDate","endDate","handleClick","value","dayOfWeek","getDay","console","log","date","setDate","showTime","setShowTime","multipleLabels","setMultipleLabels","multipleInvalid","setMultipleInvalid","onPageLoadingMultiple","useCallback","event","inst","length","toDateString"],"sources":["C:/Users/leezh/Documents/Coding/Orbital Test/Orbital-Duty-Planner/src/components/Member.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Calendar } from \"react-calendar\";\r\nimport Calendar_display from \"./calendar_display\";\r\n\r\nfunction Member(props) {\r\n    const currentEvent = props.currentEvent;\r\n    const setActive = props.setActive;\r\n    const points = props.points;\r\n    const setPoints = props.setPoints;\r\n    const weekendPoints = props.weekendPoints;\r\n    const weekdayPoints = props.weekdayPoints;\r\n    const minDate = new Date(currentEvent.startDate);\r\n    const maxDate = new Date(currentEvent.endDate);\r\n\r\n    function handleClick(value) {\r\n        const dayOfWeek = value.getDay();\r\n        if (dayOfWeek === 0 || dayOfWeek === 6) {\r\n            setPoints(points + weekendPoints);\r\n        } else {\r\n            setPoints(points + weekdayPoints);\r\n        }\r\n    }\r\n    useEffect(() => console.log(\"Current points = \" + points));\r\n    \r\n    const [date, setDate] = useState(new Date());\r\n    const [showTime, setShowTime] = useState(false);\r\n    const [multipleLabels, setMultipleLabels] = useState([]);\r\n    const [multipleInvalid, setMultipleInvalid] = useState([]);\r\n    const onPageLoadingMultiple = useCallback((event, inst) => {\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"toppadding\"> Choose your dates! {currentEvent.startDate}</h2>\r\n            <body>\r\n                <Calendar\r\n                minDate = {minDate}\r\n                maxDate = {maxDate}\r\n                tileContent = {<p></p>}\r\n/*                 onClickDay = {(value, event) => handleClick(value)} */\r\n                onChange={setDate}\r\n                value={date}\r\n                onClickDay={() => setShowTime(true)}\r\n\r\n                labels={multipleLabels}\r\n                invalid={multipleInvalid}\r\n                selectMultiple={true}\r\n                /* onPageLoading={onPageLoadingMultiple} */\r\n                />\r\n                <button onClick = {() => setActive(\"Profile\")} className='learnmore-button'>Return to profile</button>\r\n{/*                 <div>\r\n                    <Calendar onChange={setDate} value={date} onClickDay={() => setShowTime(true)}/>\r\n                </div> */}\r\n                {date.length > 0 ? (\r\n                <p>\r\n                    <span>Start:</span>\r\n                    {date[0].toDateString()}\r\n                    &nbsp;\r\n                    &nbsp;\r\n                    <span>End:</span>{date[1].toDateString()}\r\n                </p>\r\n                        ) : (\r\n                <p>\r\n                    <span>Default selected date:</span>{date.toDateString()}\r\n                </p> \r\n                        )\r\n                }\r\n                <Calendar_display showTime={showTime} date={date}/>\r\n            </body>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default Member;"],"mappings":"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"},"metadata":{},"sourceType":"module"}