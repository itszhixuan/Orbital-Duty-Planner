{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keydownBehavior = void 0;\n\nvar _utils = require(\"../../utils\");\n/**\r\n * This file should contain behavior for arrow keys as described here:\r\n * https://w3c.github.io/uievents-code/#key-arrowpad-section\r\n */\n\n\nconst keydownBehavior = [{\n  // TODO: implement for contentEditable\n  matches: (keyDef, element) => (keyDef.key === 'ArrowLeft' || keyDef.key === 'ArrowRight') && (0, _utils.isElementType)(element, ['input', 'textarea']),\n  handle: (keyDef, element) => {\n    var _ref;\n\n    const {\n      selectionStart,\n      selectionEnd\n    } = (0, _utils.getSelectionRange)(element);\n    const direction = keyDef.key === 'ArrowLeft' ? -1 : 1;\n    const newPos = (_ref = selectionStart === selectionEnd ? (selectionStart != null ? selectionStart :\n    /* istanbul ignore next */\n    0) + direction : direction < 0 ? selectionStart : selectionEnd) != null ? _ref :\n    /* istanbul ignore next */\n    0;\n    (0, _utils.setSelectionRange)(element, newPos, newPos);\n  }\n}];\nexports.keydownBehavior = keydownBehavior;","map":{"version":3,"names":["Object","defineProperty","exports","value","keydownBehavior","_utils","require","matches","keyDef","element","key","isElementType","handle","_ref","selectionStart","selectionEnd","getSelectionRange","direction","newPos","setSelectionRange"],"sources":["C:/Users/leezh/Documents/Coding/Orbital Test/Orbital-Duty-Planner/node_modules/@testing-library/user-event/dist/keyboard/plugins/arrow.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.keydownBehavior = void 0;\r\n\r\nvar _utils = require(\"../../utils\");\r\n\r\n/**\r\n * This file should contain behavior for arrow keys as described here:\r\n * https://w3c.github.io/uievents-code/#key-arrowpad-section\r\n */\r\nconst keydownBehavior = [{\r\n  // TODO: implement for contentEditable\r\n  matches: (keyDef, element) => (keyDef.key === 'ArrowLeft' || keyDef.key === 'ArrowRight') && (0, _utils.isElementType)(element, ['input', 'textarea']),\r\n  handle: (keyDef, element) => {\r\n    var _ref;\r\n\r\n    const {\r\n      selectionStart,\r\n      selectionEnd\r\n    } = (0, _utils.getSelectionRange)(element);\r\n    const direction = keyDef.key === 'ArrowLeft' ? -1 : 1;\r\n    const newPos = (_ref = selectionStart === selectionEnd ? (selectionStart != null ? selectionStart :\r\n    /* istanbul ignore next */\r\n    0) + direction : direction < 0 ? selectionStart : selectionEnd) != null ? _ref :\r\n    /* istanbul ignore next */\r\n    0;\r\n    (0, _utils.setSelectionRange)(element, newPos, newPos);\r\n  }\r\n}];\r\nexports.keydownBehavior = keydownBehavior;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;AAEA;AACA;AACA;AACA;;;AACA,MAAMF,eAAe,GAAG,CAAC;EACvB;EACAG,OAAO,EAAE,CAACC,MAAD,EAASC,OAAT,KAAqB,CAACD,MAAM,CAACE,GAAP,KAAe,WAAf,IAA8BF,MAAM,CAACE,GAAP,KAAe,YAA9C,KAA+D,CAAC,GAAGL,MAAM,CAACM,aAAX,EAA0BF,OAA1B,EAAmC,CAAC,OAAD,EAAU,UAAV,CAAnC,CAFtE;EAGvBG,MAAM,EAAE,CAACJ,MAAD,EAASC,OAAT,KAAqB;IAC3B,IAAII,IAAJ;;IAEA,MAAM;MACJC,cADI;MAEJC;IAFI,IAGF,CAAC,GAAGV,MAAM,CAACW,iBAAX,EAA8BP,OAA9B,CAHJ;IAIA,MAAMQ,SAAS,GAAGT,MAAM,CAACE,GAAP,KAAe,WAAf,GAA6B,CAAC,CAA9B,GAAkC,CAApD;IACA,MAAMQ,MAAM,GAAG,CAACL,IAAI,GAAGC,cAAc,KAAKC,YAAnB,GAAkC,CAACD,cAAc,IAAI,IAAlB,GAAyBA,cAAzB;IAC1D;IACA,CAFyD,IAEpDG,SAFkB,GAENA,SAAS,GAAG,CAAZ,GAAgBH,cAAhB,GAAiCC,YAFnC,KAEoD,IAFpD,GAE2DF,IAF3D;IAGf;IACA,CAJA;IAKA,CAAC,GAAGR,MAAM,CAACc,iBAAX,EAA8BV,OAA9B,EAAuCS,MAAvC,EAA+CA,MAA/C;EACD;AAjBsB,CAAD,CAAxB;AAmBAhB,OAAO,CAACE,eAAR,GAA0BA,eAA1B"},"metadata":{},"sourceType":"script"}