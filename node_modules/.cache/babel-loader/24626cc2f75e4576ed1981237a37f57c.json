{"ast":null,"code":"import { isNullOrUndefined, getValue, extend, isBlazor } from './util';\n\nvar Observer =\n/** @class */\nfunction () {\n  function Observer(context) {\n    this.ranArray = [];\n    this.boundedEvents = {};\n\n    if (isNullOrUndefined(context)) {\n      return;\n    }\n\n    this.context = context;\n  }\n  /**\n   * To attach handler for given property in current context.\n   *\n   * @param {string} property - specifies the name of the event.\n   * @param {Function} handler - Specifies the handler function to be called while event notified.\n   * @param {Object} context - Specifies the context binded to the handler.\n   * @param {string} id - specifies the random generated id.\n   * @returns {void}\n   */\n\n\n  Observer.prototype.on = function (property, handler, context, id) {\n    if (isNullOrUndefined(handler)) {\n      return;\n    }\n\n    var cntxt = context || this.context;\n\n    if (this.notExist(property)) {\n      this.boundedEvents[property] = [{\n        handler: handler,\n        context: cntxt\n      }];\n      return;\n    }\n\n    if (!isNullOrUndefined(id)) {\n      if (this.ranArray.indexOf(id) === -1) {\n        this.ranArray.push(id);\n        this.boundedEvents[property].push({\n          handler: handler,\n          context: cntxt,\n          id: id\n        });\n      }\n    } else if (!this.isHandlerPresent(this.boundedEvents[property], handler)) {\n      this.boundedEvents[property].push({\n        handler: handler,\n        context: cntxt\n      });\n    }\n  };\n  /**\n   * To remove handlers from a event attached using on() function.\n   *\n   * @param {string} property - specifies the name of the event.\n   * @param {Function} handler - Optional argument specifies the handler function to be called while event notified.\n   * @param {string} id - specifies the random generated id.\n   * @returns {void} ?\n   */\n\n\n  Observer.prototype.off = function (property, handler, id) {\n    if (this.notExist(property)) {\n      return;\n    }\n\n    var curObject = getValue(property, this.boundedEvents);\n\n    if (handler) {\n      for (var i = 0; i < curObject.length; i++) {\n        if (id) {\n          if (curObject[i].id === id) {\n            curObject.splice(i, 1);\n            var indexLocation = this.ranArray.indexOf(id);\n\n            if (indexLocation !== -1) {\n              this.ranArray.splice(indexLocation, 1);\n            }\n\n            break;\n          }\n        } else if (handler === curObject[i].handler) {\n          curObject.splice(i, 1);\n          break;\n        }\n      }\n    } else {\n      delete this.boundedEvents[property];\n    }\n  };\n  /**\n   * To notify the handlers in the specified event.\n   *\n   * @param {string} property - Specifies the event to be notify.\n   * @param {Object} argument - Additional parameters to pass while calling the handler.\n   * @param {Function} successHandler - this function will invoke after event successfully triggered\n   * @param {Function} errorHandler - this function will invoke after event if it was failure to call.\n   * @returns {void} ?\n   */\n\n\n  Observer.prototype.notify = function (property, argument, successHandler, errorHandler) {\n    if (this.notExist(property)) {\n      if (successHandler) {\n        successHandler.call(this, argument);\n      }\n\n      return;\n    }\n\n    if (argument) {\n      argument.name = property;\n    }\n\n    var blazor = 'Blazor';\n    var curObject = getValue(property, this.boundedEvents).slice(0);\n\n    if (window[blazor]) {\n      return this.blazorCallback(curObject, argument, successHandler, errorHandler, 0);\n    } else {\n      for (var _i = 0, curObject_1 = curObject; _i < curObject_1.length; _i++) {\n        var cur = curObject_1[_i];\n        cur.handler.call(cur.context, argument);\n      }\n\n      if (successHandler) {\n        successHandler.call(this, argument);\n      }\n    }\n  };\n\n  Observer.prototype.blazorCallback = function (objs, argument, successHandler, errorHandler, index) {\n    var _this = this;\n\n    var isTrigger = index === objs.length - 1;\n\n    if (index < objs.length) {\n      var obj_1 = objs[index];\n      var promise = obj_1.handler.call(obj_1.context, argument);\n\n      if (promise && typeof promise.then === 'function') {\n        if (!successHandler) {\n          return promise;\n        }\n\n        promise.then(function (data) {\n          data = typeof data === 'string' && _this.isJson(data) ? JSON.parse(data, _this.dateReviver) : data;\n          extend(argument, argument, data, true);\n\n          if (successHandler && isTrigger) {\n            successHandler.call(obj_1.context, argument);\n          } else {\n            return _this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);\n          }\n        }).catch(function (data) {\n          if (errorHandler) {\n            errorHandler.call(obj_1.context, typeof data === 'string' && _this.isJson(data) ? JSON.parse(data, _this.dateReviver) : data);\n          }\n        });\n      } else if (successHandler && isTrigger) {\n        successHandler.call(obj_1.context, argument);\n      } else {\n        return this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);\n      }\n    }\n  }; // eslint-disable-next-line\n\n\n  Observer.prototype.dateReviver = function (key, value) {\n    var dPattern = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/;\n\n    if (isBlazor && typeof value === 'string' && value.match(dPattern) !== null) {\n      return new Date(value);\n    }\n\n    return value;\n  };\n\n  Observer.prototype.isJson = function (value) {\n    try {\n      JSON.parse(value);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * To destroy handlers in the event\n   *\n   * @returns {void} ?\n   */\n\n\n  Observer.prototype.destroy = function () {\n    this.boundedEvents = this.context = undefined;\n  };\n  /**\n   * Returns if the property exists.\n   *\n   * @param {string} prop ?\n   * @returns {boolean} ?\n   */\n\n\n  Observer.prototype.notExist = function (prop) {\n    // eslint-disable-next-line\n    return this.boundedEvents.hasOwnProperty(prop) === false || this.boundedEvents[prop].length <= 0;\n  };\n  /**\n   * Returns if the handler is present.\n   *\n   * @param {BoundOptions[]} boundedEvents ?\n   * @param {Function} handler ?\n   * @returns {boolean} ?\n   */\n\n\n  Observer.prototype.isHandlerPresent = function (boundedEvents, handler) {\n    for (var _i = 0, boundedEvents_1 = boundedEvents; _i < boundedEvents_1.length; _i++) {\n      var cur = boundedEvents_1[_i];\n\n      if (cur.handler === handler) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  return Observer;\n}();\n\nexport { Observer };","map":{"version":3,"names":["isNullOrUndefined","getValue","extend","isBlazor","Observer","context","ranArray","boundedEvents","prototype","on","property","handler","id","cntxt","notExist","indexOf","push","isHandlerPresent","off","curObject","i","length","splice","indexLocation","notify","argument","successHandler","errorHandler","call","name","blazor","slice","window","blazorCallback","_i","curObject_1","cur","objs","index","_this","isTrigger","obj_1","promise","then","data","isJson","JSON","parse","dateReviver","catch","key","value","dPattern","match","Date","e","destroy","undefined","prop","hasOwnProperty","boundedEvents_1"],"sources":["C:/Users/leezh/Documents/Coding/Orbital Test/Orbital-Duty-Planner/node_modules/@syncfusion/ej2-base/src/observer.js"],"sourcesContent":["import { isNullOrUndefined, getValue, extend, isBlazor } from './util';\nvar Observer = /** @class */ (function () {\n    function Observer(context) {\n        this.ranArray = [];\n        this.boundedEvents = {};\n        if (isNullOrUndefined(context)) {\n            return;\n        }\n        this.context = context;\n    }\n    /**\n     * To attach handler for given property in current context.\n     *\n     * @param {string} property - specifies the name of the event.\n     * @param {Function} handler - Specifies the handler function to be called while event notified.\n     * @param {Object} context - Specifies the context binded to the handler.\n     * @param {string} id - specifies the random generated id.\n     * @returns {void}\n     */\n    Observer.prototype.on = function (property, handler, context, id) {\n        if (isNullOrUndefined(handler)) {\n            return;\n        }\n        var cntxt = context || this.context;\n        if (this.notExist(property)) {\n            this.boundedEvents[property] = [{ handler: handler, context: cntxt }];\n            return;\n        }\n        if (!isNullOrUndefined(id)) {\n            if (this.ranArray.indexOf(id) === -1) {\n                this.ranArray.push(id);\n                this.boundedEvents[property].push({ handler: handler, context: cntxt, id: id });\n            }\n        }\n        else if (!this.isHandlerPresent(this.boundedEvents[property], handler)) {\n            this.boundedEvents[property].push({ handler: handler, context: cntxt });\n        }\n    };\n    /**\n     * To remove handlers from a event attached using on() function.\n     *\n     * @param {string} property - specifies the name of the event.\n     * @param {Function} handler - Optional argument specifies the handler function to be called while event notified.\n     * @param {string} id - specifies the random generated id.\n     * @returns {void} ?\n     */\n    Observer.prototype.off = function (property, handler, id) {\n        if (this.notExist(property)) {\n            return;\n        }\n        var curObject = getValue(property, this.boundedEvents);\n        if (handler) {\n            for (var i = 0; i < curObject.length; i++) {\n                if (id) {\n                    if (curObject[i].id === id) {\n                        curObject.splice(i, 1);\n                        var indexLocation = this.ranArray.indexOf(id);\n                        if (indexLocation !== -1) {\n                            this.ranArray.splice(indexLocation, 1);\n                        }\n                        break;\n                    }\n                }\n                else if (handler === curObject[i].handler) {\n                    curObject.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        else {\n            delete this.boundedEvents[property];\n        }\n    };\n    /**\n     * To notify the handlers in the specified event.\n     *\n     * @param {string} property - Specifies the event to be notify.\n     * @param {Object} argument - Additional parameters to pass while calling the handler.\n     * @param {Function} successHandler - this function will invoke after event successfully triggered\n     * @param {Function} errorHandler - this function will invoke after event if it was failure to call.\n     * @returns {void} ?\n     */\n    Observer.prototype.notify = function (property, argument, successHandler, errorHandler) {\n        if (this.notExist(property)) {\n            if (successHandler) {\n                successHandler.call(this, argument);\n            }\n            return;\n        }\n        if (argument) {\n            argument.name = property;\n        }\n        var blazor = 'Blazor';\n        var curObject = getValue(property, this.boundedEvents).slice(0);\n        if (window[blazor]) {\n            return this.blazorCallback(curObject, argument, successHandler, errorHandler, 0);\n        }\n        else {\n            for (var _i = 0, curObject_1 = curObject; _i < curObject_1.length; _i++) {\n                var cur = curObject_1[_i];\n                cur.handler.call(cur.context, argument);\n            }\n            if (successHandler) {\n                successHandler.call(this, argument);\n            }\n        }\n    };\n    Observer.prototype.blazorCallback = function (objs, argument, successHandler, errorHandler, index) {\n        var _this = this;\n        var isTrigger = index === objs.length - 1;\n        if (index < objs.length) {\n            var obj_1 = objs[index];\n            var promise = obj_1.handler.call(obj_1.context, argument);\n            if (promise && typeof promise.then === 'function') {\n                if (!successHandler) {\n                    return promise;\n                }\n                promise.then(function (data) {\n                    data = typeof data === 'string' && _this.isJson(data) ? JSON.parse(data, _this.dateReviver) : data;\n                    extend(argument, argument, data, true);\n                    if (successHandler && isTrigger) {\n                        successHandler.call(obj_1.context, argument);\n                    }\n                    else {\n                        return _this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);\n                    }\n                }).catch(function (data) {\n                    if (errorHandler) {\n                        errorHandler.call(obj_1.context, typeof data === 'string' &&\n                            _this.isJson(data) ? JSON.parse(data, _this.dateReviver) : data);\n                    }\n                });\n            }\n            else if (successHandler && isTrigger) {\n                successHandler.call(obj_1.context, argument);\n            }\n            else {\n                return this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);\n            }\n        }\n    };\n    // eslint-disable-next-line\n    Observer.prototype.dateReviver = function (key, value) {\n        var dPattern = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/;\n        if (isBlazor && typeof value === 'string' && value.match(dPattern) !== null) {\n            return (new Date(value));\n        }\n        return (value);\n    };\n    Observer.prototype.isJson = function (value) {\n        try {\n            JSON.parse(value);\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * To destroy handlers in the event\n     *\n     * @returns {void} ?\n     */\n    Observer.prototype.destroy = function () {\n        this.boundedEvents = this.context = undefined;\n    };\n    /**\n     * Returns if the property exists.\n     *\n     * @param {string} prop ?\n     * @returns {boolean} ?\n     */\n    Observer.prototype.notExist = function (prop) {\n        // eslint-disable-next-line\n        return this.boundedEvents.hasOwnProperty(prop) === false || this.boundedEvents[prop].length <= 0;\n    };\n    /**\n     * Returns if the handler is present.\n     *\n     * @param {BoundOptions[]} boundedEvents ?\n     * @param {Function} handler ?\n     * @returns {boolean} ?\n     */\n    Observer.prototype.isHandlerPresent = function (boundedEvents, handler) {\n        for (var _i = 0, boundedEvents_1 = boundedEvents; _i < boundedEvents_1.length; _i++) {\n            var cur = boundedEvents_1[_i];\n            if (cur.handler === handler) {\n                return true;\n            }\n        }\n        return false;\n    };\n    return Observer;\n}());\nexport { Observer };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}