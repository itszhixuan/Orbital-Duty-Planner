{"ast":null,"code":"import { createInstance, isUndefined, merge, extend, getValue } from './util';\n/**\n * Returns the Class Object\n *\n * @param {ClassObject} instance - instance of ClassObject\n * @param {string} curKey - key of the current instance\n * @param {Object} defaultValue - default Value\n * @param {Object[]} type ?\n * @returns {ClassObject} ?\n */\n// eslint-disable-next-line\n\nfunction getObject(instance, curKey, defaultValue, type) {\n  // eslint-disable-next-line\n  if (!instance.properties.hasOwnProperty(curKey) || !(instance.properties[curKey] instanceof type)) {\n    instance.properties[curKey] = createInstance(type, [instance, curKey, defaultValue]);\n  }\n\n  return instance.properties[curKey];\n}\n/**\n * Returns object array\n *\n * @param {ClassObject} instance ?\n * @param {string} curKey ?\n * @param {Object[]} defaultValue ?\n * @param {Object} type ?\n * @param {boolean} isSetter ?\n * @param {boolean} isFactory ?\n * @returns {Object[]} ?\n */\n// eslint-disable-next-line\n\n\nfunction getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {\n  var result = [];\n  var len = defaultValue ? defaultValue.length : 0;\n\n  for (var i = 0; i < len; i++) {\n    var curType = type;\n\n    if (isFactory) {\n      curType = type(defaultValue[i], instance);\n    }\n\n    if (isSetter) {\n      var inst = createInstance(curType, [instance, curKey, {}, true]);\n      inst.setProperties(defaultValue[i], true);\n      result.push(inst);\n    } else {\n      result.push(createInstance(curType, [instance, curKey, defaultValue[i], false]));\n    }\n  }\n\n  return result;\n}\n/**\n * Returns the properties of the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\n\n\nfunction propertyGetter(defaultValue, curKey) {\n  return function () {\n    // eslint-disable-next-line\n    if (!this.properties.hasOwnProperty(curKey)) {\n      this.properties[curKey] = defaultValue;\n    }\n\n    return this.properties[curKey];\n  };\n}\n/**\n * Set the properties for the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\n\n\nfunction propertySetter(defaultValue, curKey) {\n  return function (newValue) {\n    if (this.properties[curKey] !== newValue) {\n      // eslint-disable-next-line\n      var oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n      this.saveChanges(curKey, newValue, oldVal);\n      this.properties[curKey] = newValue;\n    }\n  };\n}\n/**\n * Returns complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\n\n\nfunction complexGetter(defaultValue, curKey, type) {\n  return function () {\n    return getObject(this, curKey, defaultValue, type);\n  };\n}\n/**\n * Sets complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexSetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    getObject(this, curKey, defaultValue, type).setProperties(newValue);\n  };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\n\n\nfunction complexFactoryGetter(defaultValue, curKey, type) {\n  return function () {\n    var curType = type({}); // eslint-disable-next-line\n\n    if (this.properties.hasOwnProperty(curKey)) {\n      return this.properties[curKey];\n    } else {\n      return getObject(this, curKey, defaultValue, curType);\n    }\n  };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexFactorySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    var curType = type(newValue, this);\n    getObject(this, curKey, defaultValue, curType).setProperties(newValue);\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArrayGetter(defaultValue, curKey, type) {\n  return function () {\n    var _this = this; // eslint-disable-next-line\n\n\n    if (!this.properties.hasOwnProperty(curKey)) {\n      var defCollection = getObjectArray(this, curKey, defaultValue, type, false);\n      this.properties[curKey] = defCollection;\n    }\n\n    var ignore = this.controlParent !== undefined && this.controlParent.ignoreCollectionWatch || this.ignoreCollectionWatch; // eslint-disable-next-line\n\n    if (!this.properties[curKey].hasOwnProperty('push') && !ignore) {\n      ['push', 'pop'].forEach(function (extendFunc) {\n        var descriptor = {\n          value: complexArrayDefinedCallback(extendFunc, curKey, type, _this.properties[curKey]).bind(_this),\n          configurable: true\n        };\n        Object.defineProperty(_this.properties[curKey], extendFunc, descriptor);\n      });\n    } // eslint-disable-next-line\n\n\n    if (!this.properties[curKey].hasOwnProperty('isComplexArray')) {\n      Object.defineProperty(this.properties[curKey], 'isComplexArray', {\n        value: true\n      });\n    }\n\n    return this.properties[curKey];\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArraySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    this.isComplexArraySetter = true;\n    var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);\n    var newValCollection = getObjectArray(this, curKey, newValue, type, true);\n    this.isComplexArraySetter = false;\n    this.saveChanges(curKey, newValCollection, oldValueCollection);\n    this.properties[curKey] = newValCollection;\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArrayFactorySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    // eslint-disable-next-line\n    var oldValueCollection = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n    var newValCollection = getObjectArray(this, curKey, newValue, type, true, true);\n    this.saveChanges(curKey, newValCollection, oldValueCollection);\n    this.properties[curKey] = newValCollection;\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArrayFactoryGetter(defaultValue, curKey, type) {\n  return function () {\n    var curType = type({}); // eslint-disable-next-line\n\n    if (!this.properties.hasOwnProperty(curKey)) {\n      var defCollection = getObjectArray(this, curKey, defaultValue, curType, false);\n      this.properties[curKey] = defCollection;\n    }\n\n    return this.properties[curKey];\n  };\n}\n/**\n *\n * @param {string} dFunc ?\n * @param {string} curKey ?\n * @param {Object} type ?\n * @param {Object} prop ?\n * @returns {Object} ?\n */\n\n\nfunction complexArrayDefinedCallback(dFunc, curKey, type, prop) {\n  /* tslint:disable no-function-expression */\n  return function () {\n    var newValue = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      newValue[_i] = arguments[_i];\n    }\n\n    var keyString = this.propName ? this.getParentKey() + '.' + curKey + '-' : curKey + '-';\n\n    switch (dFunc) {\n      case 'push':\n        for (var i = 0; i < newValue.length; i++) {\n          Array.prototype[dFunc].apply(prop, [newValue[i]]);\n          var model_1 = getArrayModel(keyString + (prop.length - 1), newValue[i], !this.controlParent, dFunc);\n          this.serverDataBind(model_1, newValue[i], false, dFunc);\n        }\n\n        break;\n\n      case 'pop':\n        Array.prototype[dFunc].apply(prop); // eslint-disable-next-line\n\n        var model = getArrayModel(keyString + prop.length, null, !this.controlParent, dFunc);\n        this.serverDataBind(model, {\n          ejsAction: 'pop'\n        }, false, dFunc);\n        break;\n    }\n\n    return prop;\n  };\n}\n/**\n *\n * @param {string} keyString ?\n * @param {Object} value ?\n * @param {boolean} isControlParent ?\n * @param {string} arrayFunction ?\n * @returns {Object} ?\n */\n\n\nfunction getArrayModel(keyString, value, isControlParent, arrayFunction) {\n  var modelObject = keyString;\n\n  if (isControlParent) {\n    modelObject = {};\n    modelObject[keyString] = value;\n\n    if (value && typeof value === 'object') {\n      var action = 'ejsAction';\n      modelObject[keyString][action] = arrayFunction;\n    }\n  }\n\n  return modelObject;\n} // eslint-disable-next-line\n\n/**\n * Method used to create property. General syntax below.\n *\n * @param {Object} defaultValue - Specifies the default value of property.\n * @returns {PropertyDecorator} ?\n * ```\n * @Property('TypeScript')\n * propertyName: Type;\n * ```\n * @private\n */\n\n\nexport function Property(defaultValue) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: propertySetter(defaultValue, key),\n      get: propertyGetter(defaultValue, key),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'prop', defaultValue);\n  };\n}\n/**\n * Method used to create complex property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Complex<Type>({},Type)\n * propertyName: Type;\n * ```\n * @private\n */\n\nexport function Complex(defaultValue, type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexSetter(defaultValue, key, type),\n      get: complexGetter(defaultValue, key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'complexProp', defaultValue, type);\n  };\n}\n/**\n * Method used to create complex Factory property. General syntax below.\n *\n * @param  {Function} type - Specifies the class factory type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @ComplexFactory(defaultType, factoryFunction)\n * propertyName: Type1 | Type2;\n * ```\n * @private\n */\n\nexport function ComplexFactory(type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexFactorySetter({}, key, type),\n      get: complexFactoryGetter({}, key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'complexProp', {}, type);\n  };\n}\n/**\n * Method used to create complex array property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\n\nexport function Collection(defaultValue, type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexArraySetter(defaultValue, key, type),\n      get: complexArrayGetter(defaultValue, key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'colProp', defaultValue, type);\n  };\n}\n/**\n * Method used to create complex factory array property. General syntax below.\n *\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyCollectionInfo} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\n\nexport function CollectionFactory(type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexArrayFactorySetter([], key, type),\n      get: complexArrayFactoryGetter([], key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'colProp', {}, type);\n  };\n}\n/**\n * Method used to create event property. General syntax below.\n *\n * @returns {PropertyDecorator} ?\n * ```\n * @Event(()=>{return true;})\n * ```\n * @private\n */\n\nexport function Event() {\n  return function (target, key) {\n    var eventDescriptor = {\n      set: function (newValue) {\n        var oldValue = this.properties[key];\n\n        if (oldValue !== newValue) {\n          var finalContext = getParentContext(this, key);\n\n          if (isUndefined(oldValue) === false) {\n            finalContext.context.removeEventListener(finalContext.prefix, oldValue);\n          }\n\n          finalContext.context.addEventListener(finalContext.prefix, newValue);\n          this.properties[key] = newValue;\n        }\n      },\n      get: propertyGetter(undefined, key),\n      enumerable: true,\n      configurable: true\n    };\n    Object.defineProperty(target, key, eventDescriptor);\n    addPropertyCollection(target, key, 'event');\n  };\n}\n/**\n * NotifyPropertyChanges is triggers the call back when the property has been changed.\n *\n * @param {Function} classConstructor ?\n * @returns {void} ?\n * ```\n *  @NotifyPropertyChanges\n * class DemoClass implements INotifyPropertyChanged {\n *\n *     @Property()\n *     property1: string;\n *\n *     dataBind: () => void;\n *\n *     constructor() { }\n *\n *     onPropertyChanged(newProp: any, oldProp: any) {\n *         // Called when property changed\n *     }\n * }\n * ```\n * @private\n */\n// eslint-disable-next-line\n\nexport function NotifyPropertyChanges(classConstructor) {\n  /** Need to code */\n}\n/**\n * Method  used to create the builderObject for the target component.\n *\n * @param {BuildInfo} target ?\n * @param {string} key ?\n * @param {string} propertyType ?\n * @param {Object} defaultValue ?\n * @param {Function} type ?\n * @returns {void} ?\n * @private\n */\n\nfunction addPropertyCollection(target, key, propertyType, defaultValue, type) {\n  if (isUndefined(target.propList)) {\n    target.propList = {\n      props: [],\n      complexProps: [],\n      colProps: [],\n      events: [],\n      propNames: [],\n      complexPropNames: [],\n      colPropNames: [],\n      eventNames: []\n    };\n  } // eslint-disable-next-line\n\n\n  target.propList[propertyType + 's'].push({\n    propertyName: key,\n    defaultValue: defaultValue,\n    type: type\n  }); // eslint-disable-next-line\n\n  target.propList[propertyType + 'Names'].push(key);\n}\n/**\n * Returns an object containing the builder properties\n *\n * @param {Function} component ?\n * @returns {Object} ?\n * @private\n */\n\n\nfunction getBuilderProperties(component) {\n  if (isUndefined(component.prototype.builderObject)) {\n    component.prototype.builderObject = {\n      properties: {},\n      propCollections: [],\n      add: function () {\n        this.isPropertyArray = true;\n        this.propCollections.push(extend({}, this.properties, {}));\n      }\n    };\n    var rex = /complex/;\n\n    for (var _i = 0, _a = Object.keys(component.prototype.propList); _i < _a.length; _i++) {\n      var key = _a[_i];\n\n      var _loop_1 = function (prop) {\n        if (rex.test(key)) {\n          component.prototype.builderObject[prop.propertyName] = function (value) {\n            var childType = {};\n            merge(childType, getBuilderProperties(prop.type));\n            value(childType);\n            var tempValue;\n\n            if (!childType.isPropertyArray) {\n              tempValue = extend({}, childType.properties, {});\n            } else {\n              tempValue = childType.propCollections;\n            }\n\n            this.properties[prop.propertyName] = tempValue;\n            childType.properties = {};\n            childType.propCollections = [];\n            childType.isPropertyArray = false;\n            return this;\n          };\n        } else {\n          component.prototype.builderObject[prop.propertyName] = function (value) {\n            this.properties[prop.propertyName] = value;\n            return this;\n          };\n        }\n      };\n\n      for (var _b = 0, _c = component.prototype.propList[key]; _b < _c.length; _b++) {\n        var prop = _c[_b];\n\n        _loop_1(prop);\n      }\n    }\n  }\n\n  return component.prototype.builderObject;\n}\n/**\n * Method used to create builder for the components\n *\n * @param {any} component -specifies the target component for which builder to be created.\n * @returns {Object} ?\n * @private\n */\n\n\nexport function CreateBuilder(component) {\n  var builderFunction = function (element) {\n    this.element = element;\n    return this;\n  };\n\n  var instanceFunction = function (element) {\n    // eslint-disable-next-line\n    if (!builderFunction.prototype.hasOwnProperty('create')) {\n      builderFunction.prototype = getBuilderProperties(component);\n\n      builderFunction.prototype.create = function () {\n        var temp = extend({}, {}, this.properties);\n        this.properties = {};\n        return new component(temp, this.element);\n      };\n    }\n\n    return new builderFunction(element);\n  };\n\n  return instanceFunction;\n}\n/**\n * Returns parent options for the object\n *\n * @param {Object} context ?\n * @param {string} prefix ?\n * @returns {ParentOption} ?\n * @private\n */\n\nfunction getParentContext(context, prefix) {\n  // eslint-disable-next-line\n  if (context.hasOwnProperty('parentObj') === false) {\n    return {\n      context: context,\n      prefix: prefix\n    };\n  } else {\n    var curText = getValue('propName', context);\n\n    if (curText) {\n      prefix = curText + '-' + prefix;\n    }\n\n    return getParentContext(getValue('parentObj', context), prefix);\n  }\n}","map":{"version":3,"names":["createInstance","isUndefined","merge","extend","getValue","getObject","instance","curKey","defaultValue","type","properties","hasOwnProperty","getObjectArray","isSetter","isFactory","result","len","length","i","curType","inst","setProperties","push","propertyGetter","propertySetter","newValue","oldVal","saveChanges","complexGetter","complexSetter","complexFactoryGetter","complexFactorySetter","complexArrayGetter","_this","defCollection","ignore","controlParent","undefined","ignoreCollectionWatch","forEach","extendFunc","descriptor","value","complexArrayDefinedCallback","bind","configurable","Object","defineProperty","complexArraySetter","isComplexArraySetter","oldValueCollection","newValCollection","complexArrayFactorySetter","complexArrayFactoryGetter","dFunc","prop","_i","arguments","keyString","propName","getParentKey","Array","prototype","apply","model_1","getArrayModel","serverDataBind","model","ejsAction","isControlParent","arrayFunction","modelObject","action","Property","target","key","propertyDescriptor","set","get","enumerable","addPropertyCollection","Complex","ComplexFactory","Collection","CollectionFactory","Event","eventDescriptor","oldValue","finalContext","getParentContext","context","removeEventListener","prefix","addEventListener","NotifyPropertyChanges","classConstructor","propertyType","propList","props","complexProps","colProps","events","propNames","complexPropNames","colPropNames","eventNames","propertyName","getBuilderProperties","component","builderObject","propCollections","add","isPropertyArray","rex","_a","keys","_loop_1","test","childType","tempValue","_b","_c","CreateBuilder","builderFunction","element","instanceFunction","create","temp","curText"],"sources":["C:/Users/leezh/Documents/Coding/Orbital Test/Orbital-Duty-Planner/node_modules/@syncfusion/ej2-base/src/notify-property-change.js"],"sourcesContent":["import { createInstance, isUndefined, merge, extend, getValue } from './util';\n/**\n * Returns the Class Object\n *\n * @param {ClassObject} instance - instance of ClassObject\n * @param {string} curKey - key of the current instance\n * @param {Object} defaultValue - default Value\n * @param {Object[]} type ?\n * @returns {ClassObject} ?\n */\n// eslint-disable-next-line\nfunction getObject(instance, curKey, defaultValue, type) {\n    // eslint-disable-next-line\n    if (!instance.properties.hasOwnProperty(curKey) || !(instance.properties[curKey] instanceof type)) {\n        instance.properties[curKey] = createInstance(type, [instance, curKey, defaultValue]);\n    }\n    return instance.properties[curKey];\n}\n/**\n * Returns object array\n *\n * @param {ClassObject} instance ?\n * @param {string} curKey ?\n * @param {Object[]} defaultValue ?\n * @param {Object} type ?\n * @param {boolean} isSetter ?\n * @param {boolean} isFactory ?\n * @returns {Object[]} ?\n */\n// eslint-disable-next-line\nfunction getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {\n    var result = [];\n    var len = defaultValue ? defaultValue.length : 0;\n    for (var i = 0; i < len; i++) {\n        var curType = type;\n        if (isFactory) {\n            curType = type(defaultValue[i], instance);\n        }\n        if (isSetter) {\n            var inst = createInstance(curType, [instance, curKey, {}, true]);\n            inst.setProperties(defaultValue[i], true);\n            result.push(inst);\n        }\n        else {\n            result.push(createInstance(curType, [instance, curKey, defaultValue[i], false]));\n        }\n    }\n    return result;\n}\n/**\n * Returns the properties of the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\nfunction propertyGetter(defaultValue, curKey) {\n    return function () {\n        // eslint-disable-next-line\n        if (!this.properties.hasOwnProperty(curKey)) {\n            this.properties[curKey] = defaultValue;\n        }\n        return this.properties[curKey];\n    };\n}\n/**\n * Set the properties for the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\nfunction propertySetter(defaultValue, curKey) {\n    return function (newValue) {\n        if (this.properties[curKey] !== newValue) {\n            // eslint-disable-next-line\n            var oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n            this.saveChanges(curKey, newValue, oldVal);\n            this.properties[curKey] = newValue;\n        }\n    };\n}\n/**\n * Returns complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\nfunction complexGetter(defaultValue, curKey, type) {\n    return function () {\n        return getObject(this, curKey, defaultValue, type);\n    };\n}\n/**\n * Sets complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexSetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        getObject(this, curKey, defaultValue, type).setProperties(newValue);\n    };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\nfunction complexFactoryGetter(defaultValue, curKey, type) {\n    return function () {\n        var curType = type({});\n        // eslint-disable-next-line\n        if (this.properties.hasOwnProperty(curKey)) {\n            return this.properties[curKey];\n        }\n        else {\n            return getObject(this, curKey, defaultValue, curType);\n        }\n    };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexFactorySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        var curType = type(newValue, this);\n        getObject(this, curKey, defaultValue, curType).setProperties(newValue);\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArrayGetter(defaultValue, curKey, type) {\n    return function () {\n        var _this = this;\n        // eslint-disable-next-line\n        if (!this.properties.hasOwnProperty(curKey)) {\n            var defCollection = getObjectArray(this, curKey, defaultValue, type, false);\n            this.properties[curKey] = defCollection;\n        }\n        var ignore = ((this.controlParent !== undefined && this.controlParent.ignoreCollectionWatch)\n            || this.ignoreCollectionWatch);\n        // eslint-disable-next-line\n        if (!this.properties[curKey].hasOwnProperty('push') && !ignore) {\n            ['push', 'pop'].forEach(function (extendFunc) {\n                var descriptor = {\n                    value: complexArrayDefinedCallback(extendFunc, curKey, type, _this.properties[curKey]).bind(_this),\n                    configurable: true\n                };\n                Object.defineProperty(_this.properties[curKey], extendFunc, descriptor);\n            });\n        }\n        // eslint-disable-next-line\n        if (!this.properties[curKey].hasOwnProperty('isComplexArray')) {\n            Object.defineProperty(this.properties[curKey], 'isComplexArray', { value: true });\n        }\n        return this.properties[curKey];\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArraySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        this.isComplexArraySetter = true;\n        var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);\n        var newValCollection = getObjectArray(this, curKey, newValue, type, true);\n        this.isComplexArraySetter = false;\n        this.saveChanges(curKey, newValCollection, oldValueCollection);\n        this.properties[curKey] = newValCollection;\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArrayFactorySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        // eslint-disable-next-line\n        var oldValueCollection = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n        var newValCollection = getObjectArray(this, curKey, newValue, type, true, true);\n        this.saveChanges(curKey, newValCollection, oldValueCollection);\n        this.properties[curKey] = newValCollection;\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\nfunction complexArrayFactoryGetter(defaultValue, curKey, type) {\n    return function () {\n        var curType = type({});\n        // eslint-disable-next-line\n        if (!this.properties.hasOwnProperty(curKey)) {\n            var defCollection = getObjectArray(this, curKey, defaultValue, curType, false);\n            this.properties[curKey] = defCollection;\n        }\n        return this.properties[curKey];\n    };\n}\n/**\n *\n * @param {string} dFunc ?\n * @param {string} curKey ?\n * @param {Object} type ?\n * @param {Object} prop ?\n * @returns {Object} ?\n */\nfunction complexArrayDefinedCallback(dFunc, curKey, type, prop) {\n    /* tslint:disable no-function-expression */\n    return function () {\n        var newValue = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newValue[_i] = arguments[_i];\n        }\n        var keyString = this.propName ? this.getParentKey() + '.' + curKey + '-' : curKey + '-';\n        switch (dFunc) {\n            case 'push':\n                for (var i = 0; i < newValue.length; i++) {\n                    Array.prototype[dFunc].apply(prop, [newValue[i]]);\n                    var model_1 = getArrayModel(keyString + (prop.length - 1), newValue[i], !this.controlParent, dFunc);\n                    this.serverDataBind(model_1, newValue[i], false, dFunc);\n                }\n                break;\n            case 'pop':\n                Array.prototype[dFunc].apply(prop);\n                // eslint-disable-next-line\n                var model = getArrayModel(keyString + prop.length, null, !this.controlParent, dFunc);\n                this.serverDataBind(model, { ejsAction: 'pop' }, false, dFunc);\n                break;\n        }\n        return prop;\n    };\n}\n/**\n *\n * @param {string} keyString ?\n * @param {Object} value ?\n * @param {boolean} isControlParent ?\n * @param {string} arrayFunction ?\n * @returns {Object} ?\n */\nfunction getArrayModel(keyString, value, isControlParent, arrayFunction) {\n    var modelObject = keyString;\n    if (isControlParent) {\n        modelObject = {};\n        modelObject[keyString] = value;\n        if (value && typeof value === 'object') {\n            var action = 'ejsAction';\n            modelObject[keyString][action] = arrayFunction;\n        }\n    }\n    return modelObject;\n}\n// eslint-disable-next-line\n/**\n * Method used to create property. General syntax below.\n *\n * @param {Object} defaultValue - Specifies the default value of property.\n * @returns {PropertyDecorator} ?\n * ```\n * @Property('TypeScript')\n * propertyName: Type;\n * ```\n * @private\n */\nexport function Property(defaultValue) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: propertySetter(defaultValue, key),\n            get: propertyGetter(defaultValue, key),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'prop', defaultValue);\n    };\n}\n/**\n * Method used to create complex property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Complex<Type>({},Type)\n * propertyName: Type;\n * ```\n * @private\n */\nexport function Complex(defaultValue, type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexSetter(defaultValue, key, type),\n            get: complexGetter(defaultValue, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'complexProp', defaultValue, type);\n    };\n}\n/**\n * Method used to create complex Factory property. General syntax below.\n *\n * @param  {Function} type - Specifies the class factory type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @ComplexFactory(defaultType, factoryFunction)\n * propertyName: Type1 | Type2;\n * ```\n * @private\n */\nexport function ComplexFactory(type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexFactorySetter({}, key, type),\n            get: complexFactoryGetter({}, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'complexProp', {}, type);\n    };\n}\n/**\n * Method used to create complex array property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\nexport function Collection(defaultValue, type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexArraySetter(defaultValue, key, type),\n            get: complexArrayGetter(defaultValue, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'colProp', defaultValue, type);\n    };\n}\n/**\n * Method used to create complex factory array property. General syntax below.\n *\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyCollectionInfo} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\nexport function CollectionFactory(type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexArrayFactorySetter([], key, type),\n            get: complexArrayFactoryGetter([], key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'colProp', {}, type);\n    };\n}\n/**\n * Method used to create event property. General syntax below.\n *\n * @returns {PropertyDecorator} ?\n * ```\n * @Event(()=>{return true;})\n * ```\n * @private\n */\nexport function Event() {\n    return function (target, key) {\n        var eventDescriptor = {\n            set: function (newValue) {\n                var oldValue = this.properties[key];\n                if (oldValue !== newValue) {\n                    var finalContext = getParentContext(this, key);\n                    if (isUndefined(oldValue) === false) {\n                        finalContext.context.removeEventListener(finalContext.prefix, oldValue);\n                    }\n                    finalContext.context.addEventListener(finalContext.prefix, newValue);\n                    this.properties[key] = newValue;\n                }\n            },\n            get: propertyGetter(undefined, key),\n            enumerable: true,\n            configurable: true\n        };\n        Object.defineProperty(target, key, eventDescriptor);\n        addPropertyCollection(target, key, 'event');\n    };\n}\n/**\n * NotifyPropertyChanges is triggers the call back when the property has been changed.\n *\n * @param {Function} classConstructor ?\n * @returns {void} ?\n * ```\n *  @NotifyPropertyChanges\n * class DemoClass implements INotifyPropertyChanged {\n *\n *     @Property()\n *     property1: string;\n *\n *     dataBind: () => void;\n *\n *     constructor() { }\n *\n *     onPropertyChanged(newProp: any, oldProp: any) {\n *         // Called when property changed\n *     }\n * }\n * ```\n * @private\n */\n// eslint-disable-next-line\nexport function NotifyPropertyChanges(classConstructor) {\n    /** Need to code */\n}\n/**\n * Method  used to create the builderObject for the target component.\n *\n * @param {BuildInfo} target ?\n * @param {string} key ?\n * @param {string} propertyType ?\n * @param {Object} defaultValue ?\n * @param {Function} type ?\n * @returns {void} ?\n * @private\n */\nfunction addPropertyCollection(target, key, propertyType, defaultValue, type) {\n    if (isUndefined(target.propList)) {\n        target.propList = {\n            props: [],\n            complexProps: [],\n            colProps: [],\n            events: [],\n            propNames: [],\n            complexPropNames: [],\n            colPropNames: [],\n            eventNames: []\n        };\n    }\n    // eslint-disable-next-line\n    target.propList[propertyType + 's'].push({\n        propertyName: key,\n        defaultValue: defaultValue,\n        type: type\n    });\n    // eslint-disable-next-line\n    target.propList[propertyType + 'Names'].push(key);\n}\n/**\n * Returns an object containing the builder properties\n *\n * @param {Function} component ?\n * @returns {Object} ?\n * @private\n */\nfunction getBuilderProperties(component) {\n    if (isUndefined(component.prototype.builderObject)) {\n        component.prototype.builderObject = {\n            properties: {}, propCollections: [], add: function () {\n                this.isPropertyArray = true;\n                this.propCollections.push(extend({}, this.properties, {}));\n            }\n        };\n        var rex = /complex/;\n        for (var _i = 0, _a = Object.keys(component.prototype.propList); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var _loop_1 = function (prop) {\n                if (rex.test(key)) {\n                    component.prototype.builderObject[prop.propertyName] = function (value) {\n                        var childType = {};\n                        merge(childType, getBuilderProperties(prop.type));\n                        value(childType);\n                        var tempValue;\n                        if (!childType.isPropertyArray) {\n                            tempValue = extend({}, childType.properties, {});\n                        }\n                        else {\n                            tempValue = childType.propCollections;\n                        }\n                        this.properties[prop.propertyName] = tempValue;\n                        childType.properties = {};\n                        childType.propCollections = [];\n                        childType.isPropertyArray = false;\n                        return this;\n                    };\n                }\n                else {\n                    component.prototype.builderObject[prop.propertyName] = function (value) {\n                        this.properties[prop.propertyName] = value;\n                        return this;\n                    };\n                }\n            };\n            for (var _b = 0, _c = component.prototype.propList[key]; _b < _c.length; _b++) {\n                var prop = _c[_b];\n                _loop_1(prop);\n            }\n        }\n    }\n    return component.prototype.builderObject;\n}\n/**\n * Method used to create builder for the components\n *\n * @param {any} component -specifies the target component for which builder to be created.\n * @returns {Object} ?\n * @private\n */\nexport function CreateBuilder(component) {\n    var builderFunction = function (element) {\n        this.element = element;\n        return this;\n    };\n    var instanceFunction = function (element) {\n        // eslint-disable-next-line\n        if (!builderFunction.prototype.hasOwnProperty('create')) {\n            builderFunction.prototype = getBuilderProperties(component);\n            builderFunction.prototype.create = function () {\n                var temp = extend({}, {}, this.properties);\n                this.properties = {};\n                return new component(temp, this.element);\n            };\n        }\n        return new builderFunction(element);\n    };\n    return instanceFunction;\n}\n/**\n * Returns parent options for the object\n *\n * @param {Object} context ?\n * @param {string} prefix ?\n * @returns {ParentOption} ?\n * @private\n */\nfunction getParentContext(context, prefix) {\n    // eslint-disable-next-line\n    if (context.hasOwnProperty('parentObj') === false) {\n        return { context: context, prefix: prefix };\n    }\n    else {\n        var curText = getValue('propName', context);\n        if (curText) {\n            prefix = curText + '-' + prefix;\n        }\n        return getParentContext(getValue('parentObj', context), prefix);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}