{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, Property, Event, EventHandler, L10n, setValue, getValue, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, detach, Internationalization, getUniqueID, closest } from '@syncfusion/ej2-base';\nimport { addClass, removeClass } from '@syncfusion/ej2-base';\nimport { Input } from '../input/input';\nvar HIDE_CLEAR = 'e-clear-icon-hide';\nvar TEXTBOX_FOCUS = 'e-input-focus';\nvar containerAttr = ['title', 'style', 'class'];\n/**\n * Represents the TextBox component that allows the user to enter the values based on it's type.\n * ```html\n * <input name='images' id='textbox'/>\n * ```\n * ```typescript\n * <script>\n *   var textboxObj = new TextBox();\n *   textboxObj.appendTo('#textbox');\n * </script>\n * ```\n */\n\nvar TextBox =\n/** @class */\nfunction (_super) {\n  __extends(TextBox, _super);\n  /**\n   *\n   * @param {TextBoxModel} options - Specifies the TextBox model.\n   * @param {string | HTMLInputElement | HTMLTextAreaElement} element - Specifies the element to render as component.\n   * @private\n   */\n\n\n  function TextBox(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.previousValue = null;\n    _this.isAngular = false;\n    _this.isHiddenInput = false;\n    _this.isForm = false;\n    _this.inputPreviousValue = null;\n    _this.isVue = false;\n    _this.textboxOptions = options;\n    return _this;\n  }\n  /**\n   * Calls internally if any of the property value is changed.\n   *\n   * @param {TextBoxModel} newProp - Returns the dynamic property value of the component.\n   * @param {TextBoxModel} oldProp - Returns the previous property value of the component.\n   * @returns {void}\n   * @private\n   */\n\n\n  TextBox.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'floatLabelType':\n          Input.removeFloating(this.textboxWrapper);\n          Input.addFloating(this.respectiveElement, this.floatLabelType, this.placeholder);\n          break;\n\n        case 'enabled':\n          Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n          this.bindClearEvent();\n          break;\n\n        case 'width':\n          Input.setWidth(newProp.width, this.textboxWrapper.container);\n          break;\n\n        case 'value':\n          {\n            var prevOnChange = this.isProtectedOnChange;\n            this.isProtectedOnChange = true;\n\n            if (!this.isBlank(this.value)) {\n              this.value = this.value.toString();\n            }\n\n            this.isProtectedOnChange = prevOnChange;\n            Input.setValue(this.value, this.respectiveElement, this.floatLabelType, this.showClearButton);\n\n            if (this.isHiddenInput) {\n              this.element.value = this.respectiveElement.value;\n            }\n\n            this.inputPreviousValue = this.respectiveElement.value;\n            /* istanbul ignore next */\n\n            if ((this.isAngular || this.isVue) && this.preventChange === true) {\n              this.previousValue = this.isAngular ? this.value : this.previousValue;\n              this.preventChange = false;\n            } else if (isNullOrUndefined(this.isAngular) || !this.isAngular || this.isAngular && !this.preventChange || this.isAngular && isNullOrUndefined(this.preventChange)) {\n              this.raiseChangeEvent();\n            }\n          }\n          break;\n\n        case 'htmlAttributes':\n          {\n            this.updateHTMLAttrToElement();\n            this.updateHTMLAttrToWrapper();\n            this.checkAttributes(true);\n            Input.validateInputType(this.textboxWrapper.container, this.element);\n          }\n          break;\n\n        case 'readonly':\n          Input.setReadonly(this.readonly, this.respectiveElement);\n          break;\n\n        case 'type':\n          if (this.respectiveElement.tagName !== 'TEXTAREA') {\n            this.respectiveElement.setAttribute('type', this.type);\n            Input.validateInputType(this.textboxWrapper.container, this.element);\n            this.raiseChangeEvent();\n          }\n\n          break;\n\n        case 'showClearButton':\n          if (this.respectiveElement.tagName !== 'TEXTAREA') {\n            Input.setClearButton(this.showClearButton, this.respectiveElement, this.textboxWrapper);\n            this.bindClearEvent();\n          }\n\n          break;\n\n        case 'enableRtl':\n          Input.setEnableRtl(this.enableRtl, [this.textboxWrapper.container]);\n          break;\n\n        case 'placeholder':\n          Input.setPlaceholder(this.placeholder, this.respectiveElement);\n          break;\n\n        case 'autocomplete':\n          if (this.autocomplete !== 'on' && this.autocomplete !== '') {\n            this.respectiveElement.autocomplete = this.autocomplete;\n          } else {\n            this.removeAttributes(['autocomplete']);\n          }\n\n          break;\n\n        case 'cssClass':\n          this.updateCssClass(newProp.cssClass, oldProp.cssClass);\n          break;\n\n        case 'locale':\n          this.globalize = new Internationalization(this.locale);\n          this.l10n.setLocale(this.locale);\n          this.setProperties({\n            placeholder: this.l10n.getConstant('placeholder')\n          }, true);\n          Input.setPlaceholder(this.placeholder, this.respectiveElement);\n          break;\n      }\n    }\n  };\n  /**\n   * Gets the component name\n   *\n   * @returns {string} Returns the component name.\n   * @private\n   */\n\n\n  TextBox.prototype.getModuleName = function () {\n    return 'textbox';\n  };\n\n  TextBox.prototype.isBlank = function (str) {\n    return !str || /^\\s*$/.test(str);\n  };\n\n  TextBox.prototype.preRender = function () {\n    this.cloneElement = this.element.cloneNode(true);\n    this.formElement = closest(this.element, 'form');\n\n    if (!isNullOrUndefined(this.formElement)) {\n      this.isForm = true;\n    }\n    /* istanbul ignore next */\n\n\n    if (this.element.tagName === 'EJS-TEXTBOX') {\n      var ejInstance = getValue('ej2_instances', this.element);\n      var inputElement = this.multiline ? this.createElement('textarea') : this.createElement('input');\n      var index = 0;\n\n      for (index; index < this.element.attributes.length; index++) {\n        var attributeName = this.element.attributes[index].nodeName;\n\n        if (attributeName !== 'id' && attributeName !== 'class') {\n          inputElement.setAttribute(attributeName, this.element.attributes[index].nodeValue);\n          inputElement.innerHTML = this.element.innerHTML;\n\n          if (attributeName === 'name') {\n            this.element.removeAttribute('name');\n          }\n        } else if (attributeName === 'class') {\n          inputElement.setAttribute(attributeName, this.element.className.split(' ').filter(function (item) {\n            return item.indexOf('ng-') !== 0;\n          }).join(' '));\n        }\n      }\n\n      this.element.appendChild(inputElement);\n      this.element = inputElement;\n      setValue('ej2_instances', ejInstance, this.element);\n    }\n\n    this.updateHTMLAttrToElement();\n    this.checkAttributes(false);\n\n    if ((isNullOrUndefined(this.textboxOptions) || this.textboxOptions['value'] === undefined) && this.element.value !== '') {\n      this.setProperties({\n        value: this.element.value\n      }, true);\n    }\n\n    if (this.element.tagName !== 'TEXTAREA') {\n      this.element.setAttribute('type', this.type);\n    }\n\n    this.element.setAttribute('role', 'textbox');\n    this.globalize = new Internationalization(this.locale);\n    var localeText = {\n      placeholder: this.placeholder\n    };\n    this.l10n = new L10n('textbox', localeText, this.locale);\n\n    if (this.l10n.getConstant('placeholder') !== '') {\n      this.setProperties({\n        placeholder: this.placeholder || this.l10n.getConstant('placeholder')\n      }, true);\n    }\n\n    if (!this.element.hasAttribute('id')) {\n      this.element.setAttribute('id', getUniqueID('textbox'));\n    }\n\n    if (!this.element.hasAttribute('name')) {\n      this.element.setAttribute('name', this.element.getAttribute('id'));\n    }\n\n    if (this.element.tagName === 'INPUT' && this.multiline) {\n      this.isHiddenInput = true;\n      this.textarea = this.createElement('textarea');\n      this.element.parentNode.insertBefore(this.textarea, this.element);\n      this.element.setAttribute('type', 'hidden');\n      this.textarea.setAttribute('name', this.element.getAttribute('name'));\n      this.element.removeAttribute('name');\n      this.textarea.setAttribute('role', this.element.getAttribute('role'));\n      this.element.removeAttribute('role');\n      this.textarea.setAttribute('id', getUniqueID('textarea'));\n      var apiAttributes = ['placeholder', 'disabled', 'value', 'readonly', 'type', 'autocomplete'];\n\n      for (var index = 0; index < this.element.attributes.length; index++) {\n        var attributeName = this.element.attributes[index].nodeName;\n\n        if (this.element.hasAttribute(attributeName) && containerAttr.indexOf(attributeName) < 0 && !(attributeName === 'id' || attributeName === 'type' || attributeName === 'e-mappinguid')) {\n          // e-mappinguid attribute is handled for Grid component.\n          this.textarea.setAttribute(attributeName, this.element.attributes[index].nodeValue);\n\n          if (apiAttributes.indexOf(attributeName) < 0) {\n            this.element.removeAttribute(attributeName);\n            index--;\n          }\n        }\n      }\n    }\n  };\n\n  TextBox.prototype.checkAttributes = function (isDynamic) {\n    var attrs = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) : ['placeholder', 'disabled', 'value', 'readonly', 'type', 'autocomplete'];\n\n    for (var _i = 0, attrs_1 = attrs; _i < attrs_1.length; _i++) {\n      var key = attrs_1[_i];\n\n      if (!isNullOrUndefined(this.element.getAttribute(key))) {\n        switch (key) {\n          case 'disabled':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['enabled'] === undefined || isDynamic) {\n              var enabled = this.element.getAttribute(key) === 'disabled' || this.element.getAttribute(key) === '' || this.element.getAttribute(key) === 'true' ? false : true;\n              this.setProperties({\n                enabled: enabled\n              }, !isDynamic);\n            }\n\n            break;\n\n          case 'readonly':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['readonly'] === undefined || isDynamic) {\n              var readonly = this.element.getAttribute(key) === 'readonly' || this.element.getAttribute(key) === '' || this.element.getAttribute(key) === 'true' ? true : false;\n              this.setProperties({\n                readonly: readonly\n              }, !isDynamic);\n            }\n\n            break;\n\n          case 'placeholder':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['placeholder'] === undefined || isDynamic) {\n              this.setProperties({\n                placeholder: this.element.placeholder\n              }, !isDynamic);\n            }\n\n            break;\n\n          case 'autocomplete':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['autocomplete'] === undefined || isDynamic) {\n              var autoCompleteTxt = this.element.autocomplete === 'off' ? 'off' : 'on';\n              this.setProperties({\n                autocomplete: autoCompleteTxt\n              }, !isDynamic);\n            }\n\n            break;\n\n          case 'value':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['value'] === undefined || isDynamic) {\n              this.setProperties({\n                value: this.element.value\n              }, !isDynamic);\n            }\n\n            break;\n\n          case 'type':\n            if (isNullOrUndefined(this.textboxOptions) || this.textboxOptions['type'] === undefined || isDynamic) {\n              this.setProperties({\n                type: this.element.type\n              }, !isDynamic);\n            }\n\n            break;\n        }\n      }\n    }\n  };\n  /**\n   * To Initialize the control rendering\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  TextBox.prototype.render = function () {\n    var updatedCssClassValue = this.cssClass;\n\n    if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n      updatedCssClassValue = this.getInputValidClassList(this.cssClass);\n    }\n\n    this.respectiveElement = this.isHiddenInput ? this.textarea : this.element;\n    this.textboxWrapper = Input.createInput({\n      element: this.respectiveElement,\n      floatLabelType: this.floatLabelType,\n      properties: {\n        enabled: this.enabled,\n        enableRtl: this.enableRtl,\n        cssClass: updatedCssClassValue,\n        readonly: this.readonly,\n        placeholder: this.placeholder,\n        showClearButton: this.showClearButton\n      }\n    });\n    this.updateHTMLAttrToWrapper();\n\n    if (this.isHiddenInput) {\n      this.respectiveElement.parentNode.insertBefore(this.element, this.respectiveElement);\n    }\n\n    this.wireEvents();\n\n    if (!isNullOrUndefined(this.value)) {\n      Input.setValue(this.value, this.respectiveElement, this.floatLabelType, this.showClearButton);\n\n      if (this.isHiddenInput) {\n        this.element.value = this.respectiveElement.value;\n      }\n    }\n\n    if (!isNullOrUndefined(this.value)) {\n      this.initialValue = this.value;\n      this.setInitialValue();\n    }\n\n    if (this.autocomplete !== 'on' && this.autocomplete !== '') {\n      this.respectiveElement.autocomplete = this.autocomplete;\n    } else if (!isNullOrUndefined(this.textboxOptions) && this.textboxOptions['autocomplete'] !== undefined) {\n      this.removeAttributes(['autocomplete']);\n    }\n\n    this.previousValue = this.value;\n    this.inputPreviousValue = this.value;\n    this.respectiveElement.defaultValue = this.respectiveElement.value;\n    Input.setWidth(this.width, this.textboxWrapper.container);\n    this.renderComplete();\n  };\n\n  TextBox.prototype.updateHTMLAttrToWrapper = function () {\n    if (!isNullOrUndefined(this.htmlAttributes)) {\n      for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n        var key = _a[_i];\n\n        if (containerAttr.indexOf(key) > -1) {\n          if (key === 'class') {\n            var updatedClassValues = this.getInputValidClassList(this.htmlAttributes[key]);\n\n            if (updatedClassValues !== '') {\n              addClass([this.textboxWrapper.container], updatedClassValues.split(' '));\n            }\n          } else if (key === 'style') {\n            var setStyle = this.textboxWrapper.container.getAttribute(key);\n            setStyle = !isNullOrUndefined(setStyle) ? setStyle + this.htmlAttributes[key] : this.htmlAttributes[key];\n            this.textboxWrapper.container.setAttribute(key, setStyle);\n          } else {\n            this.textboxWrapper.container.setAttribute(key, this.htmlAttributes[key]);\n          }\n        }\n      }\n    }\n  };\n\n  TextBox.prototype.updateHTMLAttrToElement = function () {\n    if (!isNullOrUndefined(this.htmlAttributes)) {\n      for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n        var key = _a[_i];\n\n        if (containerAttr.indexOf(key) < 0) {\n          this.element.setAttribute(key, this.htmlAttributes[key]);\n        }\n      }\n    }\n  };\n\n  TextBox.prototype.updateCssClass = function (newClass, oldClass) {\n    Input.setCssClass(this.getInputValidClassList(newClass), [this.textboxWrapper.container], this.getInputValidClassList(oldClass));\n  };\n\n  TextBox.prototype.getInputValidClassList = function (inputClassName) {\n    var result = inputClassName;\n\n    if (!isNullOrUndefined(inputClassName) && inputClassName !== '') {\n      result = inputClassName.replace(/\\s+/g, ' ').trim();\n    }\n\n    return result;\n  };\n\n  TextBox.prototype.setInitialValue = function () {\n    if (!this.isAngular) {\n      this.respectiveElement.setAttribute('value', this.initialValue);\n    }\n  };\n\n  TextBox.prototype.wireEvents = function () {\n    EventHandler.add(this.respectiveElement, 'focus', this.focusHandler, this);\n    EventHandler.add(this.respectiveElement, 'blur', this.focusOutHandler, this);\n    EventHandler.add(this.respectiveElement, 'input', this.inputHandler, this);\n    EventHandler.add(this.respectiveElement, 'change', this.changeHandler, this);\n\n    if (this.isForm) {\n      EventHandler.add(this.formElement, 'reset', this.resetForm, this);\n    }\n\n    this.bindClearEvent();\n\n    if (!isNullOrUndefined(this.textboxWrapper.container.querySelector('.e-float-text')) && this.floatLabelType === 'Auto' && this.textboxWrapper.container.classList.contains('e-autofill') && this.textboxWrapper.container.classList.contains('e-outline')) {\n      EventHandler.add(this.textboxWrapper.container.querySelector('.e-float-text'), 'animationstart', this.animationHandler, this);\n    }\n  };\n\n  TextBox.prototype.animationHandler = function () {\n    this.textboxWrapper.container.classList.add('e-valid-input');\n    var label = this.textboxWrapper.container.querySelector('.e-float-text');\n\n    if (!isNullOrUndefined(label)) {\n      label.classList.add('e-label-top');\n\n      if (label.classList.contains('e-label-bottom')) {\n        label.classList.remove('e-label-bottom');\n      }\n    }\n  };\n\n  TextBox.prototype.resetValue = function (value) {\n    var prevOnChange = this.isProtectedOnChange;\n    this.isProtectedOnChange = true;\n    this.value = value;\n    this.isProtectedOnChange = prevOnChange;\n  };\n\n  TextBox.prototype.resetForm = function () {\n    if (this.isAngular) {\n      this.resetValue('');\n    } else {\n      this.resetValue(this.initialValue);\n    }\n\n    if (!isNullOrUndefined(this.textboxWrapper)) {\n      var label = this.textboxWrapper.container.querySelector('.e-float-text');\n\n      if (!isNullOrUndefined(label)) {\n        if (isNullOrUndefined(this.initialValue) || this.initialValue === '') {\n          label.classList.add('e-label-bottom');\n          label.classList.remove('e-label-top');\n        } else if (this.initialValue !== '') {\n          label.classList.add('e-label-top');\n          label.classList.remove('e-label-bottom');\n        }\n      }\n    }\n  };\n\n  TextBox.prototype.focusHandler = function (args) {\n    var eventArgs = {\n      container: this.textboxWrapper.container,\n      event: args,\n      value: this.value\n    };\n    this.trigger('focus', eventArgs);\n  };\n\n  TextBox.prototype.focusOutHandler = function (args) {\n    if (!(this.previousValue === null && this.value === null && this.respectiveElement.value === '') && this.previousValue !== this.respectiveElement.value) {\n      this.raiseChangeEvent(args, true);\n    }\n\n    var eventArgs = {\n      container: this.textboxWrapper.container,\n      event: args,\n      value: this.value\n    };\n    this.trigger('blur', eventArgs);\n  };\n\n  TextBox.prototype.inputHandler = function (args) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-this-alias\n    var textboxObj = this;\n    var eventArgs = {\n      event: args,\n      value: this.respectiveElement.value,\n      previousValue: this.inputPreviousValue,\n      container: this.textboxWrapper.container\n    };\n    this.inputPreviousValue = this.respectiveElement.value;\n    /* istanbul ignore next */\n\n    if (this.isAngular) {\n      textboxObj.localChange({\n        value: this.respectiveElement.value\n      });\n      this.preventChange = true;\n    }\n\n    if (this.isVue) {\n      this.preventChange = true;\n    }\n\n    this.trigger('input', eventArgs);\n    args.stopPropagation();\n  };\n\n  TextBox.prototype.changeHandler = function (args) {\n    this.setProperties({\n      value: this.respectiveElement.value\n    }, true);\n    this.raiseChangeEvent(args, true);\n    args.stopPropagation();\n  };\n\n  TextBox.prototype.raiseChangeEvent = function (event, interaction) {\n    var eventArgs = {\n      event: event,\n      value: this.value,\n      previousValue: this.previousValue,\n      container: this.textboxWrapper.container,\n      isInteraction: interaction ? interaction : false,\n      isInteracted: interaction ? interaction : false\n    };\n    this.preventChange = false;\n    this.trigger('change', eventArgs);\n    this.previousValue = this.value; //EJ2CORE-738:For this task we update the textarea value to the input when input tag with multiline is present\n\n    if (this.element.tagName === 'INPUT' && this.multiline && Browser.info.name === 'mozilla') {\n      this.element.value = this.respectiveElement.value;\n    }\n  };\n\n  TextBox.prototype.bindClearEvent = function () {\n    if (this.showClearButton && this.respectiveElement.tagName !== 'TEXTAREA') {\n      if (this.enabled) {\n        EventHandler.add(this.textboxWrapper.clearButton, 'mousedown touchstart', this.resetInputHandler, this);\n      } else {\n        EventHandler.remove(this.textboxWrapper.clearButton, 'mousedown touchstart', this.resetInputHandler);\n      }\n    }\n  };\n\n  TextBox.prototype.resetInputHandler = function (event) {\n    event.preventDefault();\n\n    if (!this.textboxWrapper.clearButton.classList.contains(HIDE_CLEAR) || this.textboxWrapper.container.classList.contains('e-static-clear')) {\n      Input.setValue('', this.respectiveElement, this.floatLabelType, this.showClearButton);\n\n      if (this.isHiddenInput) {\n        this.element.value = this.respectiveElement.value;\n      }\n\n      this.setProperties({\n        value: this.respectiveElement.value\n      }, true);\n      var eventArgs = {\n        event: event,\n        value: this.respectiveElement.value,\n        previousValue: this.inputPreviousValue,\n        container: this.textboxWrapper.container\n      };\n      this.trigger('input', eventArgs);\n      this.inputPreviousValue = this.respectiveElement.value;\n      this.raiseChangeEvent(event, true);\n    }\n  };\n\n  TextBox.prototype.unWireEvents = function () {\n    EventHandler.remove(this.respectiveElement, 'focus', this.focusHandler);\n    EventHandler.remove(this.respectiveElement, 'blur', this.focusOutHandler);\n    EventHandler.remove(this.respectiveElement, 'input', this.inputHandler);\n    EventHandler.remove(this.respectiveElement, 'change', this.changeHandler);\n\n    if (this.isForm) {\n      EventHandler.remove(this.formElement, 'reset', this.resetForm);\n    }\n\n    if (!isNullOrUndefined(this.textboxWrapper.container.querySelector('.e-float-text')) && this.floatLabelType === 'Auto' && this.textboxWrapper.container.classList.contains('e-outline') && this.textboxWrapper.container.classList.contains('e-autofill')) {\n      EventHandler.remove(this.textboxWrapper.container.querySelector('.e-float-text'), 'animationstart', this.animationHandler);\n    }\n  };\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers.\n   * Also, it maintains the initial TextBox element from the DOM.\n   *\n   * @method destroy\n   * @returns {void}\n   */\n\n\n  TextBox.prototype.destroy = function () {\n    this.unWireEvents();\n\n    if (this.element.tagName === 'INPUT' && this.multiline) {\n      detach(this.textboxWrapper.container.getElementsByTagName('textarea')[0]);\n      this.respectiveElement = this.element;\n      this.element.removeAttribute('type');\n    }\n\n    this.respectiveElement.value = this.respectiveElement.defaultValue;\n    this.respectiveElement.classList.remove('e-input');\n    this.removeAttributes(['aria-placeholder', 'aria-disabled', 'aria-readonly', 'aria-labelledby']);\n\n    if (!isNullOrUndefined(this.textboxWrapper)) {\n      this.textboxWrapper.container.insertAdjacentElement('afterend', this.respectiveElement);\n      detach(this.textboxWrapper.container);\n    }\n\n    this.textboxWrapper = null;\n\n    _super.prototype.destroy.call(this);\n  };\n  /**\n   * Adding the icons to the TextBox component.\n   *\n   * @param { string } position - Specify the icon placement on the TextBox. Possible values are append and prepend.\n   * @param { string | string[] } icons - Icon classes which are need to add to the span element which is going to created.\n   * Span element acts as icon or button element for TextBox.\n   * @returns {void}\n   */\n\n\n  TextBox.prototype.addIcon = function (position, icons) {\n    Input.addIcon(position, icons, this.textboxWrapper.container, this.respectiveElement, this.createElement);\n  };\n  /* eslint-disable valid-jsdoc, jsdoc/require-returns */\n\n  /**\n   * Gets the properties to be maintained in the persisted state.\n   *\n   */\n\n\n  TextBox.prototype.getPersistData = function () {\n    var keyEntity = ['value'];\n    return this.addOnPersist(keyEntity);\n  };\n  /* eslint-enable valid-jsdoc, jsdoc/require-returns */\n\n  /**\n   * Adding the multiple attributes as key-value pair to the TextBox element.\n   *\n   * @param {string} attributes - Specifies the attributes to be add to TextBox element.\n   * @returns {void}\n   */\n\n\n  TextBox.prototype.addAttributes = function (attributes) {\n    for (var _i = 0, _a = Object.keys(attributes); _i < _a.length; _i++) {\n      var key = _a[_i];\n\n      if (key === 'disabled') {\n        this.setProperties({\n          enabled: false\n        }, true);\n        Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n      } else if (key === 'readonly') {\n        this.setProperties({\n          readonly: true\n        }, true);\n        Input.setReadonly(this.readonly, this.respectiveElement);\n      } else if (key === 'class') {\n        this.respectiveElement.classList.add(attributes[key]);\n      } else if (key === 'placeholder') {\n        this.setProperties({\n          placeholder: attributes[key]\n        }, true);\n        Input.setPlaceholder(this.placeholder, this.respectiveElement);\n      } else if (key === 'rows' && this.respectiveElement.tagName === 'TEXTAREA') {\n        this.respectiveElement.setAttribute(key, attributes[key]);\n      } else {\n        this.respectiveElement.setAttribute(key, attributes[key]);\n      }\n    }\n  };\n  /**\n   * Removing the multiple attributes as key-value pair to the TextBox element.\n   *\n   * @param { string[] } attributes - Specifies the attributes name to be removed from TextBox element.\n   * @returns {void}\n   */\n\n\n  TextBox.prototype.removeAttributes = function (attributes) {\n    for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n      var key = attributes_1[_i];\n\n      if (key === 'disabled') {\n        this.setProperties({\n          enabled: true\n        }, true);\n        Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n      } else if (key === 'readonly') {\n        this.setProperties({\n          readonly: false\n        }, true);\n        Input.setReadonly(this.readonly, this.respectiveElement);\n      } else if (key === 'placeholder') {\n        this.setProperties({\n          placeholder: null\n        }, true);\n        Input.setPlaceholder(this.placeholder, this.respectiveElement);\n      } else {\n        this.respectiveElement.removeAttribute(key);\n      }\n    }\n  };\n  /**\n   * Sets the focus to widget for interaction.\n   *\n   * @returns {void}\n   */\n\n\n  TextBox.prototype.focusIn = function () {\n    if (document.activeElement !== this.respectiveElement && this.enabled) {\n      this.respectiveElement.focus();\n\n      if (this.textboxWrapper.container.classList.contains('e-input-group') || this.textboxWrapper.container.classList.contains('e-outline') || this.textboxWrapper.container.classList.contains('e-filled')) {\n        addClass([this.textboxWrapper.container], [TEXTBOX_FOCUS]);\n      }\n    }\n  };\n  /**\n   * Remove the focus from widget, if the widget is in focus state.\n   *\n   * @returns {void}\n   */\n\n\n  TextBox.prototype.focusOut = function () {\n    if (document.activeElement === this.respectiveElement && this.enabled) {\n      this.respectiveElement.blur();\n\n      if (this.textboxWrapper.container.classList.contains('e-input-group') || this.textboxWrapper.container.classList.contains('e-outline') || this.textboxWrapper.container.classList.contains('e-filled')) {\n        removeClass([this.textboxWrapper.container], [TEXTBOX_FOCUS]);\n      }\n    }\n  };\n\n  __decorate([Property('text')], TextBox.prototype, \"type\", void 0);\n\n  __decorate([Property(false)], TextBox.prototype, \"readonly\", void 0);\n\n  __decorate([Property(null)], TextBox.prototype, \"value\", void 0);\n\n  __decorate([Property('Never')], TextBox.prototype, \"floatLabelType\", void 0);\n\n  __decorate([Property('')], TextBox.prototype, \"cssClass\", void 0);\n\n  __decorate([Property(null)], TextBox.prototype, \"placeholder\", void 0);\n\n  __decorate([Property('on')], TextBox.prototype, \"autocomplete\", void 0);\n\n  __decorate([Property({})], TextBox.prototype, \"htmlAttributes\", void 0);\n\n  __decorate([Property(false)], TextBox.prototype, \"multiline\", void 0);\n\n  __decorate([Property(true)], TextBox.prototype, \"enabled\", void 0);\n\n  __decorate([Property(false)], TextBox.prototype, \"showClearButton\", void 0);\n\n  __decorate([Property(false)], TextBox.prototype, \"enablePersistence\", void 0);\n\n  __decorate([Property(null)], TextBox.prototype, \"width\", void 0);\n\n  __decorate([Event()], TextBox.prototype, \"created\", void 0);\n\n  __decorate([Event()], TextBox.prototype, \"destroyed\", void 0);\n\n  __decorate([Event()], TextBox.prototype, \"change\", void 0);\n\n  __decorate([Event()], TextBox.prototype, \"blur\", void 0);\n\n  __decorate([Event()], TextBox.prototype, \"focus\", void 0);\n\n  __decorate([Event()], TextBox.prototype, \"input\", void 0);\n\n  TextBox = __decorate([NotifyPropertyChanges], TextBox);\n  return TextBox;\n}(Component);\n\nexport { TextBox };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","Event","EventHandler","L10n","setValue","getValue","isNullOrUndefined","Browser","NotifyPropertyChanges","detach","Internationalization","getUniqueID","closest","addClass","removeClass","Input","HIDE_CLEAR","TEXTBOX_FOCUS","containerAttr","TextBox","_super","options","element","_this","call","previousValue","isAngular","isHiddenInput","isForm","inputPreviousValue","isVue","textboxOptions","onPropertyChanged","newProp","oldProp","_i","_a","keys","prop","removeFloating","textboxWrapper","addFloating","respectiveElement","floatLabelType","placeholder","setEnabled","enabled","container","bindClearEvent","setWidth","width","prevOnChange","isProtectedOnChange","isBlank","value","toString","showClearButton","preventChange","raiseChangeEvent","updateHTMLAttrToElement","updateHTMLAttrToWrapper","checkAttributes","validateInputType","setReadonly","readonly","tagName","setAttribute","type","setClearButton","setEnableRtl","enableRtl","setPlaceholder","autocomplete","removeAttributes","updateCssClass","cssClass","globalize","locale","l10n","setLocale","setProperties","getConstant","getModuleName","str","test","preRender","cloneElement","cloneNode","formElement","ejInstance","inputElement","multiline","createElement","index","attributes","attributeName","nodeName","nodeValue","innerHTML","removeAttribute","className","split","filter","item","indexOf","join","appendChild","undefined","localeText","hasAttribute","getAttribute","textarea","parentNode","insertBefore","apiAttributes","isDynamic","attrs","htmlAttributes","attrs_1","autoCompleteTxt","render","updatedCssClassValue","getInputValidClassList","createInput","properties","wireEvents","initialValue","setInitialValue","defaultValue","renderComplete","updatedClassValues","setStyle","newClass","oldClass","setCssClass","inputClassName","result","replace","trim","add","focusHandler","focusOutHandler","inputHandler","changeHandler","resetForm","querySelector","classList","contains","animationHandler","label","remove","resetValue","args","eventArgs","event","trigger","textboxObj","localChange","stopPropagation","interaction","isInteraction","isInteracted","info","name","clearButton","resetInputHandler","preventDefault","unWireEvents","destroy","getElementsByTagName","insertAdjacentElement","addIcon","position","icons","getPersistData","keyEntity","addOnPersist","addAttributes","attributes_1","focusIn","document","activeElement","focus","focusOut","blur"],"sources":["C:/Users/leezh/Documents/Coding/Orbital Test/Orbital-Duty-Planner/node_modules/@syncfusion/ej2-inputs/src/textbox/textbox.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Event, EventHandler, L10n, setValue, getValue, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, detach, Internationalization, getUniqueID, closest } from '@syncfusion/ej2-base';\nimport { addClass, removeClass } from '@syncfusion/ej2-base';\nimport { Input } from '../input/input';\nvar HIDE_CLEAR = 'e-clear-icon-hide';\nvar TEXTBOX_FOCUS = 'e-input-focus';\nvar containerAttr = ['title', 'style', 'class'];\n/**\n * Represents the TextBox component that allows the user to enter the values based on it's type.\n * ```html\n * <input name='images' id='textbox'/>\n * ```\n * ```typescript\n * <script>\n *   var textboxObj = new TextBox();\n *   textboxObj.appendTo('#textbox');\n * </script>\n * ```\n */\nvar TextBox = /** @class */ (function (_super) {\n    __extends(TextBox, _super);\n    /**\n     *\n     * @param {TextBoxModel} options - Specifies the TextBox model.\n     * @param {string | HTMLInputElement | HTMLTextAreaElement} element - Specifies the element to render as component.\n     * @private\n     */\n    function TextBox(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.previousValue = null;\n        _this.isAngular = false;\n        _this.isHiddenInput = false;\n        _this.isForm = false;\n        _this.inputPreviousValue = null;\n        _this.isVue = false;\n        _this.textboxOptions = options;\n        return _this;\n    }\n    /**\n     * Calls internally if any of the property value is changed.\n     *\n     * @param {TextBoxModel} newProp - Returns the dynamic property value of the component.\n     * @param {TextBoxModel} oldProp - Returns the previous property value of the component.\n     * @returns {void}\n     * @private\n     */\n    TextBox.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'floatLabelType':\n                    Input.removeFloating(this.textboxWrapper);\n                    Input.addFloating(this.respectiveElement, this.floatLabelType, this.placeholder);\n                    break;\n                case 'enabled':\n                    Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n                    this.bindClearEvent();\n                    break;\n                case 'width':\n                    Input.setWidth(newProp.width, this.textboxWrapper.container);\n                    break;\n                case 'value':\n                    {\n                        var prevOnChange = this.isProtectedOnChange;\n                        this.isProtectedOnChange = true;\n                        if (!this.isBlank(this.value)) {\n                            this.value = this.value.toString();\n                        }\n                        this.isProtectedOnChange = prevOnChange;\n                        Input.setValue(this.value, this.respectiveElement, this.floatLabelType, this.showClearButton);\n                        if (this.isHiddenInput) {\n                            this.element.value = this.respectiveElement.value;\n                        }\n                        this.inputPreviousValue = this.respectiveElement.value;\n                        /* istanbul ignore next */\n                        if ((this.isAngular || this.isVue) && this.preventChange === true) {\n                            this.previousValue = this.isAngular ? this.value : this.previousValue;\n                            this.preventChange = false;\n                        }\n                        else if (isNullOrUndefined(this.isAngular) || !this.isAngular\n                            || (this.isAngular && !this.preventChange) || (this.isAngular && isNullOrUndefined(this.preventChange))) {\n                            this.raiseChangeEvent();\n                        }\n                    }\n                    break;\n                case 'htmlAttributes':\n                    {\n                        this.updateHTMLAttrToElement();\n                        this.updateHTMLAttrToWrapper();\n                        this.checkAttributes(true);\n                        Input.validateInputType(this.textboxWrapper.container, this.element);\n                    }\n                    break;\n                case 'readonly':\n                    Input.setReadonly(this.readonly, this.respectiveElement);\n                    break;\n                case 'type':\n                    if (this.respectiveElement.tagName !== 'TEXTAREA') {\n                        this.respectiveElement.setAttribute('type', this.type);\n                        Input.validateInputType(this.textboxWrapper.container, this.element);\n                        this.raiseChangeEvent();\n                    }\n                    break;\n                case 'showClearButton':\n                    if (this.respectiveElement.tagName !== 'TEXTAREA') {\n                        Input.setClearButton(this.showClearButton, this.respectiveElement, this.textboxWrapper);\n                        this.bindClearEvent();\n                    }\n                    break;\n                case 'enableRtl':\n                    Input.setEnableRtl(this.enableRtl, [this.textboxWrapper.container]);\n                    break;\n                case 'placeholder':\n                    Input.setPlaceholder(this.placeholder, this.respectiveElement);\n                    break;\n                case 'autocomplete':\n                    if (this.autocomplete !== 'on' && this.autocomplete !== '') {\n                        this.respectiveElement.autocomplete = this.autocomplete;\n                    }\n                    else {\n                        this.removeAttributes(['autocomplete']);\n                    }\n                    break;\n                case 'cssClass':\n                    this.updateCssClass(newProp.cssClass, oldProp.cssClass);\n                    break;\n                case 'locale':\n                    this.globalize = new Internationalization(this.locale);\n                    this.l10n.setLocale(this.locale);\n                    this.setProperties({ placeholder: this.l10n.getConstant('placeholder') }, true);\n                    Input.setPlaceholder(this.placeholder, this.respectiveElement);\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the component name\n     *\n     * @returns {string} Returns the component name.\n     * @private\n     */\n    TextBox.prototype.getModuleName = function () {\n        return 'textbox';\n    };\n    TextBox.prototype.isBlank = function (str) {\n        return (!str || /^\\s*$/.test(str));\n    };\n    TextBox.prototype.preRender = function () {\n        this.cloneElement = this.element.cloneNode(true);\n        this.formElement = closest(this.element, 'form');\n        if (!isNullOrUndefined(this.formElement)) {\n            this.isForm = true;\n        }\n        /* istanbul ignore next */\n        if (this.element.tagName === 'EJS-TEXTBOX') {\n            var ejInstance = getValue('ej2_instances', this.element);\n            var inputElement = this.multiline ?\n                this.createElement('textarea') :\n                this.createElement('input');\n            var index = 0;\n            for (index; index < this.element.attributes.length; index++) {\n                var attributeName = this.element.attributes[index].nodeName;\n                if (attributeName !== 'id' && attributeName !== 'class') {\n                    inputElement.setAttribute(attributeName, this.element.attributes[index].nodeValue);\n                    inputElement.innerHTML = this.element.innerHTML;\n                    if (attributeName === 'name') {\n                        this.element.removeAttribute('name');\n                    }\n                }\n                else if (attributeName === 'class') {\n                    inputElement.setAttribute(attributeName, this.element.className.split(' ').filter(function (item) { return item.indexOf('ng-') !== 0; }).join(' '));\n                }\n            }\n            this.element.appendChild(inputElement);\n            this.element = inputElement;\n            setValue('ej2_instances', ejInstance, this.element);\n        }\n        this.updateHTMLAttrToElement();\n        this.checkAttributes(false);\n        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['value'] === undefined)) && this.element.value !== '') {\n            this.setProperties({ value: this.element.value }, true);\n        }\n        if (this.element.tagName !== 'TEXTAREA') {\n            this.element.setAttribute('type', this.type);\n        }\n        this.element.setAttribute('role', 'textbox');\n        this.globalize = new Internationalization(this.locale);\n        var localeText = { placeholder: this.placeholder };\n        this.l10n = new L10n('textbox', localeText, this.locale);\n        if (this.l10n.getConstant('placeholder') !== '') {\n            this.setProperties({ placeholder: this.placeholder || this.l10n.getConstant('placeholder') }, true);\n        }\n        if (!this.element.hasAttribute('id')) {\n            this.element.setAttribute('id', getUniqueID('textbox'));\n        }\n        if (!this.element.hasAttribute('name')) {\n            this.element.setAttribute('name', this.element.getAttribute('id'));\n        }\n        if (this.element.tagName === 'INPUT' && this.multiline) {\n            this.isHiddenInput = true;\n            this.textarea = this.createElement('textarea');\n            this.element.parentNode.insertBefore(this.textarea, this.element);\n            this.element.setAttribute('type', 'hidden');\n            this.textarea.setAttribute('name', this.element.getAttribute('name'));\n            this.element.removeAttribute('name');\n            this.textarea.setAttribute('role', this.element.getAttribute('role'));\n            this.element.removeAttribute('role');\n            this.textarea.setAttribute('id', getUniqueID('textarea'));\n            var apiAttributes = ['placeholder', 'disabled', 'value', 'readonly', 'type', 'autocomplete'];\n            for (var index = 0; index < this.element.attributes.length; index++) {\n                var attributeName = this.element.attributes[index].nodeName;\n                if (this.element.hasAttribute(attributeName) && containerAttr.indexOf(attributeName) < 0 &&\n                    !(attributeName === 'id' || attributeName === 'type' || attributeName === 'e-mappinguid')) {\n                    // e-mappinguid attribute is handled for Grid component.\n                    this.textarea.setAttribute(attributeName, this.element.attributes[index].nodeValue);\n                    if (apiAttributes.indexOf(attributeName) < 0) {\n                        this.element.removeAttribute(attributeName);\n                        index--;\n                    }\n                }\n            }\n        }\n    };\n    TextBox.prototype.checkAttributes = function (isDynamic) {\n        var attrs = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) :\n            ['placeholder', 'disabled', 'value', 'readonly', 'type', 'autocomplete'];\n        for (var _i = 0, attrs_1 = attrs; _i < attrs_1.length; _i++) {\n            var key = attrs_1[_i];\n            if (!isNullOrUndefined(this.element.getAttribute(key))) {\n                switch (key) {\n                    case 'disabled':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['enabled'] === undefined)) || isDynamic) {\n                            var enabled = this.element.getAttribute(key) === 'disabled' || this.element.getAttribute(key) === '' ||\n                                this.element.getAttribute(key) === 'true' ? false : true;\n                            this.setProperties({ enabled: enabled }, !isDynamic);\n                        }\n                        break;\n                    case 'readonly':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['readonly'] === undefined)) || isDynamic) {\n                            var readonly = this.element.getAttribute(key) === 'readonly' || this.element.getAttribute(key) === ''\n                                || this.element.getAttribute(key) === 'true' ? true : false;\n                            this.setProperties({ readonly: readonly }, !isDynamic);\n                        }\n                        break;\n                    case 'placeholder':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['placeholder'] === undefined)) || isDynamic) {\n                            this.setProperties({ placeholder: this.element.placeholder }, !isDynamic);\n                        }\n                        break;\n                    case 'autocomplete':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['autocomplete'] === undefined)) || isDynamic) {\n                            var autoCompleteTxt = this.element.autocomplete === 'off' ? 'off' : 'on';\n                            this.setProperties({ autocomplete: autoCompleteTxt }, !isDynamic);\n                        }\n                        break;\n                    case 'value':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['value'] === undefined)) || isDynamic) {\n                            this.setProperties({ value: this.element.value }, !isDynamic);\n                        }\n                        break;\n                    case 'type':\n                        if ((isNullOrUndefined(this.textboxOptions) || (this.textboxOptions['type'] === undefined)) || isDynamic) {\n                            this.setProperties({ type: this.element.type }, !isDynamic);\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    TextBox.prototype.render = function () {\n        var updatedCssClassValue = this.cssClass;\n        if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n            updatedCssClassValue = this.getInputValidClassList(this.cssClass);\n        }\n        this.respectiveElement = (this.isHiddenInput) ? this.textarea : this.element;\n        this.textboxWrapper = Input.createInput({\n            element: this.respectiveElement,\n            floatLabelType: this.floatLabelType,\n            properties: {\n                enabled: this.enabled,\n                enableRtl: this.enableRtl,\n                cssClass: updatedCssClassValue,\n                readonly: this.readonly,\n                placeholder: this.placeholder,\n                showClearButton: this.showClearButton\n            }\n        });\n        this.updateHTMLAttrToWrapper();\n        if (this.isHiddenInput) {\n            this.respectiveElement.parentNode.insertBefore(this.element, this.respectiveElement);\n        }\n        this.wireEvents();\n        if (!isNullOrUndefined(this.value)) {\n            Input.setValue(this.value, this.respectiveElement, this.floatLabelType, this.showClearButton);\n            if (this.isHiddenInput) {\n                this.element.value = this.respectiveElement.value;\n            }\n        }\n        if (!isNullOrUndefined(this.value)) {\n            this.initialValue = this.value;\n            this.setInitialValue();\n        }\n        if (this.autocomplete !== 'on' && this.autocomplete !== '') {\n            this.respectiveElement.autocomplete = this.autocomplete;\n        }\n        else if (!isNullOrUndefined(this.textboxOptions) && (this.textboxOptions['autocomplete'] !== undefined)) {\n            this.removeAttributes(['autocomplete']);\n        }\n        this.previousValue = this.value;\n        this.inputPreviousValue = this.value;\n        this.respectiveElement.defaultValue = this.respectiveElement.value;\n        Input.setWidth(this.width, this.textboxWrapper.container);\n        this.renderComplete();\n    };\n    TextBox.prototype.updateHTMLAttrToWrapper = function () {\n        if (!isNullOrUndefined(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var key = _a[_i];\n                if (containerAttr.indexOf(key) > -1) {\n                    if (key === 'class') {\n                        var updatedClassValues = this.getInputValidClassList(this.htmlAttributes[key]);\n                        if (updatedClassValues !== '') {\n                            addClass([this.textboxWrapper.container], updatedClassValues.split(' '));\n                        }\n                    }\n                    else if (key === 'style') {\n                        var setStyle = this.textboxWrapper.container.getAttribute(key);\n                        setStyle = !isNullOrUndefined(setStyle) ? (setStyle + this.htmlAttributes[key]) :\n                            this.htmlAttributes[key];\n                        this.textboxWrapper.container.setAttribute(key, setStyle);\n                    }\n                    else {\n                        this.textboxWrapper.container.setAttribute(key, this.htmlAttributes[key]);\n                    }\n                }\n            }\n        }\n    };\n    TextBox.prototype.updateHTMLAttrToElement = function () {\n        if (!isNullOrUndefined(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var key = _a[_i];\n                if (containerAttr.indexOf(key) < 0) {\n                    this.element.setAttribute(key, this.htmlAttributes[key]);\n                }\n            }\n        }\n    };\n    TextBox.prototype.updateCssClass = function (newClass, oldClass) {\n        Input.setCssClass(this.getInputValidClassList(newClass), [this.textboxWrapper.container], this.getInputValidClassList(oldClass));\n    };\n    TextBox.prototype.getInputValidClassList = function (inputClassName) {\n        var result = inputClassName;\n        if (!isNullOrUndefined(inputClassName) && inputClassName !== '') {\n            result = (inputClassName.replace(/\\s+/g, ' ')).trim();\n        }\n        return result;\n    };\n    TextBox.prototype.setInitialValue = function () {\n        if (!this.isAngular) {\n            this.respectiveElement.setAttribute('value', this.initialValue);\n        }\n    };\n    TextBox.prototype.wireEvents = function () {\n        EventHandler.add(this.respectiveElement, 'focus', this.focusHandler, this);\n        EventHandler.add(this.respectiveElement, 'blur', this.focusOutHandler, this);\n        EventHandler.add(this.respectiveElement, 'input', this.inputHandler, this);\n        EventHandler.add(this.respectiveElement, 'change', this.changeHandler, this);\n        if (this.isForm) {\n            EventHandler.add(this.formElement, 'reset', this.resetForm, this);\n        }\n        this.bindClearEvent();\n        if (!isNullOrUndefined(this.textboxWrapper.container.querySelector('.e-float-text')) && this.floatLabelType === 'Auto'\n            && this.textboxWrapper.container.classList.contains('e-autofill') &&\n            this.textboxWrapper.container.classList.contains('e-outline')) {\n            EventHandler.add((this.textboxWrapper.container.querySelector('.e-float-text')), 'animationstart', this.animationHandler, this);\n        }\n    };\n    TextBox.prototype.animationHandler = function () {\n        this.textboxWrapper.container.classList.add('e-valid-input');\n        var label = this.textboxWrapper.container.querySelector('.e-float-text');\n        if (!isNullOrUndefined(label)) {\n            label.classList.add('e-label-top');\n            if (label.classList.contains('e-label-bottom')) {\n                label.classList.remove('e-label-bottom');\n            }\n        }\n    };\n    TextBox.prototype.resetValue = function (value) {\n        var prevOnChange = this.isProtectedOnChange;\n        this.isProtectedOnChange = true;\n        this.value = value;\n        this.isProtectedOnChange = prevOnChange;\n    };\n    TextBox.prototype.resetForm = function () {\n        if (this.isAngular) {\n            this.resetValue('');\n        }\n        else {\n            this.resetValue(this.initialValue);\n        }\n        if (!isNullOrUndefined(this.textboxWrapper)) {\n            var label = this.textboxWrapper.container.querySelector('.e-float-text');\n            if (!isNullOrUndefined(label)) {\n                if ((isNullOrUndefined(this.initialValue) || this.initialValue === '')) {\n                    label.classList.add('e-label-bottom');\n                    label.classList.remove('e-label-top');\n                }\n                else if (this.initialValue !== '') {\n                    label.classList.add('e-label-top');\n                    label.classList.remove('e-label-bottom');\n                }\n            }\n        }\n    };\n    TextBox.prototype.focusHandler = function (args) {\n        var eventArgs = {\n            container: this.textboxWrapper.container,\n            event: args,\n            value: this.value\n        };\n        this.trigger('focus', eventArgs);\n    };\n    TextBox.prototype.focusOutHandler = function (args) {\n        if (!(this.previousValue === null && this.value === null && this.respectiveElement.value === '') &&\n            (this.previousValue !== this.respectiveElement.value)) {\n            this.raiseChangeEvent(args, true);\n        }\n        var eventArgs = {\n            container: this.textboxWrapper.container,\n            event: args,\n            value: this.value\n        };\n        this.trigger('blur', eventArgs);\n    };\n    TextBox.prototype.inputHandler = function (args) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-this-alias\n        var textboxObj = this;\n        var eventArgs = {\n            event: args,\n            value: this.respectiveElement.value,\n            previousValue: this.inputPreviousValue,\n            container: this.textboxWrapper.container\n        };\n        this.inputPreviousValue = this.respectiveElement.value;\n        /* istanbul ignore next */\n        if (this.isAngular) {\n            textboxObj.localChange({ value: this.respectiveElement.value });\n            this.preventChange = true;\n        }\n        if (this.isVue) {\n            this.preventChange = true;\n        }\n        this.trigger('input', eventArgs);\n        args.stopPropagation();\n    };\n    TextBox.prototype.changeHandler = function (args) {\n        this.setProperties({ value: this.respectiveElement.value }, true);\n        this.raiseChangeEvent(args, true);\n        args.stopPropagation();\n    };\n    TextBox.prototype.raiseChangeEvent = function (event, interaction) {\n        var eventArgs = {\n            event: event,\n            value: this.value,\n            previousValue: this.previousValue,\n            container: this.textboxWrapper.container,\n            isInteraction: interaction ? interaction : false,\n            isInteracted: interaction ? interaction : false\n        };\n        this.preventChange = false;\n        this.trigger('change', eventArgs);\n        this.previousValue = this.value;\n        //EJ2CORE-738:For this task we update the textarea value to the input when input tag with multiline is present\n        if (this.element.tagName === 'INPUT' && this.multiline && Browser.info.name === 'mozilla') {\n            this.element.value = this.respectiveElement.value;\n        }\n    };\n    TextBox.prototype.bindClearEvent = function () {\n        if (this.showClearButton && this.respectiveElement.tagName !== 'TEXTAREA') {\n            if (this.enabled) {\n                EventHandler.add(this.textboxWrapper.clearButton, 'mousedown touchstart', this.resetInputHandler, this);\n            }\n            else {\n                EventHandler.remove(this.textboxWrapper.clearButton, 'mousedown touchstart', this.resetInputHandler);\n            }\n        }\n    };\n    TextBox.prototype.resetInputHandler = function (event) {\n        event.preventDefault();\n        if (!(this.textboxWrapper.clearButton.classList.contains(HIDE_CLEAR)) || this.textboxWrapper.container.classList.contains('e-static-clear')) {\n            Input.setValue('', this.respectiveElement, this.floatLabelType, this.showClearButton);\n            if (this.isHiddenInput) {\n                this.element.value = this.respectiveElement.value;\n            }\n            this.setProperties({ value: this.respectiveElement.value }, true);\n            var eventArgs = {\n                event: event,\n                value: this.respectiveElement.value,\n                previousValue: this.inputPreviousValue,\n                container: this.textboxWrapper.container\n            };\n            this.trigger('input', eventArgs);\n            this.inputPreviousValue = this.respectiveElement.value;\n            this.raiseChangeEvent(event, true);\n        }\n    };\n    TextBox.prototype.unWireEvents = function () {\n        EventHandler.remove(this.respectiveElement, 'focus', this.focusHandler);\n        EventHandler.remove(this.respectiveElement, 'blur', this.focusOutHandler);\n        EventHandler.remove(this.respectiveElement, 'input', this.inputHandler);\n        EventHandler.remove(this.respectiveElement, 'change', this.changeHandler);\n        if (this.isForm) {\n            EventHandler.remove(this.formElement, 'reset', this.resetForm);\n        }\n        if (!isNullOrUndefined(this.textboxWrapper.container.querySelector('.e-float-text')) && this.floatLabelType === 'Auto'\n            && this.textboxWrapper.container.classList.contains('e-outline') &&\n            this.textboxWrapper.container.classList.contains('e-autofill')) {\n            EventHandler.remove((this.textboxWrapper.container.querySelector('.e-float-text')), 'animationstart', this.animationHandler);\n        }\n    };\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers.\n     * Also, it maintains the initial TextBox element from the DOM.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TextBox.prototype.destroy = function () {\n        this.unWireEvents();\n        if (this.element.tagName === 'INPUT' && this.multiline) {\n            detach(this.textboxWrapper.container.getElementsByTagName('textarea')[0]);\n            this.respectiveElement = this.element;\n            this.element.removeAttribute('type');\n        }\n        this.respectiveElement.value = this.respectiveElement.defaultValue;\n        this.respectiveElement.classList.remove('e-input');\n        this.removeAttributes(['aria-placeholder', 'aria-disabled', 'aria-readonly', 'aria-labelledby']);\n        if (!isNullOrUndefined(this.textboxWrapper)) {\n            this.textboxWrapper.container.insertAdjacentElement('afterend', this.respectiveElement);\n            detach(this.textboxWrapper.container);\n        }\n        this.textboxWrapper = null;\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Adding the icons to the TextBox component.\n     *\n     * @param { string } position - Specify the icon placement on the TextBox. Possible values are append and prepend.\n     * @param { string | string[] } icons - Icon classes which are need to add to the span element which is going to created.\n     * Span element acts as icon or button element for TextBox.\n     * @returns {void}\n     */\n    TextBox.prototype.addIcon = function (position, icons) {\n        Input.addIcon(position, icons, this.textboxWrapper.container, this.respectiveElement, this.createElement);\n    };\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns */\n    /**\n     * Gets the properties to be maintained in the persisted state.\n     *\n     */\n    TextBox.prototype.getPersistData = function () {\n        var keyEntity = ['value'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* eslint-enable valid-jsdoc, jsdoc/require-returns */\n    /**\n     * Adding the multiple attributes as key-value pair to the TextBox element.\n     *\n     * @param {string} attributes - Specifies the attributes to be add to TextBox element.\n     * @returns {void}\n     */\n    TextBox.prototype.addAttributes = function (attributes) {\n        for (var _i = 0, _a = Object.keys(attributes); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (key === 'disabled') {\n                this.setProperties({ enabled: false }, true);\n                Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n            }\n            else if (key === 'readonly') {\n                this.setProperties({ readonly: true }, true);\n                Input.setReadonly(this.readonly, this.respectiveElement);\n            }\n            else if (key === 'class') {\n                this.respectiveElement.classList.add(attributes[key]);\n            }\n            else if (key === 'placeholder') {\n                this.setProperties({ placeholder: attributes[key] }, true);\n                Input.setPlaceholder(this.placeholder, this.respectiveElement);\n            }\n            else if (key === 'rows' && this.respectiveElement.tagName === 'TEXTAREA') {\n                this.respectiveElement.setAttribute(key, attributes[key]);\n            }\n            else {\n                this.respectiveElement.setAttribute(key, attributes[key]);\n            }\n        }\n    };\n    /**\n     * Removing the multiple attributes as key-value pair to the TextBox element.\n     *\n     * @param { string[] } attributes - Specifies the attributes name to be removed from TextBox element.\n     * @returns {void}\n     */\n    TextBox.prototype.removeAttributes = function (attributes) {\n        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n            var key = attributes_1[_i];\n            if (key === 'disabled') {\n                this.setProperties({ enabled: true }, true);\n                Input.setEnabled(this.enabled, this.respectiveElement, this.floatLabelType, this.textboxWrapper.container);\n            }\n            else if (key === 'readonly') {\n                this.setProperties({ readonly: false }, true);\n                Input.setReadonly(this.readonly, this.respectiveElement);\n            }\n            else if (key === 'placeholder') {\n                this.setProperties({ placeholder: null }, true);\n                Input.setPlaceholder(this.placeholder, this.respectiveElement);\n            }\n            else {\n                this.respectiveElement.removeAttribute(key);\n            }\n        }\n    };\n    /**\n     * Sets the focus to widget for interaction.\n     *\n     * @returns {void}\n     */\n    TextBox.prototype.focusIn = function () {\n        if (document.activeElement !== this.respectiveElement && this.enabled) {\n            this.respectiveElement.focus();\n            if (this.textboxWrapper.container.classList.contains('e-input-group')\n                || this.textboxWrapper.container.classList.contains('e-outline')\n                || this.textboxWrapper.container.classList.contains('e-filled')) {\n                addClass([this.textboxWrapper.container], [TEXTBOX_FOCUS]);\n            }\n        }\n    };\n    /**\n     * Remove the focus from widget, if the widget is in focus state.\n     *\n     * @returns {void}\n     */\n    TextBox.prototype.focusOut = function () {\n        if (document.activeElement === this.respectiveElement && this.enabled) {\n            this.respectiveElement.blur();\n            if (this.textboxWrapper.container.classList.contains('e-input-group')\n                || this.textboxWrapper.container.classList.contains('e-outline')\n                || this.textboxWrapper.container.classList.contains('e-filled')) {\n                removeClass([this.textboxWrapper.container], [TEXTBOX_FOCUS]);\n            }\n        }\n    };\n    __decorate([\n        Property('text')\n    ], TextBox.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], TextBox.prototype, \"readonly\", void 0);\n    __decorate([\n        Property(null)\n    ], TextBox.prototype, \"value\", void 0);\n    __decorate([\n        Property('Never')\n    ], TextBox.prototype, \"floatLabelType\", void 0);\n    __decorate([\n        Property('')\n    ], TextBox.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(null)\n    ], TextBox.prototype, \"placeholder\", void 0);\n    __decorate([\n        Property('on')\n    ], TextBox.prototype, \"autocomplete\", void 0);\n    __decorate([\n        Property({})\n    ], TextBox.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property(false)\n    ], TextBox.prototype, \"multiline\", void 0);\n    __decorate([\n        Property(true)\n    ], TextBox.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(false)\n    ], TextBox.prototype, \"showClearButton\", void 0);\n    __decorate([\n        Property(false)\n    ], TextBox.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Property(null)\n    ], TextBox.prototype, \"width\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"blur\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"focus\", void 0);\n    __decorate([\n        Event()\n    ], TextBox.prototype, \"input\", void 0);\n    TextBox = __decorate([\n        NotifyPropertyChanges\n    ], TextBox);\n    return TextBox;\n}(Component));\nexport { TextBox };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}